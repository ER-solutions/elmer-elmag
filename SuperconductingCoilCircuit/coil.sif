! A test case for circuits to power a super conducting magnet (ramp-up)
!
! Test case authors: Eelis Takala, Frederic Trillaud
! Original date: October 2020
! eelis.takala@gmail.com, ftrillaudp@gmail.com

INCLUDE coil-circuits.definitions

Header
  CHECK KEYWORDS Warn
  Mesh DB "." "MESH"
  Results Directory "RESU"
End

Simulation
  Coordinate System = String "Cartesian 3D"
  Coordinate Mapping(3) = 1 2 3
  Simulation Type = String "Transient"
  Steady State Max Iterations = 1
  TimeStepping Method = BDF
  BDF Order = 1
  ! --- Coil area A = 0.0064 m^2, N = 8153, Je = 1.274e8 A/m^2, NI = Je*A = 815360 A-t, and I = 100.007 A
  $ I = 100 ! providing the current
  $ ramp_rate = 20 ! A/s
  $ ramp_time = I/ramp_rate
  $ nof_tsteps = 1
  Timestep Sizes(1) = Real $ ramp_time/nof_tsteps
  TimeStep Intervals(1) = Integer $ nof_tsteps
  Output Intervals(1) = Integer 1
  Max Output Level = 5
End

Constants
  Gravity(4) = 0 0 -1 9.82
  Stefan Boltzmann = 5.67e-08
  Permittivity of Vacuum = 8.8542e-12
  Permeability of Vacuum = 1.256e-6
  Boltzmann Constant = 1.3807e-23
  Unit Charge = 1.602e-19
End

Body 1
  Name = "coil"
  Target Bodies(1) = 1
  Equation = 1
  Material = 1
  Body Force = 1
  Initial Condition = 1
End

Body 2
  Name = "air"
  Target Bodies(1) = 2
  Equation = 2
  Material = 1
  Initial Condition = 1
End

Component 1    !---- Coil
  Name = String "Coil"
  Coil Type = String "test"
  Master Bodies(1) = Integer 1
  Desired Current Density = Real 1.0
  Coil Type = String stranded
  Coil Use W Vector = Logical True
  W Vector Variable Name = String "CoilCurrent e"
  ! ---- Nb3Sn wire diameter of 1 mm in a coil having a cross-section: 0.08 m x 0.08 m
  Number of Turns = Real 8153.0
  Electrode Area = Real 0.0064
  Resistance = Real 0.0
End

Material 1     !---- Dummy
  Name = "Dummy"
  Relative Permeability = Real 1.0
  Relative Permittivity = Real 1.0
End

Body Force 1   !---- Source and circuit
  Name = "Source and circuit"
  
  ! Fermi-Dirac distribution to represent the current interruption in the circuit
  !$td = 1 ! detection time
  !$t0 = 0.05 ! fast current decay
  !IS1 = Variable time; Real MATC "Je/(exp((tx-td)/t0)+1)"
  
  ! --- Rampoing-up the coil
  $t1 = ramp_time ! time to reach the current density Je in [s]
  IS1 = Variable time; Real MATC "if (tx <= t1) ((I/t1)*tx); else I;"
End

Boundary Condition 1
  Name = "Air boundary"
  Target Boundaries(1) = 4
  A {e} = real 0
  A = real 0
  Jfix = real 0.0
End

Initial Condition 1
  Name = "Initial state: magnetodynamics"
  A {e} = real 0
  A = real 0
  Jfix = real 0.0
End

Solver 1  !---- CoilSolver, CoilSolver
  Exec Solver = Before Timestep
  Equation = "CoilSolver"
  Procedure = "CoilSolver" "CoilSolver"
  
  Steady State Convergence Tolerance = 1e-06 ! related to the Steady State Iterations (see Simulation)
  Linear System Solver = "Iterative"
  Linear System Preconditioning = ILU1
  Linear System Max Iterations = 500
  Linear System Convergence Tolerance = 1e-7
  Linear System Iterative Method = BiCGStab
  Linear System Residual Output = 1
  ! When we normalize, we introduce propably some divergence that
  ! does not impress the solver very much... Helmholtz projection needed?
  Normalize Coil Current = Logical True ! necessary to have a uniform current across the coil
  Fix Input Current Density = Logical True
  Nonlinear System Consistent Norm = Logical True
  Coil Closed = Logical True
  Narrow Interface = Logical True
  Save Coil Set = Logical True
  Save Coil Index = Logical True
  Calculate Elemental Fields = Logical True
  
  Coil Normal(3) = Real 0. 0. 1.
End

Solver 2  !---- CircuitsAndDynamics, CircuitsAndDynamics
   Exec Solver = Always
   Equation = Circuits
   Variable = X
   No Matrix = Logical True
   Procedure = "CircuitsAndDynamics" "CircuitsAndDynamics"
End

Solver 3  !---- MagnetoDynamics, WhitneyAVSolver
   Exec Solver = Always
   Equation = "MGDynamics"
   Variable = "A"
   Procedure = "MagnetoDynamics" "WhitneyAVSolver"
   
   NonLinear System Relaxation Factor = 1
   Export Lagrange Multiplier = Logical True
   Linear System Solver = Iterative
   Linear System Iterative Method = BicgstabL
   Linear System preconditioning = none
   Linear System Convergence Tolerance = 1.e-8
   Linear System Max Iterations = 3000
   Linear System Residual Output = 10
   Linear System ILUT Tolerance=1e-8
   BicgstabL polynomial degree = 6
   Steady State Convergence Tolerance = 1e-08
End

Solver 4  !---- MagnetoAndDynamics, MagnetoDynamicsCalcFields
  Exec Solver = Always
  Equation = MGDynamicsCalc
  Procedure = "MagnetoDynamics" "MagnetoDynamicsCalcFields"
  
  Potential Variable = String "A"
  Steady State Convergence Tolerance = 1.0e-6
  
  Linear System Solver = Iterative
  Linear System Symmetric = True
  Linear System Iterative Method = CG
  Linear System Max Iterations = 5000
  Linear System Convergence Tolerance = 1.0e-6
  Linear System Preconditioning = ILU0
  Linear System ILUT Tolerance = 1.0e-3
  Linear System Abort Not Converged = False
  Linear System Residual Output = 1
  Linear System Precondition Recompute = 1
  Discontinuous Bodies = Logical True
  
  Calculate Elemental Fields = Logical True
  Calculate Current Density = Logical True
End

Solver 5  !---- CircuitsAndDynamics, CircuitsOutput
   Exec Solver = Always
   Equation = Circuits Output
   Procedure = "CircuitsAndDynamics" "CircuitsOutput"
End

Solver 6  !---- ResultOuputSolve, ResultOuputSolver
   Exec Solver = After timestep
   Equation = "ResultOutput"
   Procedure = "ResultOutputSolve" "ResultOutputSolver"
   
   Vtu Format = Logical True
   Binary Output = Logical True
   
   Output File Name = File "coil"
   
   Save Geometry Ids = Logical True
End

Solver 7  !---- SaveData, SaveScalars (Write circuit variables to file)
   Exec Solver = After timestep
   Equation = "sv"
   Procedure = "SaveData" "SaveScalars"
   Filename = "coil.dat"
End

Equation 1
  Name = "MagnetoDynamic for coil"
  Active Solvers(4) = 1 2 3 4 6
End

Equation 2
  Name = "MagnetoDynamic for air"
  Active Solvers(2) = 3 4 6
End

