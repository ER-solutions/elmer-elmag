! A test case for multiple coils with associated circuits
!
! Test case authors: Eelis Takala, Frederic Trillaud
! Original date: August 2022
! eelis.takala@gmail.com, ftrillaudp@gmail.com

Header
  CHECK KEYWORDS Warn
  Mesh DB "." "MESH"
  Results Directory "RESU"
End

! Parameters
! --- Coil area A, current density Je, Amper-turns NI = Je*A, current in strand I, number of turns N
$ Ac = 0.0025
$ Je = 1e7

!--- Coil 1 and 3:
$ I1 = 50.0
$ Nt = Je * Ac / I1
!--- Coil 2:
$ I2 = 100.0
!--- Ramp rate in A/s
$ ramp_rate = 100.0
!--- Time to complete the ramp
$ ramp_time1 = I1/ramp_rate
$ ramp_time2 = I2/ramp_rate
!--- Plateau after ramp
$ plateau = 1.0
!--- Number of time steps
$ nof_tstp_1 = 5.0
$ nof_tstp_2 = 3.0
!--- Size of time steps
$ sz_tstp_a = ramp_time1 / nof_tstp_1
$ sz_tstp_b = ramp_time2 / nof_tstp_1
$ sz_tstp_1 = min(sz_tstp_a sz_tstp_b)
$ sz_tstp_2 = plateau / nof_tstp_2

! Circuit parameters
$ Rcl1 = 0.1
$ Rcl2 = 0.1

Include "circuits.definitions"


Simulation
  Coordinate System = String "Cartesian 3D"
  Coordinate Mapping(3) = 1 2 3
  Simulation Type = String "Transient"
  Steady State Max Iterations = 1

  TimeStepping Method = BDF
  BDF Order = 1

  Timestep Sizes(2) = Real $ sz_tstp_1 sz_tstp_2
  TimeStep Intervals(2) = Integer $ nof_tstp_1  nof_tstp_2
  Output Intervals(2) = Integer 1 1

  Output File = "result.dat"

  Max Output Level = 10
End

Constants
  Gravity(4) = 0 0 -1 9.82
  Stefan Boltzmann = 5.67e-08
  Permittivity of Vacuum = 8.8542e-12
  Permeability of Vacuum = 1.256e-6
  Boltzmann Constant = 1.3807e-23
  Unit Charge = 1.602e-19
End

Body 1
  Name = "coil 1"
  Target Bodies(1) = 1
  Equation = 1
  Material = 2
  Initial Condition = 1
  Body Force = 1
End

Body 2
  Name = "coil 2"
  Target Bodies(1) = 2
  Equation = 1
  Material = 2
  Initial Condition = 1
  Body Force = 1
End

Body 3
  Name = "coil 3"
  Target Bodies(1) = 3
  Equation = 1
  Material = 2
  Initial Condition = 1
  Body Force = 1
End

Body 4
  Name = "magnetic core"
  Target Bodies(1) = 4
  Equation = 2
  Material = 3
  Initial Condition = 1
End

Body 5
  Name = "air"
  Target Bodies(1) = 5
  Equation = 2
  Material = 1
  Initial Condition = 1
End


Component 1
  Name = String "Coil 1"
  Coil Type = String "test"
  Master Bodies(1) = Integer 1

  Number of Turns = Real $ Nt
  Electrode Area = Real $ Ac
  Resistance = Real 0.0

  Coil Type = String stranded
  Coil Use W Vector = Logical True
  W Vector Variable Name = String "CoilCurrent e"
  Desired Current Density = Real 1.0
  Fit Coil = Logical False
  Coil Normal(3) = Real 0.0 0.0 1.0
End

Component 2
  Name = String "Coil 2"
  Coil Type = String "test"
  Master Bodies(1) = Integer 2

  Number of Turns = Real $ Nt
  Electrode Area = Real $ Ac
  Resistance = Real 0.0

  Coil Type = String stranded
  Coil Use W Vector = Logical True
  W Vector Variable Name = String "CoilCurrent e"
  Desired Current Density = Real 1.0
  Fit Coil = Logical False
  Coil Normal(3) = Real 0.0 0.0 1.0
End

Component 3
  Name = String "Coil 3"
  Coil Type = String "test"
  Master Bodies(1) = Integer 3

  Number of Turns = Real $ Nt
  Electrode Area = Real $ Ac
  Resistance = Real 0.0

  Coil Type = String stranded
  Coil Use W Vector = Logical True
  W Vector Variable Name = String "CoilCurrent e"
  Desired Current Density = Real 1.0
  Fit Coil = Logical False
  Coil Normal(3) = Real 0.0 0.0 1.0
End


Body Force 1
  Name = "Sources"
  !--- Coil 1 and 3
  IS1 = Variable time; Real MATC "if (tx <= ramp_time1) (ramp_rate*tx); else I1;"
  !--- Coil 2
  IS2 = Variable time; Real MATC "if (tx <= ramp_time2) (ramp_rate*tx); else I2;"
End


Material 1
  Name = "Air"
  Relative Permeability = Real 1.0
  Relative Permittivity = Real 1.0
  Electric Conductivity = Real 0.0
End

Material 2
  Name = "Inductor"
  Relative Permeability = Real 1.0
  Relative Permittivity = Real 1.0

  !--- Read into the circuit solver: computes the resistance as the sum of all the element contribution
  ! Electric Conductivity = Real 0.1

  !--- Parameters of superconducting wire and coil
  Matrix Density = Real 8960.0
  Superconductor Density = Real 7000.0
  Matrix Electric Conductivity = Real 1e8 ! lumped materials called matrix
  Critical Temperature = Real 16.8
  N-Value = Real 15.0
  Critical Electrical Field = Real 1e-4
  Operating Temperature = Real 4.5
  Matrix to Superconductor Ratio = Real 1.2
  Filling Factor = Real 0.9

  !--- Read into the circuit solver: computes the resistance as the sum of all the element contribution
  Electric Conductivity = Variable 4.2, Magnetic Flux Density e, Current Density e
    Real Procedure "./Fortran90/electricalConductivity" "getElectricalConductivity"
End

Material 3
  Name = "Iron"
  Relative Permeability = Real 1.0
  Relative Permittivity = Real 1.0
  Electric Conductivity = Real 0.0

  H-B Curve = Variable "dummy"
    Real Cubic Monotone
      Include "./DATA/curve_BH-CERN.dat"
    End
End


Initial Condition 1
  Name = "Initial state"
  A {e} = real 0
  A = real 0
  Jfix = real 0.0
End

Boundary Condition 1
  Name = "Air boundary"
  Target Boundaries(1) = 9
  A {e} = real 0
  A = real 0
  Jfix = real 0.0
End


Equation 1
  Name = "MagnetoDynamic for coil"
  Active Solvers(7) = 1 2 3 4 5 6 7
End

Equation 2
  Name = "MagnetoDynamic for air"
  Active Solvers(4) = 3 4 5 6
End


Solver 1  !--- CoilSolver: Current density in closed coil
  Exec Solver = Before All
  Equation = "CoilSolver"
  Procedure = "CoilSolver" "CoilSolver"

  Steady State Convergence Tolerance = 1.0e-8 ! related to the Steady State Iterations (see Simulation)

  Linear System Solver = "Iterative"
  Linear System Preconditioning = ILU1
  Linear System Max Iterations = 500
  Linear System Convergence Tolerance = 1.0e-8 ! to get proper current density flow
  Linear System Iterative Method = BiCGStab
  Linear System Residual Output = 1

  Normalize Coil Current = Logical True ! necessary to have a uniform current across the coil
  Fix Input Current Density = Logical True
  Nonlinear System Consistent Norm = Logical True
  Coil Closed = Logical True
  Narrow Interface = Logical True

  Save Coil Set = Logical True
  Save Coil Index = Logical True
  Calculate Elemental Fields = Logical True
End

Solver 2 !--- CircuitsAndDynamics: External electrical circuit
   Exec Solver = Always
   Equation = Circuits
   Procedure = "CircuitsAndDynamics" "CircuitsAndDynamics"
   Variable = X
   No Matrix = Logical True
End

Solver 3  !---- MagnetoDynamics, WhitneyAVSolver: A-V solver
   Exec Solver = Always
   Equation = "MGDynamics"
   Variable = "A"
   Procedure = "MagnetoDynamics" "WhitneyAVSolver"

   Nonlinear Pre Solvers(1) = 2 ! run the circuit solver iteratively
   Post Solvers(1) = 4 ! postprocess the circuit outputs

   Steady State Convergence Tolerance = 1.0e-8

   Nonlinear System Convergence Tolerance = 1e-6
   Nonlinear System Max Iterations = 50
   !Nonlinear System Newton After Iterations = 5 ! change from Picard to Newton after 5 iterations
   Nonlinear System Newton After Tolerance = 1.0e-6
   Nonlinear System Relaxation Factor = 0.98

   Export Lagrange Multiplier = Logical True

   !--- Solution circuit:
   Linear System Solver = Iterative
   Linear System Iterative Method = BicgstabL
   BicgstabL polynomial degree = 8
   Linear System Preconditioning = circuit ! inversion of circuit matrix
   Linear System Convergence Tolerance = 1.0e-8 ! add to drop the tolerance
   Linear System Max Iterations = 3000
   Linear System Residual Output = 20
End

Solver 4  !---- MagnetoAndDynamics, MagnetoDynamicsCalcFields: filed computation from A-V solver
  Exec Solver = Always
  Equation = MGDynamicsCalc
  Procedure = "MagnetoDynamics" "MagnetoDynamicsCalcFields"

  Potential Variable = String "A"

  Steady State Convergence Tolerance = 1.0e-8

  Linear System Solver = Iterative
  Linear System Symmetric = True
  Linear System Iterative Method = CG
  Linear System Max Iterations = 3000
  Linear System Convergence Tolerance = 1.0e-8
  Linear System Preconditioning = ILU0
  Linear System ILUT Tolerance = 1.0e-6
  Linear System Abort Not Converged = False
  Linear System Residual Output = 1
  Linear System Precondition Recompute = 1
  Linear System Residual Output = 10

  Discontinuous Bodies = Logical True

  Calculate Elemental Fields = Logical True
  Calculate Current Density = Logical True
End

Solver 5  !---- ResultOuputSolve, ResultOuputSolver
   Exec Solver = After timestep
   Equation = "ResultOutput"
   Procedure = "ResultOutputSolve" "ResultOutputSolver"

   Vtu Format = Logical True
   Binary Output = Logical True

   Output File Name = File "coil"

   Save Geometry Ids = Logical True
End

Solver 6  !---- CircuitsAndDynamics, CircuitsOutput
   Exec Solver = Always
   Equation = Circuits Output
   Procedure = "CircuitsAndDynamics" "CircuitsOutput"
End

Solver 7  !---- SaveData, SaveScalars (Write circuit variables to file)
   Exec Solver = After timestep
   Equation = "sv"
   Procedure = "SaveData" "SaveScalars"
   Filename = "coil.dat"
End
