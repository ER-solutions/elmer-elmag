ELMER SOLVER (v 9.0) STARTED AT: 2022/08/03 12:05:23
ParCommInit:  Initialize #PEs:            1
MAIN: 
MAIN: =============================================================
MAIN: ElmerSolver finite element software, Welcome!
MAIN: This program is free software licensed under (L)GPL
MAIN: Copyright 1st April 1995 - , CSC - IT Center for Science Ltd.
MAIN: Webpage http://www.csc.fi/elmer, Email elmeradm@csc.fi
MAIN: Version: 9.0 (Rev: unknown, Compiled: 2022-08-02)
MAIN:  Running one task without MPI parallelization.
MAIN:  Running with just one thread per task.
MAIN:  MUMPS library linked in.
MAIN:  Lua interpreter linked in.
MAIN: =============================================================
OpenIncludeFile: Trying to include file: "circuits.definitions"
MAIN: 
MAIN: 
MAIN: -------------------------------------
MAIN: Reading Model: case.sif
LoadInputFile: Scanning input file: case.sif
LoadInputFile: Scanning only size info
LoadInputFile: First time visiting
LoadInputFile: Reading base load of sif file
OpenIncludeFile: Trying to include file: "circuits.definitions"
OpenIncludeFile: Trying to include file: "./DATA/curve_BH-CERN.dat"
LoadInputFile: Loading input file: case.sif
LoadInputFile: Reading base load of sif file
OpenIncludeFile: Trying to include file: "circuits.definitions"
CheckKeyword:  Unlisted keyword: [electrode area] in section: [component 1]
CheckKeyword:  Unlisted keyword: [coil use w vector] in section: [component 1]
CheckKeyword:  Unlisted keyword: [w vector variable name] in section: [component 1]
CheckKeyword:  Unlisted keyword: [fit coil] in section: [component 1]
CheckKeyword:  Unlisted keyword: [electrode area] in section: [component 2]
CheckKeyword:  Unlisted keyword: [coil use w vector] in section: [component 2]
CheckKeyword:  Unlisted keyword: [w vector variable name] in section: [component 2]
CheckKeyword:  Unlisted keyword: [fit coil] in section: [component 2]
CheckKeyword:  Unlisted keyword: [electrode area] in section: [component 3]
CheckKeyword:  Unlisted keyword: [coil use w vector] in section: [component 3]
CheckKeyword:  Unlisted keyword: [w vector variable name] in section: [component 3]
CheckKeyword:  Unlisted keyword: [fit coil] in section: [component 3]
CheckKeyword:  Unlisted keyword: [is1] in section: [body force 1]
CheckKeyword:  Unlisted keyword: [is2] in section: [body force 1]
CheckKeyword:  Unlisted keyword: [matrix density] in section: [material 2]
CheckKeyword:  Unlisted keyword: [superconductor density] in section: [material 2]
CheckKeyword:  Unlisted keyword: [matrix electric conductivity] in section: [material 2]
CheckKeyword:  Unlisted keyword: [critical temperature] in section: [material 2]
CheckKeyword:  Unlisted keyword: [n-value] in section: [material 2]
CheckKeyword:  Unlisted keyword: [critical electrical field] in section: [material 2]
CheckKeyword:  Unlisted keyword: [operating temperature] in section: [material 2]
CheckKeyword:  Unlisted keyword: [matrix to superconductor ratio] in section: [material 2]
CheckKeyword:  Unlisted keyword: [filling factor] in section: [material 2]
Loading user function library: [./Fortran90/electricalConductivity]...[getElectricalConductivity]
OpenIncludeFile: Trying to include file: "./DATA/curve_BH-CERN.dat"
CheckKeyword:  Unlisted keyword: [a {e}] in section: [initial condition 1]
CheckKeyword:  Unlisted keyword: [a] in section: [initial condition 1]
CheckKeyword:  Unlisted keyword: [jfix] in section: [initial condition 1]
CheckKeyword:  Unlisted keyword: [a {e}] in section: [boundary condition 1]
CheckKeyword:  Unlisted keyword: [a] in section: [boundary condition 1]
CheckKeyword:  Unlisted keyword: [jfix] in section: [boundary condition 1]
CheckKeyword:  Unlisted keyword: [save coil set] in section: [solver 1]
CheckKeyword:  Unlisted keyword: [save coil index] in section: [solver 1]
LoadInputFile: Number of BCs: 1
LoadInputFile: Number of Body Forces: 1
LoadInputFile: Number of Initial Conditions: 1
LoadInputFile: Number of Materials: 3
LoadInputFile: Number of Equations: 2
LoadInputFile: Number of Solvers: 7
LoadInputFile: Number of Bodies: 5
ListTagKeywords: Setting weight for keywords!
ListTagKeywords: No parameters width suffix: normalize by area
ListTagKeywords: Setting weight for keywords!
ListTagKeywords: No parameters width suffix: normalize by volume
Loading user function library: [CoilSolver]...[CoilSolver_Init0]
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_Init0]
Loading user function library: [MagnetoDynamics]...[WhitneyAVSolver_Init0]
WhitneyAVSolver_Init0: Setting element type to: "n:1 e:1"
Loading user function library: [MagnetoDynamics]...[MagnetoDynamicsCalcFields_Init0]
Loading user function library: [ResultOutputSolve]...[ResultOutputSolver_Init0]
Loading user function library: [CircuitsAndDynamics]...[CircuitsOutput_Init0]
Loading user function library: [SaveData]...[SaveScalars_Init0]
LoadMesh: Loading serial mesh!
ElmerAsciiMesh: Performing step: 1
ElmerAsciiMesh: Base mesh name: ./MESH
ReadHeaderFile: Reading header info from file: ./MESH/mesh.header
InitializeMesh: Number of nodes in mesh: 9022
InitializeMesh: Number of bulk elements in mesh: 51311
InitializeMesh: Number of boundary elements in mesh: 11136
InitializeMesh: Initial number of max element nodes: 4
ElmerAsciiMesh: Performing step: 2
ReadNodesFile: Reading nodes from file: ./MESH/mesh.nodes
MapCoordinates: Performing coordinate mapping
SetMeshDimension: Dimension of mesh is: 3
SetMeshDimension: Max dimension of mesh is: 3
ElmerAsciiMesh: Performing step: 3
ReadElementsFile: Reading bulk elements from file: ./MESH/mesh.elements
ElmerAsciiMesh: Performing step: 4
ReadBoundaryFile: Reading boundary elements from file: ./MESH/mesh.boundary
PermuteNodeNumbering: Performing node mapping
MapBodiesAndBCs: Remapping bodies
MapBodiesAndBCs: Minimum initial body index: 1
MapBodiesAndBCs: Maximum initial body index: 5
MapBodiesAndBCs: Remapping boundaries
MapBodiesAndBCs: Minimum initial boundary index: 6
MapBodiesAndBCs: Maximum initial boundary index: 22
ElmerAsciiMesh: Performing step: 5
ElmerAsciiMesh: Performing step: 6
LoadMesh: Loading mesh done
NonNodalElements: Requested elements require creation of edges
FindMeshEdges: Determining faces in 3D mesh
FindMeshFaces3D: Number of faces found: 102717
FindMeshEdges: Determining edges in 3D mesh
FindMeshEdges3D: Number of edges found: 60426
LoadMesh: Preparing mesh done
LoadMesh: Elapsed REAL time:     0.3935 (s)
MeshStabParams: Computing stabilization parameters
MeshStabParams: Elapsed REAL time:     0.0068 (s)
MAIN: -------------------------------------
AddMeshCoordinates: Setting mesh coordinates and time
AddSolvers: Setting up 7 solvers
AddSolvers: Setting up solver 1: coilsolver
AddEquationBasics: Using procedure: CoilSolver CoilSolver
AddEquationBasics: Setting up solver: coilsolver
Loading user function library: [CoilSolver]...[CoilSolver_Init]
Loading user function library: [CoilSolver]...[CoilSolver_bulk]
Loading user function library: [CoilSolver]...[CoilSolver]
AddEquationBasics: Time stepping method is: bdf
AddEquationBasics: Creating standard variable: coiltmp
OptimizeBandwidth: ---------------------------------------------------------
OptimizeBandwidth: Computing matrix structure for: coilsolver...done.
OptimizeBandwidth: Half bandwidth without optimization: 4521
OptimizeBandwidth: 
OptimizeBandwidth: Bandwidth Optimization ...done.
OptimizeBandwidth: Half bandwidth after optimization: 78
OptimizeBandwidth: ---------------------------------------------------------
CreateDGPerm: Created permutation for DG nodes: 56380
AddSolvers: Setting up solver 2: circuits
AddEquationBasics: Using procedure: CircuitsAndDynamics CircuitsAndDynamics
AddEquationBasics: Setting up solver: circuits
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_Init]
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_bulk]
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics]
AddEquationBasics: Time stepping method is: bdf
AddEquationBasics: Creating standard variable: x
AddSolvers: Setting up solver 3: mgdynamics
AddEquationBasics: Using procedure: MagnetoDynamics WhitneyAVSolver
AddEquationBasics: Setting up solver: mgdynamics
Loading user function library: [MagnetoDynamics]...[WhitneyAVSolver_Init]
Loading user function library: [MagnetoDynamics]...[WhitneyAVSolver_bulk]
Loading user function library: [MagnetoDynamics]...[WhitneyAVSolver]
AddEquationBasics: Time stepping method is: bdf
AddEquationBasics: Creating standard variable: a
OptimizeBandwidth: ---------------------------------------------------------
OptimizeBandwidth: Computing matrix structure for: mgdynamics...done.
OptimizeBandwidth: Half bandwidth without optimization: 68860
OptimizeBandwidth: 
OptimizeBandwidth: Bandwidth Optimization ...done.
OptimizeBandwidth: Half bandwidth after optimization: 11502
OptimizeBandwidth: ---------------------------------------------------------
AddSolvers: Setting up solver 4: mgdynamicscalc
AddEquationBasics: Using procedure: MagnetoDynamics MagnetoDynamicsCalcFields
AddEquationBasics: Setting up solver: mgdynamicscalc
Loading user function library: [MagnetoDynamics]...[MagnetoDynamicsCalcFields_Init]
Loading user function library: [MagnetoDynamics]...[MagnetoDynamicsCalcFields_bulk]
Loading user function library: [MagnetoDynamics]...[MagnetoDynamicsCalcFields]
AddEquationBasics: Time stepping method is: bdf
AddEquationBasics: Creating standard variable: hr_dummy
OptimizeBandwidth: ---------------------------------------------------------
OptimizeBandwidth: Computing matrix structure for: mgdynamicscalc...done.
OptimizeBandwidth: Half bandwidth without optimization: 8749
OptimizeBandwidth: 
OptimizeBandwidth: Bandwidth Optimization ...done.
OptimizeBandwidth: Half bandwidth after optimization: 1594
OptimizeBandwidth: ---------------------------------------------------------
CreateDGPerm: Created permutation for DG nodes: 205244
CreateDGPerm: Created permutation for DG nodes: 205244
AddSolvers: Setting up solver 5: resultoutput
AddEquationBasics: Using procedure: ResultOutputSolve ResultOutputSolver
AddEquationBasics: Setting up solver: resultoutput
Loading user function library: [ResultOutputSolve]...[ResultOutputSolver_Init]
Loading user function library: [ResultOutputSolve]...[ResultOutputSolver_bulk]
Loading user function library: [ResultOutputSolve]...[ResultOutputSolver]
AddEquationBasics: Time stepping method is: bdf
AddSolvers: Setting up solver 6: circuits output
AddEquationBasics: Using procedure: CircuitsAndDynamics CircuitsOutput
AddEquationBasics: Setting up solver: circuits output
Loading user function library: [CircuitsAndDynamics]...[CircuitsOutput_Init]
Loading user function library: [CircuitsAndDynamics]...[CircuitsOutput_bulk]
Loading user function library: [CircuitsAndDynamics]...[CircuitsOutput]
AddEquationBasics: Time stepping method is: bdf
AddSolvers: Setting up solver 7: sv
AddEquationBasics: Using procedure: SaveData SaveScalars
AddEquationBasics: Setting up solver: sv
Loading user function library: [SaveData]...[SaveScalars_Init]
Loading user function library: [SaveData]...[SaveScalars_bulk]
Loading user function library: [SaveData]...[SaveScalars]
AddEquationBasics: Time stepping method is: bdf
AddTimeEtc: Setting time and other global variables
ElmerSolver: Random seed initialized to: 314159265
SetInitialConditions: Setting up initial conditions (if any)
ElmerSolver: Number of timesteps to be saved: 8
ListTagCount: Found number of normalized keywords: 0
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: coilsolver
CoilSolver: --------------------------------------
CoilSolver: Solving current distribution in a coil
CoilSolver: --------------------------------------
CoilSolver: Assuming that all coils are closed!
CoilSolver: Saving elemental coil index to variable >CoilIndex e<
CoilSolver: Treating coil in Component: 1
CoilSolver: Coil volume:  3.5338E-03
CoilSolver: Coil center:  6.0542E-06  2.7289E-06  6.2499E-02
CoilSolver: Choosing narrow fixing nodes for set: 1
CoilSolver: Choosing narrow fixing nodes for set: 2
CoilSolver: Treating coil in Component: 2
CoilSolver: Coil volume:  3.5344E-03
CoilSolver: Coil center:  3.9377E-06  2.7991E-06 -1.1264E-07
CoilSolver: Choosing narrow fixing nodes for set: 1
CoilSolver: Choosing narrow fixing nodes for set: 2
CoilSolver: Treating coil in Component: 3
CoilSolver: Coil volume:  3.5343E-03
CoilSolver: Coil center:  8.5529E-07 -6.9431E-07 -6.2500E-02
CoilSolver: Choosing narrow fixing nodes for set: 1
CoilSolver: Choosing narrow fixing nodes for set: 2
CoilSolver: Coil system consists of 3 coils
CoilSolver: Set1 : 59 +nodes and 60 -nodes
CoilSolver: Set2 : 54 +nodes and 57 -nodes
CoilSolver: Computing the dummy potential field
DefaultFinishBulkAssembly: Saving bulk values for: coilsolver
CutInterfaceConnections: Number of connections cut: 356
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 119
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu1
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstab
CRS_IncompleteLU: ILU(1) (Real), Performing Factorization:
CRS_IncompleteLU: Allocated LU matrix of size: 76481
CRS_IncompleteLU: ILU(1) (Real), NOF nonzeros:     76482
CRS_IncompleteLU: ILU(1) (Real), filling (%) :       151
CRS_IncompleteLU: ILU(1) (Real), Factorization ready at (s):     0.00
       1 0.1084E-01
       2 0.5876E-02
       3 0.6301E-02
       4 0.3592E-02
       5 0.7615E-02
       6 0.1948E-02
       7 0.1634E-02
       8 0.4531E-02
       9 0.1093E-02
      10 0.8881E-03
      11 0.6836E-03
      12 0.4950E-03
      13 0.3543E-03
      14 0.2847E-03
      15 0.2801E-03
      16 0.3050E-03
      17 0.6093E-03
      18 0.1853E-03
      19 0.3883E-03
      20 0.5961E-04
      21 0.3319E-04
      22 0.2866E-04
      23 0.2678E-04
      24 0.2615E-04
      25 0.2338E-04
      26 0.1181E-04
      27 0.1163E-04
      28 0.1123E-04
      29 0.1974E-05
      30 0.2940E-05
      31 0.1759E-05
      32 0.1782E-05
      33 0.1233E-05
      34 0.8673E-06
      35 0.5916E-06
      36 0.6009E-06
      37 0.5756E-06
      38 0.2892E-06
      39 0.1636E-06
      40 0.1508E-06
      41 0.1483E-06
      42 0.1473E-06
      43 0.2020E-06
      44 0.7774E-07
      45 0.4115E-07
      46 0.3490E-06
      47 0.2981E-08
      47 0.2981E-08
SolveLinearSystem: Calculating nodal loads
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=1) (NRM,RELC): ( 0.57786435      2.0000000     ) :: coilsolver
CoilSolver: Discrepancy of start and end coil currents:   1.8761E-06
CoilSolver: Initial coil current for coil 1:  1.8183E+09
CoilSolver: Coil potential multiplier:  5.4998E-10
CoilSolver: Discrepancy of start and end coil currents:   1.5805E-07
CoilSolver: Initial coil current for coil 2:  1.8131E+09
CoilSolver: Coil potential multiplier:  5.5155E-10
CoilSolver: Discrepancy of start and end coil currents:   1.9180E-07
CoilSolver: Initial coil current for coil 3:  1.8122E+09
CoilSolver: Coil potential multiplier:  5.5183E-10
DefaultFinishBulkAssembly: Saving bulk values for: coilsolver
CutInterfaceConnections: Number of connections cut: 324
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 111
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu1
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstab
CRS_IncompleteLU: ILU(1) (Real), Performing Factorization:
CRS_IncompleteLU: ILU(1) (Real), NOF nonzeros:     76482
CRS_IncompleteLU: ILU(1) (Real), filling (%) :       151
CRS_IncompleteLU: ILU(1) (Real), Factorization ready at (s):     0.00
       1 0.1193E-01
       2 0.5421E-02
       3 0.3797E-02
       4 0.3078E-02
       5 0.2192E-02
       6 0.1090E-02
       7 0.7355E-03
       8 0.3472E-03
       9 0.2275E-03
      10 0.2105E-03
      11 0.6802E-04
      12 0.4766E-04
      13 0.1883E-03
      14 0.4259E-03
      15 0.2516E-02
      16 0.6204E-03
      17 0.5539E-02
      18 0.4438E-02
      19 0.2818E-03
      20 0.1424E-03
      21 0.1338E-04
      22 0.3535E-05
      23 0.2799E-05
      24 0.2632E-05
      25 0.2425E-05
      26 0.2015E-05
      27 0.1706E-05
      28 0.9696E-06
      29 0.6949E-06
      30 0.5359E-06
      31 0.5292E-06
      32 0.4779E-06
      33 0.3565E-06
      34 0.1957E-06
      35 0.1752E-06
      36 0.3165E-06
      37 0.7880E-07
      38 0.5146E-07
      39 0.2611E-07
      40 0.2643E-07
      41 0.2260E-07
      42 0.2090E-07
      43 0.1803E-07
      44 0.1289E-07
      45 0.9393E-08
      45 0.9393E-08
SolveLinearSystem: Calculating nodal loads
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=2) (NRM,RELC): ( 0.58093012     0.52913087E-02 ) :: coilsolver
CoilSolver: Discrepancy of start and end coil currents:   2.3978E-05
CoilSolver: Initial coil current for coil 1:  1.8137E+09
CoilSolver: Coil potential multiplier:  5.5137E-10
CoilSolver: Discrepancy of start and end coil currents:   1.2305E-05
CoilSolver: Initial coil current for coil 2:  1.8083E+09
CoilSolver: Coil potential multiplier:  5.5301E-10
CoilSolver: Discrepancy of start and end coil currents:   4.1821E-05
CoilSolver: Initial coil current for coil 3:  1.8187E+09
CoilSolver: Coil potential multiplier:  5.4984E-10
CoilSolver: Computing current component: 1
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu1
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstab
CRS_IncompleteLU: ILU(1) (Real), Performing Factorization:
CRS_IncompleteLU: ILU(1) (Real), NOF nonzeros:     76482
CRS_IncompleteLU: ILU(1) (Real), filling (%) :       151
CRS_IncompleteLU: ILU(1) (Real), Factorization ready at (s):     0.00
       1 0.4955E-04
       2 0.8306E-08
       2 0.8306E-08
CoilSolver: Computing current component: 2
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu1
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstab
CRS_IncompleteLU: ILU(1) (Real), Performing Factorization:
CRS_IncompleteLU: ILU(1) (Real), NOF nonzeros:     76482
CRS_IncompleteLU: ILU(1) (Real), filling (%) :       151
CRS_IncompleteLU: ILU(1) (Real), Factorization ready at (s):     0.00
       1 0.8283E-04
       2 0.1753E-07
       3 0.4692E-11
       3 0.4692E-11
CoilSolver: Computing current component: 3
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu1
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstab
CRS_IncompleteLU: ILU(1) (Real), Performing Factorization:
CRS_IncompleteLU: ILU(1) (Real), NOF nonzeros:     76482
CRS_IncompleteLU: ILU(1) (Real), filling (%) :       151
CRS_IncompleteLU: ILU(1) (Real), Factorization ready at (s):     0.00
       1 0.1444E-01
       2 0.3298E-05
       3 0.9652E-09
       3 0.9652E-09
CoilSolver: Minimum current components:  -4.6011E+02 -4.6887E+02 -2.4770E+01
CoilSolver: Maximum current components:   4.6649E+02  4.5860E+02  2.4655E+01
CoilSolver: Computing current component: 1
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu1
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstab
CRS_IncompleteLU: ILU(1) (Real), Performing Factorization:
CRS_IncompleteLU: ILU(1) (Real), NOF nonzeros:     76482
CRS_IncompleteLU: ILU(1) (Real), filling (%) :       151
CRS_IncompleteLU: ILU(1) (Real), Factorization ready at (s):     0.00
       1 0.4956E-04
       2 0.8306E-08
       2 0.8306E-08
CoilSolver: Computing current component: 2
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu1
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstab
CRS_IncompleteLU: ILU(1) (Real), Performing Factorization:
CRS_IncompleteLU: ILU(1) (Real), NOF nonzeros:     76482
CRS_IncompleteLU: ILU(1) (Real), filling (%) :       151
CRS_IncompleteLU: ILU(1) (Real), Factorization ready at (s):     0.00
       1 0.8283E-04
       2 0.1753E-07
       3 0.4692E-11
       3 0.4692E-11
CoilSolver: Computing current component: 3
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu1
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstab
CRS_IncompleteLU: ILU(1) (Real), Performing Factorization:
CRS_IncompleteLU: ILU(1) (Real), NOF nonzeros:     76482
CRS_IncompleteLU: ILU(1) (Real), filling (%) :       151
CRS_IncompleteLU: ILU(1) (Real), Factorization ready at (s):     0.00
       1 0.1444E-01
       2 0.3298E-05
       3 0.9652E-09
       3 0.9652E-09
CoilSolver: Minimum current components:  -4.6011E+02 -4.6887E+02 -2.4770E+01
CoilSolver: Maximum current components:   4.6649E+02  4.5860E+02  2.4655E+01
CoilSolver: Normalizing current density (as for stranded coil)
CoilSolver: Finding fixing potential for elemental current density!
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 1
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu1
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstab
CRS_IncompleteLU: ILU(1) (Real), Performing Factorization:
CRS_IncompleteLU: ILU(1) (Real), NOF nonzeros:     76482
CRS_IncompleteLU: ILU(1) (Real), filling (%) :       151
CRS_IncompleteLU: ILU(1) (Real), Factorization ready at (s):     0.00
       1 0.2689E-02
       2 0.7797E-03
       3 0.5029E-03
       4 0.3812E-03
       5 0.2856E-03
       6 0.2807E-03
       7 0.1252E-03
       8 0.7279E-04
       9 0.4441E-04
      10 0.2388E-04
      11 0.7569E-05
      12 0.3709E-05
      13 0.2903E-05
      14 0.8161E-05
      15 0.1160E-05
      16 0.8631E-06
      17 0.8815E-06
      18 0.4422E-06
      19 0.4189E-06
      20 0.4876E-06
      21 0.7552E-06
      22 0.9139E-06
      23 0.5464E-06
      24 0.5324E-06
      25 0.1615E-06
      26 0.1016E-06
      27 0.1208E-07
      28 0.1543E-07
      29 0.1207E-07
      30 0.9569E-08
      30 0.9569E-08
SolveLinearSystem: Calculating nodal loads
CoilSolver: Fixing elemental current density to be divergence free!
CoilSolver: All done
CoilSolver: --------------------------------------
Loading user function library: [CoilSolver]...[CoilSolver_post]
MAIN: 
MAIN: -------------------------------------
MAIN: Time: 1/8:   1.000E-01
MAIN: -------------------------------------
MAIN: 
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
CircuitsAndDynamics: Initializing electric circuits for transient simulation
AddComponentsToBodyList: "Body 1" associated to "Component 1"
AddComponentsToBodyList: "Body 2" associated to "Component 2"
AddComponentsToBodyList: "Body 3" associated to "Component 3"
CircuitsAndDynamics: Circuit equations associated with solver index: 3
CircuitsAndDynamics: Defaulting name of Lagrange multiplier to: LagrangeMultiplier
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: mgdynamics
WhitneyAVSolver: -------------------------------------------
WhitneyAVSolver: Solving the AV equations with edge elements
DefaultStart: Starting solver: mgdynamics
WhitneyAVSolver: Nonlinear iteration: 1
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0564 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Creating variable for Lagrange multiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
BiCGStabl:       18 0.7497E-08 0.7497E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=1) (NRM,RELC): ( 0.14219718E-03  2.0000000     ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 2
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0535 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
BiCGStabl:       13 0.9197E-08 0.9197E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=2) (NRM,RELC): ( 0.14487819E-03 0.18678119E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 3
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0506 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
BiCGStabl:        9 0.5144E-08 0.5144E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=3) (NRM,RELC): ( 0.14492738E-03 0.33950931E-03 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 4
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0617 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
BiCGStabl:        7 0.1950E-08 0.1950E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=4) (NRM,RELC): ( 0.14492816E-03 0.53808668E-05 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 5
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0561 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
BiCGStabl:        2 0.9992E-08 0.9992E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=5) (NRM,RELC): ( 0.14492815E-03 0.13594340E-06 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
DefaultSlaveSolvers: Executing slave solvers: Post Solvers
DefaultSlaveSolvers: Calling slave solver: 4
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: mgdynamicscalc
MagnetoDynamicsCalcFields: ------------------------------
MagnetoDynamicsCalcFields: Computing postprocessed fields
MagnetoDynamicsCalcFields: Using potential variable: a
MagnetoDynamicsCalcFields: Number of components to compute: 6
MagnetoDynamicsCalcFields: Solving for field: magnetic flux density[magnetic flux density:3]
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
CRS_IncompleteLU: ILU(0) (Real), Performing Factorization:
CRS_IncompleteLU: Allocated LU matrix of size: 129273
CRS_IncompleteLU: ILU(0) (Real), NOF nonzeros:    129274
CRS_IncompleteLU: ILU(0) (Real), filling (%) :       100
CRS_IncompleteLU: ILU(0) (Real), Factorization ready at (s):     0.00
       7 0.2924E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=1) (NRM,RELC): ( 0.82076678E-01  2.0000000     ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.2834E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=2) (NRM,RELC): ( 0.83266810E-01 0.14395871E-01 ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3033E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=3) (NRM,RELC): ( 0.12218271     0.37883661     ) :: mgdynamicscalc
MagnetoDynamicsCalcFields: Solving for field: current density[current density:3]
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.5611E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=4) (NRM,RELC): (  676561.21      1.9999993     ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.6036E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=5) (NRM,RELC): (  672872.22     0.54674666E-02 ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3858E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=6) (NRM,RELC): (  7193.6957      1.9576882     ) :: mgdynamicscalc
MagnetoDynamicsCalcFields: Eddy current power:    4.240934E-02
MagnetoDynamicsCalcFields: ElectroMagnetic Field Energy:    1.570902E+02
Loading user function library: [MagnetoDynamics]...[MagnetoDynamicsCalcFields_post]
DefaultFinish: Finished solver: mgdynamics
WhitneyAVSolver: All done
WhitneyAVSolver: -------------------------------------------
Loading user function library: [MagnetoDynamics]...[WhitneyAVSolver_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: mgdynamicscalc
MagnetoDynamicsCalcFields: ------------------------------
MagnetoDynamicsCalcFields: Computing postprocessed fields
MagnetoDynamicsCalcFields: Using potential variable: a
MagnetoDynamicsCalcFields: Number of components to compute: 6
MagnetoDynamicsCalcFields: Solving for field: magnetic flux density[magnetic flux density:3]
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.2924E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=1) (NRM,RELC): ( 0.82076678E-01  1.9999544     ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.2834E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=2) (NRM,RELC): ( 0.83266810E-01 0.14395871E-01 ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3033E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=3) (NRM,RELC): ( 0.12218271     0.37883661     ) :: mgdynamicscalc
MagnetoDynamicsCalcFields: Solving for field: current density[current density:3]
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.5611E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=4) (NRM,RELC): (  676561.21      1.9999993     ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.6036E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=5) (NRM,RELC): (  672872.22     0.54674666E-02 ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3858E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=6) (NRM,RELC): (  7193.6957      1.9576882     ) :: mgdynamicscalc
MagnetoDynamicsCalcFields: Eddy current power:    4.240934E-02
MagnetoDynamicsCalcFields: ElectroMagnetic Field Energy:    1.570902E+02
Loading user function library: [MagnetoDynamics]...[MagnetoDynamicsCalcFields_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits output
DefaultStart: Starting solver: circuits output
CircuitsOutput: Initializing Lagrange multipliers of size: 19
CircuitsOutput: Writing Circuit Results
CircuitsOutput: Writing Circuit Variables for Circuit 1
CircuitsOutput: There are 11 Circuit Variables
CircuitsOutput: i_IS1      1.0000E+01
CircuitsOutput: i_Rcl1      1.0000E+01
CircuitsOutput: i_component(1)      1.0000E+01
CircuitsOutput: i_component(3)      1.0000E+01
CircuitsOutput: v_IS1      2.0980E+01
CircuitsOutput: v_Rcl1      1.0000E+00
CircuitsOutput: v_component(1)      1.0016E+01
CircuitsOutput: v_component(3)      9.9639E+00
CircuitsOutput: u_2_circuit_1      2.0980E+01
CircuitsOutput: u_3_circuit_1      1.9980E+01
CircuitsOutput: u_4_circuit_1      9.9639E+00
CircuitsOutput: Writing Component Variables for Circuit 1
CircuitsOutput: r_component(1)      0.0000E+00
CircuitsOutput: p_dc_component(1)      0.0000E+00
CircuitsOutput: r_component(3)      0.0000E+00
CircuitsOutput: p_dc_component(3)      0.0000E+00
CircuitsOutput: Writing Circuit Variables for Circuit 2
CircuitsOutput: There are 8 Circuit Variables
CircuitsOutput: i_IS2      1.0000E+01
CircuitsOutput: i_Rcl2      1.0000E+01
CircuitsOutput: i_component(2)      1.0000E+01
CircuitsOutput: v_IS2      1.2437E+01
CircuitsOutput: v_Rcl2      1.0000E+00
CircuitsOutput: v_component(2)      1.1437E+01
CircuitsOutput: u_2_circuit_2      1.2437E+01
CircuitsOutput: u_3_circuit_2      1.1437E+01
CircuitsOutput: Writing Component Variables for Circuit 2
CircuitsOutput: r_component(2)      0.0000E+00
CircuitsOutput: p_dc_component(2)      0.0000E+00
DefaultFinish: Finished solver: circuits output
Loading user function library: [CircuitsAndDynamics]...[CircuitsOutput_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: resultoutput
ResultOutputSolver: -------------------------------------
ResultOutputSolver: Saving with prefix: coil
ResultOutputSolver: Working on mesh: MESH
ResultOutputSolver: Dimension of mesh is: 3
ResultOutputSolver: Creating list for saving - if not present
CreateListForSaving: Field Variables for Saving
CreateListForSaving: Scalar Field 1: coilpot
CreateListForSaving: Scalar Field 2: coilpotb
CreateListForSaving: Scalar Field 3: potselect
CreateListForSaving: Scalar Field 4: coilsetb
CreateListForSaving: Scalar Field 5: coilset
CreateListForSaving: Scalar Field 6: coilindex e
CreateListForSaving: Scalar Field 7: a
CreateListForSaving: Vector Field 1: coilcurrent e
CreateListForSaving: Vector Field 2: coilcurrent
CreateListForSaving: Vector Field 3: magnetic flux density
CreateListForSaving: Vector Field 4: current density
CreateListForSaving: Vector Field 5: magnetic flux density e
CreateListForSaving: Vector Field 6: current density e
ResultOutputSolver: Saving in unstructured VTK XML (.vtu) format
VtuOutputSolver: Saving results in VTK XML format with prefix: coil
VtuOutputSolver: Saving number of partitions: 1
SolverOutputDirectory: Creating directory: RESU
VtuOutputSolver: Full filename base is: RESU/coil
GenerateSaveMask: Number of active elements 62447 out of 62447
GenerateSaveMask: Number of geometry nodes 9022 out of 9022
VtuOutputSolver: Total number of elements to save: 62447
VtuOutputSolver: Total number of geometry nodes to save: 9022
VtuOutputSolver: Total number of dof nodes to save: 9022
VtuOutputSolver: Setting offset for boundary entities: 100
VtuOutputSolver: Writing the vtu file: RESU/coil_t0001.vtu
AscBinWriteInit: Initializing buffered ascii/binary writing
AscBinWriteInit: Writing in binary
AscBinWriteInit: Writing in double precision
AscBinWriteInit: Writing to unit number: 58
AscBinWriteInit: Size of buffer is: 9022
WriteVtuFile: Writing nodal fields
WriteVtuFile: Saving variable: coilpot
WriteVtuFile: Saving variable: coilpotb
WriteVtuFile: Saving variable: potselect
WriteVtuFile: Saving variable: coilsetb
WriteVtuFile: Saving variable: coilset
WriteVtuFile: Saving variable: coilindex e
WriteVtuFile: Saving variable: a
WriteVtuFile: Saving variable: coilcurrent e
WriteVtuFile: Saving variable: coilcurrent
WriteVtuFile: Saving variable: magnetic flux density
WriteVtuFile: Saving variable: current density
WriteVtuFile: Saving variable: magnetic flux density e
WriteVtuFile: Saving variable: current density e
WriteVtuFile: Number of nodal fields written: 9
WriteVtuFile: Writing elemental fields
WriteVtuFile: Number of elemental fields written: 4
WriteVtuFile: Writing entity IDs for bodies and boundaries
WriteVtuFile: Writing coordinates for each used node
WriteVtuFile: Writing the elemental connectivity data
WriteVtuFile: Writing nodal fields
WriteVtuFile: Saving variable: coilpot
WriteVtuFile: Saving variable: coilpotb
WriteVtuFile: Saving variable: potselect
WriteVtuFile: Saving variable: coilsetb
WriteVtuFile: Saving variable: coilset
WriteVtuFile: Saving variable: coilindex e
WriteVtuFile: Saving variable: a
WriteVtuFile: Saving variable: coilcurrent e
WriteVtuFile: Saving variable: coilcurrent
WriteVtuFile: Saving variable: magnetic flux density
WriteVtuFile: Saving variable: current density
WriteVtuFile: Saving variable: magnetic flux density e
WriteVtuFile: Saving variable: current density e
WriteVtuFile: Writing elemental fields
AscBinWriteFree: Terminating buffered ascii/binary writing
VtuOutputSolver: All done for now
ResultOutputSolver: -------------------------------------
Loading user function library: [ResultOutputSolve]...[ResultOutputSolver_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: sv
SaveScalars: -----------------------------------------
SaveScalars: Saving scalar values of various kinds
SolverOutputDirectory: Creating directory: RESU
SaveScalars: Performed 0 reduction operations
SaveScalars: Found 28 result scalars in simulation section
SaveScalars: Saving results from component - if any
SaveScalars: Found 28 values to save in total
SaveScalars: Saving names of values to file: RESU/coil.dat.names
SaveScalars: Saving values to file: RESU/coil.dat
SaveScalars: -----------------------------------------
Loading user function library: [SaveData]...[SaveScalars_post]
SaveResult: -----------------------------------------
SaveResult: Saving results to file: MESH/result.dat
SaveResult: Done writing results file
SaveResult: -----------------------------------------
MAIN: 
MAIN: -------------------------------------
MAIN: Time: 2/8:   2.000E-01
MAIN: Estimated time left:  1.3 minutes
MAIN: -------------------------------------
MAIN: 
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
CircuitsAndDynamics: Associating circuit variable to Lagrange values!
CircuitsAndDynamics: Add PrevValues to Lagrange multiplier!
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: mgdynamics
WhitneyAVSolver: -------------------------------------------
WhitneyAVSolver: Solving the AV equations with edge elements
DefaultStart: Starting solver: mgdynamics
WhitneyAVSolver: Nonlinear iteration: 1
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0631 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
BiCGStabl:       18 0.9716E-08 0.9716E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=1) (NRM,RELC): ( 0.28713685E-03 0.65827461     ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 2
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0516 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
BiCGStabl:       13 0.8446E-08 0.8446E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=2) (NRM,RELC): ( 0.29115671E-03 0.13902479E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 3
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0409 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
BiCGStabl:       10 0.9779E-08 0.9779E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=3) (NRM,RELC): ( 0.29057496E-03 0.20000664E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 4
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0486 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
BiCGStabl:       13 0.8031E-08 0.8031E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=4) (NRM,RELC): ( 0.29142755E-03 0.29298575E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 5
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0579 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
BiCGStabl:       12 0.8043E-08 0.8043E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=5) (NRM,RELC): ( 0.29069132E-03 0.25295075E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 6
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0513 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
BiCGStabl:       13 0.9399E-08 0.9399E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=6) (NRM,RELC): ( 0.29165612E-03 0.33134879E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 7
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0518 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
BiCGStabl:       11 0.9933E-08 0.9933E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=7) (NRM,RELC): ( 0.29095828E-03 0.23955440E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 8
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0507 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
BiCGStabl:       15 0.9363E-08 0.9363E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=8) (NRM,RELC): ( 0.29193474E-03 0.33504095E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 9
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0654 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
BiCGStabl:       15 0.9794E-08 0.9794E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=9) (NRM,RELC): ( 0.29137756E-03 0.19104023E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 10
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0448 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
BiCGStabl:       17 0.9324E-08 0.9324E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=10) (NRM,RELC): ( 0.29231217E-03 0.32024162E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 11
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0496 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
BiCGStabl:       17 0.8817E-08 0.8817E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=11) (NRM,RELC): ( 0.29188574E-03 0.14598998E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 12
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0455 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1752E-07 0.1752E-07
BiCGStabl:       21 0.8577E-08 0.8577E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=12) (NRM,RELC): ( 0.29279750E-03 0.31188422E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 13
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0404 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
BiCGStabl:       20 0.9730E-08 0.9730E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=13) (NRM,RELC): ( 0.29254209E-03 0.87268648E-03 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 14
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0681 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.7208E-06 0.7208E-06
BiCGStabl:       35 0.9823E-08 0.9823E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=14) (NRM,RELC): ( 0.29354481E-03 0.34217464E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 15
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0405 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.5777E-06 0.5777E-06
BiCGStabl:       35 0.9562E-08 0.9562E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=15) (NRM,RELC): ( 0.29345840E-03 0.29442511E-03 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 16
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0393 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1540E-05 0.1540E-05
      40 0.1532E-07 0.1532E-07
BiCGStabl:       43 0.8337E-08 0.8337E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=16) (NRM,RELC): ( 0.29462104E-03 0.39540171E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 17
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0622 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1370E-05 0.1370E-05
BiCGStabl:       38 0.9614E-08 0.9614E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=17) (NRM,RELC): ( 0.29478613E-03 0.56019119E-03 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 18
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0477 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3495E-05 0.3495E-05
      40 0.3279E-07 0.3279E-07
BiCGStabl:       45 0.6004E-08 0.6004E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=18) (NRM,RELC): ( 0.29617140E-03 0.46882312E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 19
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0613 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.6242E-05 0.6242E-05
      40 0.2105E-06 0.2105E-06
WARNING:: RealBiCGStab(l): kappal^2 is non-positive, iteration halted
BiCGStabl:       41 0.7191E-06 0.7191E-06
WARNING:: IterSolve: Iteration halted due to problem in algorithm, trying to continue
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=19) (NRM,RELC): ( 0.29668147E-03 0.17207266E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 20
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0511 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.5870E-05 0.5870E-05
      40 0.4970E-07 0.4970E-07
BiCGStabl:       52 0.9659E-08 0.9659E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=20) (NRM,RELC): ( 0.29835513E-03 0.56253863E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 21
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0583 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4008E-05 0.4008E-05
      40 0.9935E-07 0.9935E-07
BiCGStabl:       49 0.8954E-08 0.8954E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=21) (NRM,RELC): ( 0.29924838E-03 0.29894417E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 22
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0477 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.5878E-05 0.5878E-05
      40 0.1215E-06 0.1215E-06
BiCGStabl:       55 0.9850E-08 0.9850E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=22) (NRM,RELC): ( 0.30119318E-03 0.64779008E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 23
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0628 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.5143E-05 0.5143E-05
      40 0.2919E-06 0.2919E-06
      60 0.1185E-07 0.1185E-07
BiCGStabl:       62 0.8884E-08 0.8884E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=23) (NRM,RELC): ( 0.30242860E-03 0.40933649E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 24
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0609 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.6318E-05 0.6318E-05
      40 0.4237E-07 0.4237E-07
BiCGStabl:       53 0.9859E-08 0.9859E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=24) (NRM,RELC): ( 0.30468613E-03 0.74369140E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 25
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0599 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.6215E-05 0.6215E-05
      40 0.1481E-06 0.1481E-06
BiCGStabl:       54 0.9607E-08 0.9607E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=25) (NRM,RELC): ( 0.30625996E-03 0.51521069E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 26
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0534 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4793E-05 0.4793E-05
      40 0.1076E-06 0.1076E-06
BiCGStabl:       53 0.7476E-08 0.7476E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=26) (NRM,RELC): ( 0.30892335E-03 0.86588536E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 27
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0445 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.6139E-05 0.6139E-05
      40 0.5169E-06 0.5169E-06
BiCGStabl:       58 0.9901E-08 0.9901E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=27) (NRM,RELC): ( 0.31076049E-03 0.59292740E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 28
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0465 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4683E-05 0.4683E-05
      40 0.6527E-07 0.6527E-07
BiCGStabl:       50 0.9633E-08 0.9633E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=28) (NRM,RELC): ( 0.31382236E-03 0.98045252E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 29
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0599 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.8396E-05 0.8396E-05
WARNING:: RealBiCGStab(l): kappal^2 is non-positive, iteration halted
BiCGStabl:       31 0.2593E-04 0.2593E-04
WARNING:: IterSolve: Iteration halted due to problem in algorithm, trying to continue
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=29) (NRM,RELC): ( 0.31589755E-03 0.65908510E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 30
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0435 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.5819E-05 0.5819E-05
      40 0.2203E-06 0.2203E-06
BiCGStabl:       58 0.9864E-08 0.9864E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=30) (NRM,RELC): ( 0.31936234E-03 0.10908265E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 31
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0651 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.8625E-05 0.8625E-05
      40 0.1847E-06 0.1847E-06
      60 0.1499E-07 0.1499E-07
BiCGStabl:       62 0.9810E-08 0.9810E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=31) (NRM,RELC): ( 0.32173687E-03 0.74076877E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 32
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0494 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.5573E-05 0.5573E-05
      40 0.5919E-07 0.5919E-07
BiCGStabl:       47 0.9548E-08 0.9548E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=32) (NRM,RELC): ( 0.32566840E-03 0.12145488E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 33
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0491 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.7681E-05 0.7681E-05
      40 0.3363E-06 0.3363E-06
      60 0.1327E-07 0.1327E-07
BiCGStabl:       64 0.2680E-08 0.2680E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=33) (NRM,RELC): ( 0.32832895E-03 0.81362702E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 34
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0614 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4587E-05 0.4587E-05
      40 0.3341E-07 0.3341E-07
BiCGStabl:       47 0.9443E-08 0.9443E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=34) (NRM,RELC): ( 0.33270399E-03 0.13236993E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 35
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0626 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.7775E-05 0.7775E-05
      40 0.5325E-06 0.5325E-06
      60 0.1729E-06 0.1729E-06
BiCGStabl:       71 0.9970E-08 0.9970E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=35) (NRM,RELC): ( 0.33559288E-03 0.86455195E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 36
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0499 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.5055E-05 0.5055E-05
      40 0.2828E-06 0.2828E-06
BiCGStabl:       56 0.9535E-08 0.9535E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=36) (NRM,RELC): ( 0.34034365E-03 0.14056859E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 37
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0424 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.8478E-05 0.8478E-05
      40 0.7754E-06 0.7754E-06
      60 0.3813E-07 0.3813E-07
BiCGStabl:       70 0.9965E-08 0.9965E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=37) (NRM,RELC): ( 0.34354650E-03 0.93665472E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 38
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0474 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4844E-05 0.4844E-05
      40 0.6228E-07 0.6228E-07
BiCGStabl:       43 0.8826E-08 0.8826E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=38) (NRM,RELC): ( 0.34867316E-03 0.14812231E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 39
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0400 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.8760E-05 0.8760E-05
      40 0.3765E-06 0.3765E-06
BiCGStabl:       56 0.9849E-08 0.9849E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=39) (NRM,RELC): ( 0.35220244E-03 0.10071066E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 40
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0656 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.6066E-05 0.6066E-05
      40 0.4628E-06 0.4628E-06
BiCGStabl:       58 0.9099E-08 0.9099E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=40) (NRM,RELC): ( 0.35769723E-03 0.15480481E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 41
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0575 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.9252E-05 0.9252E-05
      40 0.2829E-06 0.2829E-06
BiCGStabl:       60 0.9790E-08 0.9790E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=41) (NRM,RELC): ( 0.36158438E-03 0.10808426E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 42
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0482 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.6298E-05 0.6298E-05
      40 0.1335E-06 0.1335E-06
BiCGStabl:       57 0.9377E-08 0.9377E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=42) (NRM,RELC): ( 0.36743567E-03 0.16052476E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 43
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0580 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.9636E-05 0.9636E-05
      40 0.7560E-06 0.7560E-06
      60 0.2775E-07 0.2775E-07
BiCGStabl:       70 0.7335E-08 0.7335E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=43) (NRM,RELC): ( 0.37166782E-03 0.11452110E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 44
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0608 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.6792E-05 0.6792E-05
      40 0.4179E-06 0.4179E-06
      60 0.5429E-07 0.5429E-07
BiCGStabl:       67 0.8709E-08 0.8709E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=44) (NRM,RELC): ( 0.37783906E-03 0.16467457E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 45
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0644 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.9068E-05 0.9068E-05
      40 0.6140E-06 0.6140E-06
      60 0.9137E-07 0.9137E-07
BiCGStabl:       68 0.9959E-08 0.9959E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=45) (NRM,RELC): ( 0.38245766E-03 0.12149471E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 46
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0506 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.7285E-05 0.7285E-05
      40 0.4605E-06 0.4605E-06
BiCGStabl:       59 0.9335E-08 0.9335E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=46) (NRM,RELC): ( 0.38892691E-03 0.16773097E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 47
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0484 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1061E-04 0.1061E-04
      40 0.6083E-06 0.6083E-06
      60 0.1187E-07 0.1187E-07
BiCGStabl:       62 0.9983E-08 0.9983E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=47) (NRM,RELC): ( 0.39382084E-03 0.12504477E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 48
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0431 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.6257E-05 0.6257E-05
      40 0.2651E-06 0.2651E-06
BiCGStabl:       55 0.8891E-08 0.8891E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=48) (NRM,RELC): ( 0.40059380E-03 0.17051453E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 49
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0410 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1031E-04 0.1031E-04
      40 0.7664E-06 0.7664E-06
      60 0.1976E-07 0.1976E-07
BiCGStabl:       64 0.9185E-08 0.9185E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=49) (NRM,RELC): ( 0.40574770E-03 0.12783431E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 50
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0510 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.6122E-05 0.6122E-05
      40 0.2017E-06 0.2017E-06
BiCGStabl:       54 0.9510E-08 0.9510E-08
ComputeNorm: Computing norm of solution
ComputeChange: Nonlinear iteration did not converge to tolerance
ComputeChange: NS (ITER=50) (NRM,RELC): ( 0.41279241E-03 0.17212858E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
DefaultSlaveSolvers: Executing slave solvers: Post Solvers
DefaultSlaveSolvers: Calling slave solver: 4
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: mgdynamicscalc
MagnetoDynamicsCalcFields: ------------------------------
MagnetoDynamicsCalcFields: Computing postprocessed fields
MagnetoDynamicsCalcFields: Using potential variable: a
MagnetoDynamicsCalcFields: Number of components to compute: 6
MagnetoDynamicsCalcFields: Solving for field: magnetic flux density[magnetic flux density:3]
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.2938E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=1) (NRM,RELC): ( 0.19247547      1.9998930     ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.2882E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=2) (NRM,RELC): ( 0.19534608     0.14803767E-01 ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3034E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=3) (NRM,RELC): ( 0.24380070     0.22067620     ) :: mgdynamicscalc
MagnetoDynamicsCalcFields: Solving for field: current density[current density:3]
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.5611E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=4) (NRM,RELC): (  1353122.4      1.9999993     ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.6036E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=5) (NRM,RELC): (  1345744.4     0.54674666E-02 ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3858E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=6) (NRM,RELC): (  14387.391      1.9576882     ) :: mgdynamicscalc
MagnetoDynamicsCalcFields: Eddy current power:    1.696373E-01
MagnetoDynamicsCalcFields: ElectroMagnetic Field Energy:    6.613836E+02
Loading user function library: [MagnetoDynamics]...[MagnetoDynamicsCalcFields_post]
DefaultFinish: Finished solver: mgdynamics
WhitneyAVSolver: All done
WhitneyAVSolver: -------------------------------------------
Loading user function library: [MagnetoDynamics]...[WhitneyAVSolver_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: mgdynamicscalc
MagnetoDynamicsCalcFields: ------------------------------
MagnetoDynamicsCalcFields: Computing postprocessed fields
MagnetoDynamicsCalcFields: Using potential variable: a
MagnetoDynamicsCalcFields: Number of components to compute: 6
MagnetoDynamicsCalcFields: Solving for field: magnetic flux density[magnetic flux density:3]
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.2938E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=1) (NRM,RELC): ( 0.19247547      1.9999465     ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.2882E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=2) (NRM,RELC): ( 0.19534608     0.14803767E-01 ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3034E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=3) (NRM,RELC): ( 0.24380070     0.22067620     ) :: mgdynamicscalc
MagnetoDynamicsCalcFields: Solving for field: current density[current density:3]
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.5611E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=4) (NRM,RELC): (  1353122.4      1.9999993     ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.6036E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=5) (NRM,RELC): (  1345744.4     0.54674666E-02 ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3858E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=6) (NRM,RELC): (  14387.391      1.9576882     ) :: mgdynamicscalc
MagnetoDynamicsCalcFields: Eddy current power:    1.696373E-01
MagnetoDynamicsCalcFields: ElectroMagnetic Field Energy:    6.613836E+02
Loading user function library: [MagnetoDynamics]...[MagnetoDynamicsCalcFields_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits output
DefaultStart: Starting solver: circuits output
CircuitsOutput: Initializing Lagrange multipliers of size: 19
CircuitsOutput: Writing Circuit Results
CircuitsOutput: Writing Circuit Variables for Circuit 1
CircuitsOutput: There are 11 Circuit Variables
CircuitsOutput: i_IS1      2.0000E+01
CircuitsOutput: i_Rcl1      2.0000E+01
CircuitsOutput: i_component(1)      2.0000E+01
CircuitsOutput: i_component(3)      2.0000E+01
CircuitsOutput: v_IS1      1.1974E+01
CircuitsOutput: v_Rcl1      2.0000E+00
CircuitsOutput: v_component(1)      4.9999E+00
CircuitsOutput: v_component(3)      4.9739E+00
CircuitsOutput: u_2_circuit_1      1.1974E+01
CircuitsOutput: u_3_circuit_1      9.9738E+00
CircuitsOutput: u_4_circuit_1      4.9739E+00
CircuitsOutput: Writing Component Variables for Circuit 1
CircuitsOutput: r_component(1)      0.0000E+00
CircuitsOutput: p_dc_component(1)      0.0000E+00
CircuitsOutput: r_component(3)      0.0000E+00
CircuitsOutput: p_dc_component(3)      0.0000E+00
CircuitsOutput: Writing Circuit Variables for Circuit 2
CircuitsOutput: There are 8 Circuit Variables
CircuitsOutput: i_IS2      2.0000E+01
CircuitsOutput: i_Rcl2      2.0000E+01
CircuitsOutput: i_component(2)      2.0000E+01
CircuitsOutput: v_IS2      7.7141E+00
CircuitsOutput: v_Rcl2      2.0000E+00
CircuitsOutput: v_component(2)      5.7141E+00
CircuitsOutput: u_2_circuit_2      7.7141E+00
CircuitsOutput: u_3_circuit_2      5.7141E+00
CircuitsOutput: Writing Component Variables for Circuit 2
CircuitsOutput: r_component(2)      0.0000E+00
CircuitsOutput: p_dc_component(2)      0.0000E+00
DefaultFinish: Finished solver: circuits output
Loading user function library: [CircuitsAndDynamics]...[CircuitsOutput_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: resultoutput
ResultOutputSolver: -------------------------------------
ResultOutputSolver: Working on mesh: MESH
ResultOutputSolver: Dimension of mesh is: 3
ResultOutputSolver: Saving in unstructured VTK XML (.vtu) format
VtuOutputSolver: Full filename base is: RESU/coil
GenerateSaveMask: Number of active elements 62447 out of 62447
GenerateSaveMask: Number of geometry nodes 9022 out of 9022
VtuOutputSolver: Setting offset for boundary entities: 100
VtuOutputSolver: Writing the vtu file: RESU/coil_t0002.vtu
AscBinWriteInit: Initializing buffered ascii/binary writing
AscBinWriteInit: Writing in binary
AscBinWriteInit: Writing in double precision
AscBinWriteInit: Writing to unit number: 58
AscBinWriteInit: Size of buffer is: 9022
WriteVtuFile: Writing nodal fields
WriteVtuFile: Saving variable: coilpot
WriteVtuFile: Saving variable: coilpotb
WriteVtuFile: Saving variable: potselect
WriteVtuFile: Saving variable: coilsetb
WriteVtuFile: Saving variable: coilset
WriteVtuFile: Saving variable: coilindex e
WriteVtuFile: Saving variable: a
WriteVtuFile: Saving variable: coilcurrent e
WriteVtuFile: Saving variable: coilcurrent
WriteVtuFile: Saving variable: magnetic flux density
WriteVtuFile: Saving variable: current density
WriteVtuFile: Saving variable: magnetic flux density e
WriteVtuFile: Saving variable: current density e
WriteVtuFile: Number of nodal fields written: 9
WriteVtuFile: Writing elemental fields
WriteVtuFile: Number of elemental fields written: 4
WriteVtuFile: Writing entity IDs for bodies and boundaries
WriteVtuFile: Writing coordinates for each used node
WriteVtuFile: Writing the elemental connectivity data
WriteVtuFile: Writing nodal fields
WriteVtuFile: Saving variable: coilpot
WriteVtuFile: Saving variable: coilpotb
WriteVtuFile: Saving variable: potselect
WriteVtuFile: Saving variable: coilsetb
WriteVtuFile: Saving variable: coilset
WriteVtuFile: Saving variable: coilindex e
WriteVtuFile: Saving variable: a
WriteVtuFile: Saving variable: coilcurrent e
WriteVtuFile: Saving variable: coilcurrent
WriteVtuFile: Saving variable: magnetic flux density
WriteVtuFile: Saving variable: current density
WriteVtuFile: Saving variable: magnetic flux density e
WriteVtuFile: Saving variable: current density e
WriteVtuFile: Writing elemental fields
AscBinWriteFree: Terminating buffered ascii/binary writing
VtuOutputSolver: All done for now
ResultOutputSolver: -------------------------------------
Loading user function library: [ResultOutputSolve]...[ResultOutputSolver_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: sv
SaveScalars: -----------------------------------------
SaveScalars: Saving scalar values of various kinds
SaveScalars: Performed 0 reduction operations
SaveScalars: Found 28 result scalars in simulation section
SaveScalars: Saving results from component - if any
SaveScalars: Found 28 values to save in total
SaveScalars: Saving values to file: RESU/coil.dat
SaveScalars: -----------------------------------------
Loading user function library: [SaveData]...[SaveScalars_post]
SaveResult: -----------------------------------------
SaveResult: Saving results to file: MESH/result.dat
SaveResult: Done writing results file
SaveResult: -----------------------------------------
MAIN: 
MAIN: -------------------------------------
MAIN: Time: 3/8:   3.000E-01
MAIN: Estimated time left: 16.9 minutes
MAIN: -------------------------------------
MAIN: 
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: mgdynamics
WhitneyAVSolver: -------------------------------------------
WhitneyAVSolver: Solving the AV equations with edge elements
DefaultStart: Starting solver: mgdynamics
WhitneyAVSolver: Nonlinear iteration: 1
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0382 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.5146E-05 0.5146E-05
      40 0.1826E-06 0.1826E-06
BiCGStabl:       55 0.9519E-08 0.9519E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=1) (NRM,RELC): ( 0.52800159E-03 0.24491903     ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 2
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0585 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2117E-04 0.2117E-04
      40 0.3261E-05 0.3261E-05
      60 0.7100E-07 0.7100E-07
BiCGStabl:       67 0.6620E-08 0.6620E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=2) (NRM,RELC): ( 0.53987018E-03 0.22228487E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 3
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0560 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2692E-04 0.2692E-04
      40 0.1071E-05 0.1071E-05
      60 0.8756E-07 0.8756E-07
      80 0.1330E-07 0.1330E-07
BiCGStabl:       82 0.6441E-08 0.6441E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=3) (NRM,RELC): ( 0.54221715E-03 0.43378582E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 4
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0633 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1296E-04 0.1296E-04
      40 0.4848E-06 0.4848E-06
      60 0.2919E-07 0.2919E-07
BiCGStabl:       67 0.8556E-08 0.8556E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=4) (NRM,RELC): ( 0.55138918E-03 0.16773914E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 5
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0502 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1414E-04 0.1414E-04
      40 0.7313E-06 0.7313E-06
      60 0.1028E-07 0.1028E-07
BiCGStabl:       62 0.9588E-08 0.9588E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=5) (NRM,RELC): ( 0.55506877E-03 0.66511191E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 6
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0510 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1549E-04 0.1549E-04
      40 0.6296E-06 0.6296E-06
      60 0.1468E-07 0.1468E-07
BiCGStabl:       61 0.9425E-08 0.9425E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=6) (NRM,RELC): ( 0.56439293E-03 0.16658289E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 7
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0474 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1190E-04 0.1190E-04
      40 0.6102E-06 0.6102E-06
BiCGStabl:       57 0.9054E-08 0.9054E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=7) (NRM,RELC): ( 0.56936199E-03 0.87656795E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 8
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0629 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1334E-04 0.1334E-04
      40 0.1794E-06 0.1794E-06
BiCGStabl:       54 0.8729E-08 0.8729E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=8) (NRM,RELC): ( 0.57871433E-03 0.16292195E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 9
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0697 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1043E-04 0.1043E-04
      40 0.3767E-06 0.3767E-06
BiCGStabl:       54 0.8077E-08 0.8077E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=9) (NRM,RELC): ( 0.58480336E-03 0.10466578E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 10
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0580 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1847E-04 0.1847E-04
      40 0.2361E-06 0.2361E-06
      60 0.2154E-07 0.2154E-07
BiCGStabl:       64 0.9606E-08 0.9606E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=10) (NRM,RELC): ( 0.59487278E-03 0.17071495E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 11
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0583 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.9463E-05 0.9463E-05
      40 0.9744E-06 0.9744E-06
      60 0.1836E-07 0.1836E-07
BiCGStabl:       64 0.8870E-08 0.8870E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=11) (NRM,RELC): ( 0.60106144E-03 0.10349500E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 12
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0586 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1865E-04 0.1865E-04
      40 0.2526E-06 0.2526E-06
BiCGStabl:       54 0.8752E-08 0.8752E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=12) (NRM,RELC): ( 0.61161073E-03 0.17398422E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 13
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0475 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1419E-04 0.1419E-04
      40 0.9152E-06 0.9152E-06
      60 0.7043E-07 0.7043E-07
BiCGStabl:       72 0.9289E-08 0.9289E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=13) (NRM,RELC): ( 0.61838791E-03 0.11019829E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 14
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0595 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1871E-04 0.1871E-04
      40 0.2718E-06 0.2718E-06
      60 0.3500E-08 0.3500E-08
BiCGStabl:       60 0.3500E-08 0.3500E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=14) (NRM,RELC): ( 0.62999847E-03 0.18600908E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 15
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0603 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1105E-04 0.1105E-04
      40 0.5929E-06 0.5929E-06
      60 0.2809E-07 0.2809E-07
BiCGStabl:       69 0.9800E-08 0.9800E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=15) (NRM,RELC): ( 0.63682875E-03 0.10783278E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 16
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0508 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1728E-04 0.1728E-04
      40 0.2264E-06 0.2264E-06
BiCGStabl:       56 0.9257E-08 0.9257E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=16) (NRM,RELC): ( 0.64857339E-03 0.18273879E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 17
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0416 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.9821E-05 0.9821E-05
      40 0.2588E-06 0.2588E-06
BiCGStabl:       56 0.8991E-08 0.8991E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=17) (NRM,RELC): ( 0.65634718E-03 0.11914582E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 18
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0466 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1875E-04 0.1875E-04
      40 0.4136E-06 0.4136E-06
BiCGStabl:       56 0.6084E-08 0.6084E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=18) (NRM,RELC): ( 0.66843158E-03 0.18243640E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 19
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0551 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1100E-04 0.1100E-04
      40 0.2881E-06 0.2881E-06
BiCGStabl:       59 0.9215E-08 0.9215E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=19) (NRM,RELC): ( 0.67670847E-03 0.12306375E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 20
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0545 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1910E-04 0.1910E-04
      40 0.1219E-05 0.1219E-05
      60 0.1874E-07 0.1874E-07
BiCGStabl:       67 0.7431E-08 0.7431E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=20) (NRM,RELC): ( 0.68917710E-03 0.18257205E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 21
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0605 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1220E-04 0.1220E-04
      40 0.6390E-06 0.6390E-06
      60 0.1341E-07 0.1341E-07
BiCGStabl:       61 0.7372E-08 0.7372E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=21) (NRM,RELC): ( 0.69786652E-03 0.12529417E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 22
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0597 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1827E-04 0.1827E-04
      40 0.3006E-06 0.3006E-06
BiCGStabl:       58 0.9922E-08 0.9922E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=22) (NRM,RELC): ( 0.71097451E-03 0.18608176E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 23
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0608 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1011E-04 0.1011E-04
      40 0.2923E-06 0.2923E-06
BiCGStabl:       56 0.9491E-08 0.9491E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=23) (NRM,RELC): ( 0.72034124E-03 0.13088285E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 24
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0592 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1784E-04 0.1784E-04
      40 0.1019E-06 0.1019E-06
BiCGStabl:       50 0.9039E-08 0.9039E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=24) (NRM,RELC): ( 0.73307369E-03 0.17520737E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 25
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0604 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1006E-04 0.1006E-04
      40 0.2795E-06 0.2795E-06
BiCGStabl:       56 0.9672E-08 0.9672E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=25) (NRM,RELC): ( 0.74293677E-03 0.13364507E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 26
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0563 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1818E-04 0.1818E-04
      40 0.1935E-06 0.1935E-06
BiCGStabl:       53 0.9574E-08 0.9574E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=26) (NRM,RELC): ( 0.75619346E-03 0.17685845E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 27
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0699 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1212E-04 0.1212E-04
      40 0.1397E-06 0.1397E-06
BiCGStabl:       57 0.9446E-08 0.9446E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=27) (NRM,RELC): ( 0.76663132E-03 0.13708552E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 28
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0607 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1869E-04 0.1869E-04
      40 0.4749E-06 0.4749E-06
BiCGStabl:       60 0.8737E-08 0.8737E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=28) (NRM,RELC): ( 0.77997968E-03 0.17261427E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 29
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0758 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1115E-04 0.1115E-04
      40 0.1491E-06 0.1491E-06
BiCGStabl:       50 0.9238E-08 0.9238E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=29) (NRM,RELC): ( 0.79076034E-03 0.13726853E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 30
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0455 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1725E-04 0.1725E-04
      40 0.3702E-06 0.3702E-06
BiCGStabl:       52 0.8180E-08 0.8180E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=30) (NRM,RELC): ( 0.80446403E-03 0.17180901E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 31
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0425 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.9720E-05 0.9720E-05
      40 0.2099E-06 0.2099E-06
BiCGStabl:       51 0.9948E-08 0.9948E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=31) (NRM,RELC): ( 0.81537216E-03 0.13468192E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 32
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0499 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1857E-04 0.1857E-04
      40 0.1533E-06 0.1533E-06
BiCGStabl:       49 0.8829E-08 0.8829E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=32) (NRM,RELC): ( 0.82943612E-03 0.17101028E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 33
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0452 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1021E-04 0.1021E-04
      40 0.3030E-06 0.3030E-06
      60 0.1184E-07 0.1184E-07
BiCGStabl:       61 0.9804E-08 0.9804E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=33) (NRM,RELC): ( 0.84067535E-03 0.13459256E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 34
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0531 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1866E-04 0.1866E-04
      40 0.2968E-06 0.2968E-06
BiCGStabl:       50 0.8925E-08 0.8925E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=34) (NRM,RELC): ( 0.85481069E-03 0.16674083E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 35
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0526 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.8949E-05 0.8949E-05
      40 0.2063E-06 0.2063E-06
      60 0.1283E-07 0.1283E-07
BiCGStabl:       61 0.3814E-08 0.3814E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=35) (NRM,RELC): ( 0.86619254E-03 0.13227000E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 36
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0467 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1757E-04 0.1757E-04
      40 0.2059E-06 0.2059E-06
BiCGStabl:       55 0.9849E-08 0.9849E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=36) (NRM,RELC): ( 0.88084304E-03 0.16771842E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 37
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0513 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.9771E-05 0.9771E-05
      40 0.8825E-06 0.8825E-06
BiCGStabl:       51 0.8153E-08 0.8153E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=37) (NRM,RELC): ( 0.89257074E-03 0.13226121E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 38
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0468 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1739E-04 0.1739E-04
      40 0.3214E-06 0.3214E-06
BiCGStabl:       57 0.9055E-08 0.9055E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=38) (NRM,RELC): ( 0.90734995E-03 0.16422074E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 39
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0435 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.9704E-05 0.9704E-05
WARNING:: RealBiCGStab(l): kappal^2 is non-positive, iteration halted
BiCGStabl:       22 0.1895E-03 0.1895E-03
WARNING:: IterSolve: Iteration halted due to problem in algorithm, trying to continue
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=39) (NRM,RELC): ( 0.91914968E-03 0.12920591E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 40
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0527 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1762E-04 0.1762E-04
      40 0.9585E-06 0.9585E-06
BiCGStabl:       50 0.9436E-08 0.9436E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=40) (NRM,RELC): ( 0.93408221E-03 0.16115120E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 41
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0478 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.9874E-05 0.9874E-05
      40 0.1540E-06 0.1540E-06
BiCGStabl:       51 0.8973E-08 0.8973E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=41) (NRM,RELC): ( 0.94617026E-03 0.12857907E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 42
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0463 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1110E-04 0.1110E-04
      40 0.1752E-06 0.1752E-06
BiCGStabl:       51 0.9600E-08 0.9600E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=42) (NRM,RELC): ( 0.96127784E-03 0.15840614E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 43
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0547 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1014E-04 0.1014E-04
      40 0.2059E-05 0.2059E-05
BiCGStabl:       53 0.9960E-08 0.9960E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=43) (NRM,RELC): ( 0.97375997E-03 0.12901175E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 44
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0392 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1959E-04 0.1959E-04
      40 0.3744E-05 0.3744E-05
BiCGStabl:       53 0.9762E-08 0.9762E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=44) (NRM,RELC): ( 0.98884126E-03 0.15368681E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 45
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0422 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1020E-04 0.1020E-04
      40 0.2657E-06 0.2657E-06
BiCGStabl:       55 0.9849E-08 0.9849E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=45) (NRM,RELC): ( 0.10017237E-02 0.12943543E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 46
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0497 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1879E-04 0.1879E-04
      40 0.5256E-06 0.5256E-06
      60 0.1311E-07 0.1311E-07
BiCGStabl:       63 0.6520E-08 0.6520E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=46) (NRM,RELC): ( 0.10167207E-02 0.14859875E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 47
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0428 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.9284E-05 0.9284E-05
      40 0.3899E-06 0.3899E-06
BiCGStabl:       54 0.9867E-08 0.9867E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=47) (NRM,RELC): ( 0.10299169E-02 0.12895506E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 48
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0504 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1882E-04 0.1882E-04
      40 0.8199E-07 0.8199E-07
BiCGStabl:       48 0.9446E-08 0.9446E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=48) (NRM,RELC): ( 0.10447803E-02 0.14328261E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 49
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0562 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1012E-04 0.1012E-04
      40 0.1941E-06 0.1941E-06
BiCGStabl:       52 0.8640E-08 0.8640E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=49) (NRM,RELC): ( 0.10581421E-02 0.12707853E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 50
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0440 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1741E-04 0.1741E-04
      40 0.3158E-06 0.3158E-06
BiCGStabl:       57 0.9748E-08 0.9748E-08
ComputeNorm: Computing norm of solution
ComputeChange: Nonlinear iteration did not converge to tolerance
ComputeChange: NS (ITER=50) (NRM,RELC): ( 0.10728219E-02 0.13777652E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
DefaultSlaveSolvers: Executing slave solvers: Post Solvers
DefaultSlaveSolvers: Calling slave solver: 4
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: mgdynamicscalc
MagnetoDynamicsCalcFields: ------------------------------
MagnetoDynamicsCalcFields: Computing postprocessed fields
MagnetoDynamicsCalcFields: Using potential variable: a
MagnetoDynamicsCalcFields: Number of components to compute: 6
MagnetoDynamicsCalcFields: Solving for field: magnetic flux density[magnetic flux density:3]
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3033E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=1) (NRM,RELC): ( 0.32876843      1.9999086     ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.2852E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=2) (NRM,RELC): ( 0.32376387     0.15338877E-01 ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3112E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=3) (NRM,RELC): ( 0.37295169     0.14119913     ) :: mgdynamicscalc
MagnetoDynamicsCalcFields: Solving for field: current density[current density:3]
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.5611E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=4) (NRM,RELC): (  2029683.6      1.9999993     ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.6036E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=5) (NRM,RELC): (  2018616.7     0.54674666E-02 ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3858E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=6) (NRM,RELC): (  21581.087      1.9576882     ) :: mgdynamicscalc
MagnetoDynamicsCalcFields: Eddy current power:    3.816840E-01
MagnetoDynamicsCalcFields: ElectroMagnetic Field Energy:    2.709198E+03
Loading user function library: [MagnetoDynamics]...[MagnetoDynamicsCalcFields_post]
DefaultFinish: Finished solver: mgdynamics
WhitneyAVSolver: All done
WhitneyAVSolver: -------------------------------------------
Loading user function library: [MagnetoDynamics]...[WhitneyAVSolver_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: mgdynamicscalc
MagnetoDynamicsCalcFields: ------------------------------
MagnetoDynamicsCalcFields: Computing postprocessed fields
MagnetoDynamicsCalcFields: Using potential variable: a
MagnetoDynamicsCalcFields: Number of components to compute: 6
MagnetoDynamicsCalcFields: Solving for field: magnetic flux density[magnetic flux density:3]
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3033E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=1) (NRM,RELC): ( 0.32876843      1.9999391     ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.2852E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=2) (NRM,RELC): ( 0.32376387     0.15338877E-01 ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3112E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=3) (NRM,RELC): ( 0.37295169     0.14119913     ) :: mgdynamicscalc
MagnetoDynamicsCalcFields: Solving for field: current density[current density:3]
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.5611E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=4) (NRM,RELC): (  2029683.6      1.9999993     ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.6036E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=5) (NRM,RELC): (  2018616.7     0.54674666E-02 ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3858E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=6) (NRM,RELC): (  21581.087      1.9576882     ) :: mgdynamicscalc
MagnetoDynamicsCalcFields: Eddy current power:    3.816840E-01
MagnetoDynamicsCalcFields: ElectroMagnetic Field Energy:    2.709198E+03
Loading user function library: [MagnetoDynamics]...[MagnetoDynamicsCalcFields_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits output
DefaultStart: Starting solver: circuits output
CircuitsOutput: Initializing Lagrange multipliers of size: 19
CircuitsOutput: Writing Circuit Results
CircuitsOutput: Writing Circuit Variables for Circuit 1
CircuitsOutput: There are 11 Circuit Variables
CircuitsOutput: i_IS1      3.0000E+01
CircuitsOutput: i_Rcl1      3.0000E+01
CircuitsOutput: i_component(1)      3.0000E+01
CircuitsOutput: i_component(3)      3.0000E+01
CircuitsOutput: v_IS1      9.5549E+00
CircuitsOutput: v_Rcl1      3.0000E+00
CircuitsOutput: v_component(1)      3.2944E+00
CircuitsOutput: v_component(3)      3.2605E+00
CircuitsOutput: u_2_circuit_1      9.5549E+00
CircuitsOutput: u_3_circuit_1      6.5549E+00
CircuitsOutput: u_4_circuit_1      3.2605E+00
CircuitsOutput: Writing Component Variables for Circuit 1
CircuitsOutput: r_component(1)      0.0000E+00
CircuitsOutput: p_dc_component(1)      0.0000E+00
CircuitsOutput: r_component(3)      0.0000E+00
CircuitsOutput: p_dc_component(3)      0.0000E+00
CircuitsOutput: Writing Circuit Variables for Circuit 2
CircuitsOutput: There are 8 Circuit Variables
CircuitsOutput: i_IS2      3.0000E+01
CircuitsOutput: i_Rcl2      3.0000E+01
CircuitsOutput: i_component(2)      3.0000E+01
CircuitsOutput: v_IS2      6.7857E+00
CircuitsOutput: v_Rcl2      3.0000E+00
CircuitsOutput: v_component(2)      3.7857E+00
CircuitsOutput: u_2_circuit_2      6.7857E+00
CircuitsOutput: u_3_circuit_2      3.7857E+00
CircuitsOutput: Writing Component Variables for Circuit 2
CircuitsOutput: r_component(2)      0.0000E+00
CircuitsOutput: p_dc_component(2)      0.0000E+00
DefaultFinish: Finished solver: circuits output
Loading user function library: [CircuitsAndDynamics]...[CircuitsOutput_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: resultoutput
ResultOutputSolver: -------------------------------------
ResultOutputSolver: Working on mesh: MESH
ResultOutputSolver: Dimension of mesh is: 3
ResultOutputSolver: Saving in unstructured VTK XML (.vtu) format
VtuOutputSolver: Full filename base is: RESU/coil
GenerateSaveMask: Number of active elements 62447 out of 62447
GenerateSaveMask: Number of geometry nodes 9022 out of 9022
VtuOutputSolver: Setting offset for boundary entities: 100
VtuOutputSolver: Writing the vtu file: RESU/coil_t0003.vtu
AscBinWriteInit: Initializing buffered ascii/binary writing
AscBinWriteInit: Writing in binary
AscBinWriteInit: Writing in double precision
AscBinWriteInit: Writing to unit number: 58
AscBinWriteInit: Size of buffer is: 9022
WriteVtuFile: Writing nodal fields
WriteVtuFile: Saving variable: coilpot
WriteVtuFile: Saving variable: coilpotb
WriteVtuFile: Saving variable: potselect
WriteVtuFile: Saving variable: coilsetb
WriteVtuFile: Saving variable: coilset
WriteVtuFile: Saving variable: coilindex e
WriteVtuFile: Saving variable: a
WriteVtuFile: Saving variable: coilcurrent e
WriteVtuFile: Saving variable: coilcurrent
WriteVtuFile: Saving variable: magnetic flux density
WriteVtuFile: Saving variable: current density
WriteVtuFile: Saving variable: magnetic flux density e
WriteVtuFile: Saving variable: current density e
WriteVtuFile: Number of nodal fields written: 9
WriteVtuFile: Writing elemental fields
WriteVtuFile: Number of elemental fields written: 4
WriteVtuFile: Writing entity IDs for bodies and boundaries
WriteVtuFile: Writing coordinates for each used node
WriteVtuFile: Writing the elemental connectivity data
WriteVtuFile: Writing nodal fields
WriteVtuFile: Saving variable: coilpot
WriteVtuFile: Saving variable: coilpotb
WriteVtuFile: Saving variable: potselect
WriteVtuFile: Saving variable: coilsetb
WriteVtuFile: Saving variable: coilset
WriteVtuFile: Saving variable: coilindex e
WriteVtuFile: Saving variable: a
WriteVtuFile: Saving variable: coilcurrent e
WriteVtuFile: Saving variable: coilcurrent
WriteVtuFile: Saving variable: magnetic flux density
WriteVtuFile: Saving variable: current density
WriteVtuFile: Saving variable: magnetic flux density e
WriteVtuFile: Saving variable: current density e
WriteVtuFile: Writing elemental fields
AscBinWriteFree: Terminating buffered ascii/binary writing
VtuOutputSolver: All done for now
ResultOutputSolver: -------------------------------------
Loading user function library: [ResultOutputSolve]...[ResultOutputSolver_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: sv
SaveScalars: -----------------------------------------
SaveScalars: Saving scalar values of various kinds
SaveScalars: Performed 0 reduction operations
SaveScalars: Found 28 result scalars in simulation section
SaveScalars: Saving results from component - if any
SaveScalars: Found 28 values to save in total
SaveScalars: Saving values to file: RESU/coil.dat
SaveScalars: -----------------------------------------
Loading user function library: [SaveData]...[SaveScalars_post]
SaveResult: -----------------------------------------
SaveResult: Saving results to file: MESH/result.dat
SaveResult: Done writing results file
SaveResult: -----------------------------------------
MAIN: 
MAIN: -------------------------------------
MAIN: Time: 4/8:   4.000E-01
MAIN: Estimated time left: 16.7 minutes
MAIN: -------------------------------------
MAIN: 
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: mgdynamics
WhitneyAVSolver: -------------------------------------------
WhitneyAVSolver: Solving the AV equations with edge elements
DefaultStart: Starting solver: mgdynamics
WhitneyAVSolver: Nonlinear iteration: 1
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0391 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.8351E-05 0.8351E-05
      40 0.1676E-06 0.1676E-06
BiCGStabl:       52 0.9143E-08 0.9143E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=1) (NRM,RELC): ( 0.11546075E-02 0.73434945E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 2
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0611 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1563E-04 0.1563E-04
      40 0.8117E-07 0.8117E-07
BiCGStabl:       45 0.7472E-08 0.7472E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=2) (NRM,RELC): ( 0.11731213E-02 0.15907168E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 3
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0453 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.8127E-05 0.8127E-05
      40 0.6902E-07 0.6902E-07
BiCGStabl:       59 0.6695E-08 0.6695E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=3) (NRM,RELC): ( 0.11837371E-02 0.90084556E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 4
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0465 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1483E-04 0.1483E-04
      40 0.7143E-07 0.7143E-07
BiCGStabl:       48 0.9598E-08 0.9598E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=4) (NRM,RELC): ( 0.12017240E-02 0.15080456E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 5
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0507 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.8324E-05 0.8324E-05
      40 0.1286E-06 0.1286E-06
BiCGStabl:       53 0.9458E-08 0.9458E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=5) (NRM,RELC): ( 0.12124707E-02 0.89028803E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 6
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0530 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1549E-04 0.1549E-04
      40 0.5576E-06 0.5576E-06
BiCGStabl:       49 0.9755E-08 0.9755E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=6) (NRM,RELC): ( 0.12314161E-02 0.15504302E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 7
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0443 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.8856E-05 0.8856E-05
      40 0.2403E-07 0.2403E-07
BiCGStabl:       46 0.9899E-08 0.9899E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=7) (NRM,RELC): ( 0.12424304E-02 0.89046486E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 8
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0477 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1758E-04 0.1758E-04
      40 0.1709E-06 0.1709E-06
BiCGStabl:       50 0.9875E-08 0.9875E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=8) (NRM,RELC): ( 0.12613710E-02 0.15129414E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 9
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0389 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.9499E-05 0.9499E-05
      40 0.1286E-06 0.1286E-06
BiCGStabl:       52 0.9453E-08 0.9453E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=9) (NRM,RELC): ( 0.12738337E-02 0.98317412E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 10
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0517 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1614E-04 0.1614E-04
      40 0.1528E-06 0.1528E-06
BiCGStabl:       44 0.7631E-08 0.7631E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=10) (NRM,RELC): ( 0.12932302E-02 0.15111794E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 11
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0426 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.8995E-05 0.8995E-05
      40 0.6612E-07 0.6612E-07
BiCGStabl:       48 0.9940E-08 0.9940E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=11) (NRM,RELC): ( 0.13064569E-02 0.10175631E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 12
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0518 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1568E-04 0.1568E-04
      40 0.1522E-06 0.1522E-06
BiCGStabl:       45 0.9568E-08 0.9568E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=12) (NRM,RELC): ( 0.13262429E-02 0.15030957E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 13
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0542 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.9328E-05 0.9328E-05
      40 0.6503E-07 0.6503E-07
BiCGStabl:       50 0.8506E-08 0.8506E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=13) (NRM,RELC): ( 0.13403241E-02 0.10561287E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 14
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0498 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1420E-04 0.1420E-04
      40 0.4162E-07 0.4162E-07
BiCGStabl:       49 0.9998E-08 0.9998E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=14) (NRM,RELC): ( 0.13601124E-02 0.14655633E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 15
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0480 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1008E-04 0.1008E-04
      40 0.9311E-06 0.9311E-06
BiCGStabl:       48 0.9192E-08 0.9192E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=15) (NRM,RELC): ( 0.13750684E-02 0.10936004E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 16
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0584 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1404E-04 0.1404E-04
      40 0.1282E-06 0.1282E-06
BiCGStabl:       46 0.9757E-08 0.9757E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=16) (NRM,RELC): ( 0.13951036E-02 0.14465015E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 17
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0395 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.8901E-05 0.8901E-05
      40 0.8603E-07 0.8603E-07
BiCGStabl:       52 0.9691E-08 0.9691E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=17) (NRM,RELC): ( 0.14107460E-02 0.11149805E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 18
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0427 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1630E-04 0.1630E-04
      40 0.7376E-07 0.7376E-07
BiCGStabl:       45 0.8114E-08 0.8114E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=18) (NRM,RELC): ( 0.14312170E-02 0.14406281E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 19
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0489 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.8909E-05 0.8909E-05
      40 0.2536E-06 0.2536E-06
BiCGStabl:       55 0.9341E-08 0.9341E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=19) (NRM,RELC): ( 0.14474545E-02 0.11281221E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 20
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0427 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1626E-04 0.1626E-04
      40 0.2238E-06 0.2238E-06
BiCGStabl:       54 0.8614E-08 0.8614E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=20) (NRM,RELC): ( 0.14683315E-02 0.14319959E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 21
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0479 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.9146E-05 0.9146E-05
      40 0.1326E-06 0.1326E-06
BiCGStabl:       53 0.9893E-08 0.9893E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=21) (NRM,RELC): ( 0.14854525E-02 0.11592575E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 22
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0486 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1652E-04 0.1652E-04
      40 0.1641E-06 0.1641E-06
BiCGStabl:       48 0.9186E-08 0.9186E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=22) (NRM,RELC): ( 0.15067405E-02 0.14229066E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 23
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0545 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.8693E-05 0.8693E-05
      40 0.1637E-06 0.1637E-06
BiCGStabl:       55 0.9979E-08 0.9979E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=23) (NRM,RELC): ( 0.15243412E-02 0.11613494E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 24
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0511 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1497E-04 0.1497E-04
      40 0.3284E-06 0.3284E-06
BiCGStabl:       55 0.9845E-08 0.9845E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=24) (NRM,RELC): ( 0.15458999E-02 0.14043614E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 25
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0514 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.9336E-05 0.9336E-05
      40 0.9784E-07 0.9784E-07
BiCGStabl:       50 0.8527E-08 0.8527E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=25) (NRM,RELC): ( 0.15639706E-02 0.11621550E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 26
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0433 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1690E-04 0.1690E-04
      40 0.2552E-06 0.2552E-06
BiCGStabl:       48 0.9623E-08 0.9623E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=26) (NRM,RELC): ( 0.15858899E-02 0.13917592E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 27
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0532 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.9819E-05 0.9819E-05
      40 0.2899E-06 0.2899E-06
BiCGStabl:       52 0.7657E-08 0.7657E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=27) (NRM,RELC): ( 0.16045354E-02 0.11688443E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 28
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0471 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1658E-04 0.1658E-04
      40 0.2400E-06 0.2400E-06
BiCGStabl:       51 0.3334E-08 0.3334E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=28) (NRM,RELC): ( 0.16267694E-02 0.13761589E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 29
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0491 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.9841E-05 0.9841E-05
      40 0.3306E-06 0.3306E-06
BiCGStabl:       56 0.9980E-08 0.9980E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=29) (NRM,RELC): ( 0.16459342E-02 0.11711931E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 30
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0468 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1614E-04 0.1614E-04
      40 0.1143E-06 0.1143E-06
BiCGStabl:       47 0.9878E-08 0.9878E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=30) (NRM,RELC): ( 0.16683865E-02 0.13548646E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 31
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0504 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.7629E-05 0.7629E-05
      40 0.4054E-07 0.4054E-07
BiCGStabl:       46 0.9644E-08 0.9644E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=31) (NRM,RELC): ( 0.16879354E-02 0.11649021E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 32
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0637 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1686E-04 0.1686E-04
      40 0.2930E-06 0.2930E-06
BiCGStabl:       53 0.8687E-08 0.8687E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=32) (NRM,RELC): ( 0.17107729E-02 0.13438944E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 33
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0441 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.9820E-05 0.9820E-05
      40 0.7417E-07 0.7417E-07
BiCGStabl:       48 0.7632E-08 0.7632E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=33) (NRM,RELC): ( 0.17307752E-02 0.11623970E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 34
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0497 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1520E-04 0.1520E-04
      40 0.3104E-06 0.3104E-06
BiCGStabl:       59 0.8913E-08 0.8913E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=34) (NRM,RELC): ( 0.17538120E-02 0.13222150E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 35
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0410 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.9400E-05 0.9400E-05
      40 0.1363E-06 0.1363E-06
BiCGStabl:       47 0.9106E-08 0.9106E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=35) (NRM,RELC): ( 0.17741268E-02 0.11516524E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 36
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0531 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1447E-04 0.1447E-04
      40 0.9542E-07 0.9542E-07
BiCGStabl:       54 0.9698E-08 0.9698E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=36) (NRM,RELC): ( 0.17974214E-02 0.13044530E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 37
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0652 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.8744E-05 0.8744E-05
      40 0.1590E-06 0.1590E-06
BiCGStabl:       54 0.9978E-08 0.9978E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=37) (NRM,RELC): ( 0.18183367E-02 0.11568967E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 38
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0517 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1623E-04 0.1623E-04
      40 0.1072E-06 0.1072E-06
BiCGStabl:       50 0.9602E-08 0.9602E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=38) (NRM,RELC): ( 0.18420388E-02 0.12950638E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 39
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0421 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.9074E-05 0.9074E-05
      40 0.5394E-06 0.5394E-06
BiCGStabl:       50 0.8986E-08 0.8986E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=39) (NRM,RELC): ( 0.18631484E-02 0.11394596E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 40
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0411 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1452E-04 0.1452E-04
      40 0.2910E-06 0.2910E-06
BiCGStabl:       53 0.9804E-08 0.9804E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=40) (NRM,RELC): ( 0.18870719E-02 0.12758469E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 41
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0463 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.9964E-05 0.9964E-05
      40 0.1631E-06 0.1631E-06
BiCGStabl:       55 0.9804E-08 0.9804E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=41) (NRM,RELC): ( 0.19085928E-02 0.11339746E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 42
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0444 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1448E-04 0.1448E-04
      40 0.5894E-07 0.5894E-07
BiCGStabl:       46 0.8366E-08 0.8366E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=42) (NRM,RELC): ( 0.19326435E-02 0.12522346E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 43
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0542 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.9492E-05 0.9492E-05
      40 0.8272E-07 0.8272E-07
BiCGStabl:       44 0.7915E-08 0.7915E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=43) (NRM,RELC): ( 0.19546615E-02 0.11328150E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 44
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0528 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1596E-04 0.1596E-04
      40 0.1069E-06 0.1069E-06
BiCGStabl:       49 0.9882E-08 0.9882E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=44) (NRM,RELC): ( 0.19789655E-02 0.12357063E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 45
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0511 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.5735E-05 0.5735E-05
      40 0.9307E-07 0.9307E-07
BiCGStabl:       47 0.9839E-08 0.9839E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=45) (NRM,RELC): ( 0.20011310E-02 0.11138173E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 46
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0522 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1690E-04 0.1690E-04
      40 0.9792E-07 0.9792E-07
BiCGStabl:       47 0.9403E-08 0.9403E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=46) (NRM,RELC): ( 0.20254216E-02 0.12065184E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 47
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0431 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.9351E-05 0.9351E-05
      40 0.1371E-06 0.1371E-06
BiCGStabl:       51 0.9430E-08 0.9430E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=47) (NRM,RELC): ( 0.20479850E-02 0.11078402E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 48
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0475 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1487E-04 0.1487E-04
      40 0.9263E-07 0.9263E-07
BiCGStabl:       46 0.9855E-08 0.9855E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=48) (NRM,RELC): ( 0.20725395E-02 0.11918148E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 49
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0515 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.9346E-05 0.9346E-05
      40 0.1047E-06 0.1047E-06
BiCGStabl:       50 0.9909E-08 0.9909E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=49) (NRM,RELC): ( 0.20953478E-02 0.10944767E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 50
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0545 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1634E-04 0.1634E-04
      40 0.1892E-06 0.1892E-06
BiCGStabl:       48 0.9993E-08 0.9993E-08
ComputeNorm: Computing norm of solution
ComputeChange: Nonlinear iteration did not converge to tolerance
ComputeChange: NS (ITER=50) (NRM,RELC): ( 0.21200194E-02 0.11705551E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
DefaultSlaveSolvers: Executing slave solvers: Post Solvers
DefaultSlaveSolvers: Calling slave solver: 4
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: mgdynamicscalc
MagnetoDynamicsCalcFields: ------------------------------
MagnetoDynamicsCalcFields: Computing postprocessed fields
MagnetoDynamicsCalcFields: Using potential variable: a
MagnetoDynamicsCalcFields: Number of components to compute: 6
MagnetoDynamicsCalcFields: Solving for field: magnetic flux density[magnetic flux density:3]
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3032E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=1) (NRM,RELC): ( 0.44774074      1.9999170     ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.2849E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=2) (NRM,RELC): ( 0.44444920     0.73785448E-02 ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3241E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=3) (NRM,RELC): ( 0.50656229     0.13062531     ) :: mgdynamicscalc
MagnetoDynamicsCalcFields: Solving for field: current density[current density:3]
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.5611E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=4) (NRM,RELC): (  2706244.8      1.9999993     ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.6036E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=5) (NRM,RELC): (  2691488.9     0.54674666E-02 ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3858E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=6) (NRM,RELC): (  28774.783      1.9576882     ) :: mgdynamicscalc
MagnetoDynamicsCalcFields: Eddy current power:    6.785494E-01
MagnetoDynamicsCalcFields: ElectroMagnetic Field Energy:    7.158262E+03
Loading user function library: [MagnetoDynamics]...[MagnetoDynamicsCalcFields_post]
DefaultFinish: Finished solver: mgdynamics
WhitneyAVSolver: All done
WhitneyAVSolver: -------------------------------------------
Loading user function library: [MagnetoDynamics]...[WhitneyAVSolver_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: mgdynamicscalc
MagnetoDynamicsCalcFields: ------------------------------
MagnetoDynamicsCalcFields: Computing postprocessed fields
MagnetoDynamicsCalcFields: Using potential variable: a
MagnetoDynamicsCalcFields: Number of components to compute: 6
MagnetoDynamicsCalcFields: Solving for field: magnetic flux density[magnetic flux density:3]
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3032E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=1) (NRM,RELC): ( 0.44774074      1.9999378     ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.2849E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=2) (NRM,RELC): ( 0.44444920     0.73785448E-02 ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3241E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=3) (NRM,RELC): ( 0.50656229     0.13062531     ) :: mgdynamicscalc
MagnetoDynamicsCalcFields: Solving for field: current density[current density:3]
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.5611E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=4) (NRM,RELC): (  2706244.8      1.9999993     ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.6036E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=5) (NRM,RELC): (  2691488.9     0.54674666E-02 ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3858E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=6) (NRM,RELC): (  28774.783      1.9576882     ) :: mgdynamicscalc
MagnetoDynamicsCalcFields: Eddy current power:    6.785494E-01
MagnetoDynamicsCalcFields: ElectroMagnetic Field Energy:    7.158262E+03
Loading user function library: [MagnetoDynamics]...[MagnetoDynamicsCalcFields_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits output
DefaultStart: Starting solver: circuits output
CircuitsOutput: Initializing Lagrange multipliers of size: 19
CircuitsOutput: Writing Circuit Results
CircuitsOutput: Writing Circuit Variables for Circuit 1
CircuitsOutput: There are 11 Circuit Variables
CircuitsOutput: i_IS1      4.0000E+01
CircuitsOutput: i_Rcl1      4.0000E+01
CircuitsOutput: i_component(1)      4.0000E+01
CircuitsOutput: i_component(3)      4.0000E+01
CircuitsOutput: v_IS1      8.7866E+00
CircuitsOutput: v_Rcl1      4.0000E+00
CircuitsOutput: v_component(1)      2.4077E+00
CircuitsOutput: v_component(3)      2.3790E+00
CircuitsOutput: u_2_circuit_1      8.7866E+00
CircuitsOutput: u_3_circuit_1      4.7866E+00
CircuitsOutput: u_4_circuit_1      2.3790E+00
CircuitsOutput: Writing Component Variables for Circuit 1
CircuitsOutput: r_component(1)      0.0000E+00
CircuitsOutput: p_dc_component(1)      0.0000E+00
CircuitsOutput: r_component(3)      0.0000E+00
CircuitsOutput: p_dc_component(3)      0.0000E+00
CircuitsOutput: Writing Circuit Variables for Circuit 2
CircuitsOutput: There are 8 Circuit Variables
CircuitsOutput: i_IS2      4.0000E+01
CircuitsOutput: i_Rcl2      4.0000E+01
CircuitsOutput: i_component(2)      4.0000E+01
CircuitsOutput: v_IS2      6.8023E+00
CircuitsOutput: v_Rcl2      4.0000E+00
CircuitsOutput: v_component(2)      2.8023E+00
CircuitsOutput: u_2_circuit_2      6.8023E+00
CircuitsOutput: u_3_circuit_2      2.8023E+00
CircuitsOutput: Writing Component Variables for Circuit 2
CircuitsOutput: r_component(2)      0.0000E+00
CircuitsOutput: p_dc_component(2)      0.0000E+00
DefaultFinish: Finished solver: circuits output
Loading user function library: [CircuitsAndDynamics]...[CircuitsOutput_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: resultoutput
ResultOutputSolver: -------------------------------------
ResultOutputSolver: Working on mesh: MESH
ResultOutputSolver: Dimension of mesh is: 3
ResultOutputSolver: Saving in unstructured VTK XML (.vtu) format
VtuOutputSolver: Full filename base is: RESU/coil
GenerateSaveMask: Number of active elements 62447 out of 62447
GenerateSaveMask: Number of geometry nodes 9022 out of 9022
VtuOutputSolver: Setting offset for boundary entities: 100
VtuOutputSolver: Writing the vtu file: RESU/coil_t0004.vtu
AscBinWriteInit: Initializing buffered ascii/binary writing
AscBinWriteInit: Writing in binary
AscBinWriteInit: Writing in double precision
AscBinWriteInit: Writing to unit number: 58
AscBinWriteInit: Size of buffer is: 9022
WriteVtuFile: Writing nodal fields
WriteVtuFile: Saving variable: coilpot
WriteVtuFile: Saving variable: coilpotb
WriteVtuFile: Saving variable: potselect
WriteVtuFile: Saving variable: coilsetb
WriteVtuFile: Saving variable: coilset
WriteVtuFile: Saving variable: coilindex e
WriteVtuFile: Saving variable: a
WriteVtuFile: Saving variable: coilcurrent e
WriteVtuFile: Saving variable: coilcurrent
WriteVtuFile: Saving variable: magnetic flux density
WriteVtuFile: Saving variable: current density
WriteVtuFile: Saving variable: magnetic flux density e
WriteVtuFile: Saving variable: current density e
WriteVtuFile: Number of nodal fields written: 9
WriteVtuFile: Writing elemental fields
WriteVtuFile: Number of elemental fields written: 4
WriteVtuFile: Writing entity IDs for bodies and boundaries
WriteVtuFile: Writing coordinates for each used node
WriteVtuFile: Writing the elemental connectivity data
WriteVtuFile: Writing nodal fields
WriteVtuFile: Saving variable: coilpot
WriteVtuFile: Saving variable: coilpotb
WriteVtuFile: Saving variable: potselect
WriteVtuFile: Saving variable: coilsetb
WriteVtuFile: Saving variable: coilset
WriteVtuFile: Saving variable: coilindex e
WriteVtuFile: Saving variable: a
WriteVtuFile: Saving variable: coilcurrent e
WriteVtuFile: Saving variable: coilcurrent
WriteVtuFile: Saving variable: magnetic flux density
WriteVtuFile: Saving variable: current density
WriteVtuFile: Saving variable: magnetic flux density e
WriteVtuFile: Saving variable: current density e
WriteVtuFile: Writing elemental fields
AscBinWriteFree: Terminating buffered ascii/binary writing
VtuOutputSolver: All done for now
ResultOutputSolver: -------------------------------------
Loading user function library: [ResultOutputSolve]...[ResultOutputSolver_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: sv
SaveScalars: -----------------------------------------
SaveScalars: Saving scalar values of various kinds
SaveScalars: Performed 0 reduction operations
SaveScalars: Found 28 result scalars in simulation section
SaveScalars: Saving results from component - if any
SaveScalars: Found 28 values to save in total
SaveScalars: Saving values to file: RESU/coil.dat
SaveScalars: -----------------------------------------
Loading user function library: [SaveData]...[SaveScalars_post]
SaveResult: -----------------------------------------
SaveResult: Saving results to file: MESH/result.dat
SaveResult: Done writing results file
SaveResult: -----------------------------------------
MAIN: 
MAIN: -------------------------------------
MAIN: Time: 5/8:   5.000E-01
MAIN: Estimated time left: 12.2 minutes
MAIN: -------------------------------------
MAIN: 
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: mgdynamics
WhitneyAVSolver: -------------------------------------------
WhitneyAVSolver: Solving the AV equations with edge elements
DefaultStart: Starting solver: mgdynamics
WhitneyAVSolver: Nonlinear iteration: 1
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0436 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1172E-04 0.1172E-04
      40 0.1986E-06 0.1986E-06
BiCGStabl:       52 0.9894E-08 0.9894E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=1) (NRM,RELC): ( 0.21904133E-02 0.32662126E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 2
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0510 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2530E-04 0.2530E-04
      40 0.3160E-05 0.3160E-05
      60 0.1762E-07 0.1762E-07
BiCGStabl:       65 0.9866E-08 0.9866E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=2) (NRM,RELC): ( 0.22199842E-02 0.13409629E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 3
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0495 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1051E-04 0.1051E-04
      40 0.2102E-05 0.2102E-05
      60 0.4548E-07 0.4548E-07
BiCGStabl:       72 0.9627E-08 0.9627E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=3) (NRM,RELC): ( 0.22439429E-02 0.10734372E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 4
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0586 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3116E-04 0.3116E-04
      40 0.6130E-06 0.6130E-06
      60 0.2966E-06 0.2966E-06
      80 0.1946E-07 0.1946E-07
BiCGStabl:       83 0.9762E-08 0.9762E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=4) (NRM,RELC): ( 0.22748986E-02 0.13700716E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 5
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0576 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
WARNING:: RealBiCGStab(l): kappal^2 is non-positive, iteration halted
BiCGStabl:        8 0.1624E-01 0.1624E-01
WARNING:: IterSolve: Iteration halted due to problem in algorithm, trying to continue
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=5) (NRM,RELC): ( 0.22981671E-02 0.10176311E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 6
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0572 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3075E-04 0.3075E-04
      40 0.5801E-06 0.5801E-06
      60 0.1683E-06 0.1683E-06
      80 0.2502E-07 0.2502E-07
BiCGStabl:       93 0.8257E-08 0.8257E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=6) (NRM,RELC): ( 0.23297818E-02 0.13662513E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 7
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0396 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1180E-04 0.1180E-04
      40 0.8000E-06 0.8000E-06
      60 0.6605E-07 0.6605E-07
BiCGStabl:       71 0.9698E-08 0.9698E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=7) (NRM,RELC): ( 0.23564170E-02 0.11367515E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 8
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0523 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2961E-04 0.2961E-04
      40 0.1457E-05 0.1457E-05
      60 0.3691E-06 0.3691E-06
      80 0.5798E-07 0.5798E-07
     100 0.2488E-07 0.2488E-07
BiCGStabl:      104 0.4748E-08 0.4748E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=8) (NRM,RELC): ( 0.23882255E-02 0.13408157E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 9
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0437 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1240E-04 0.1240E-04
      40 0.1354E-05 0.1354E-05
      60 0.9309E-07 0.9309E-07
      80 0.2399E-07 0.2399E-07
BiCGStabl:       84 0.9721E-08 0.9721E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=9) (NRM,RELC): ( 0.24159964E-02 0.11561058E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 10
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0532 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2884E-04 0.2884E-04
      40 0.1002E-05 0.1002E-05
      60 0.2355E-06 0.2355E-06
      80 0.3453E-07 0.3453E-07
     100 0.8841E-08 0.8841E-08
BiCGStabl:      100 0.8841E-08 0.8841E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=10) (NRM,RELC): ( 0.24489513E-02 0.13547872E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 11
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0485 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1254E-04 0.1254E-04
      40 0.1368E-05 0.1368E-05
      60 0.1658E-06 0.1658E-06
      80 0.3018E-07 0.3018E-07
BiCGStabl:       87 0.8010E-08 0.8010E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=11) (NRM,RELC): ( 0.24777094E-02 0.11674495E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 12
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0465 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2858E-04 0.2858E-04
      40 0.1141E-05 0.1141E-05
      60 0.3138E-06 0.3138E-06
      80 0.8070E-07 0.8070E-07
     100 0.1510E-07 0.1510E-07
BiCGStabl:      101 0.9472E-08 0.9472E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=12) (NRM,RELC): ( 0.25114100E-02 0.13509657E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 13
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0578 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1495E-04 0.1495E-04
      40 0.1535E-05 0.1535E-05
      60 0.2428E-06 0.2428E-06
      80 0.4830E-05 0.4830E-05
     100 0.1163E-07 0.1163E-07
BiCGStabl:      101 0.9673E-08 0.9673E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=13) (NRM,RELC): ( 0.25413343E-02 0.11844770E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 14
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0407 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2930E-04 0.2930E-04
      40 0.1672E-05 0.1672E-05
      60 0.5264E-06 0.5264E-06
      80 0.4267E-07 0.4267E-07
     100 0.1867E-07 0.1867E-07
BiCGStabl:      105 0.8141E-08 0.8141E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=14) (NRM,RELC): ( 0.25761714E-02 0.13614855E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 15
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0495 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1570E-04 0.1570E-04
      40 0.1682E-05 0.1682E-05
      60 0.1709E-06 0.1709E-06
      80 0.2460E-07 0.2460E-07
BiCGStabl:       85 0.9707E-08 0.9707E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=15) (NRM,RELC): ( 0.26070338E-02 0.11908603E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 16
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0634 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3053E-04 0.3053E-04
      40 0.1548E-05 0.1548E-05
      60 0.3604E-06 0.3604E-06
      80 0.3475E-07 0.3475E-07
     100 0.1989E-07 0.1989E-07
BiCGStabl:      110 0.9958E-08 0.9958E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=16) (NRM,RELC): ( 0.26426376E-02 0.13564233E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 17
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0447 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1470E-04 0.1470E-04
      40 0.1368E-05 0.1368E-05
      60 0.5721E-06 0.5721E-06
      80 0.1510E-07 0.1510E-07
BiCGStabl:       84 0.9584E-08 0.9584E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=17) (NRM,RELC): ( 0.26746719E-02 0.12049042E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 18
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0498 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2819E-04 0.2819E-04
      40 0.1199E-05 0.1199E-05
      60 0.1667E-06 0.1667E-06
      80 0.2714E-07 0.2714E-07
BiCGStabl:       95 0.9917E-08 0.9917E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=18) (NRM,RELC): ( 0.27111475E-02 0.13545072E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 19
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0639 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1597E-04 0.1597E-04
      40 0.1082E-05 0.1082E-05
      60 0.1518E-06 0.1518E-06
      80 0.2449E-07 0.2449E-07
BiCGStabl:       92 0.8814E-08 0.8814E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=19) (NRM,RELC): ( 0.27441122E-02 0.12085453E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 20
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0466 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2990E-04 0.2990E-04
      40 0.1169E-05 0.1169E-05
      60 0.2105E-06 0.2105E-06
      80 0.2349E-07 0.2349E-07
BiCGStabl:       86 0.9299E-08 0.9299E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=20) (NRM,RELC): ( 0.27813340E-02 0.13472866E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 21
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0513 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1556E-04 0.1556E-04
      40 0.3029E-05 0.3029E-05
      60 0.5594E-06 0.5594E-06
      80 0.4739E-07 0.4739E-07
BiCGStabl:       92 0.9788E-08 0.9788E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=21) (NRM,RELC): ( 0.28153922E-02 0.12170783E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 22
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0476 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2914E-04 0.2914E-04
      40 0.1396E-05 0.1396E-05
      60 0.3167E-06 0.3167E-06
      80 0.2960E-07 0.2960E-07
BiCGStabl:       98 0.4997E-08 0.4997E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=22) (NRM,RELC): ( 0.28534822E-02 0.13438289E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 23
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0546 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1437E-04 0.1437E-04
      40 0.1973E-05 0.1973E-05
      60 0.5030E-06 0.5030E-06
      80 0.2199E-07 0.2199E-07
BiCGStabl:       85 0.9272E-08 0.9272E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=23) (NRM,RELC): ( 0.28884734E-02 0.12187903E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 24
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0550 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2878E-04 0.2878E-04
      40 0.4157E-05 0.4157E-05
      60 0.2871E-06 0.2871E-06
      80 0.7672E-07 0.7672E-07
     100 0.1252E-07 0.1252E-07
BiCGStabl:      102 0.7845E-08 0.7845E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=24) (NRM,RELC): ( 0.29271858E-02 0.13313157E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 25
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0547 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1594E-04 0.1594E-04
      40 0.1936E-05 0.1936E-05
      60 0.1496E-06 0.1496E-06
      80 0.4484E-07 0.4484E-07
BiCGStabl:       90 0.6405E-08 0.6405E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=25) (NRM,RELC): ( 0.29631221E-02 0.12201826E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 26
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0636 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2938E-04 0.2938E-04
      40 0.8613E-06 0.8613E-06
      60 0.1406E-06 0.1406E-06
      80 0.2228E-07 0.2228E-07
BiCGStabl:       99 0.7717E-08 0.7717E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=26) (NRM,RELC): ( 0.30024979E-02 0.13200916E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 27
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0484 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1478E-04 0.1478E-04
      40 0.1996E-05 0.1996E-05
      60 0.7014E-06 0.7014E-06
      80 0.5025E-07 0.5025E-07
BiCGStabl:       96 0.9764E-08 0.9764E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=27) (NRM,RELC): ( 0.30394390E-02 0.12228232E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 28
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0508 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2898E-04 0.2898E-04
      40 0.1508E-05 0.1508E-05
      60 0.3310E-06 0.3310E-06
      80 0.2304E-07 0.2304E-07
     100 0.1252E-07 0.1252E-07
BiCGStabl:      105 0.9907E-08 0.9907E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=28) (NRM,RELC): ( 0.30794070E-02 0.13063908E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 29
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0421 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1366E-04 0.1366E-04
      40 0.1327E-05 0.1327E-05
      60 0.1265E-06 0.1265E-06
      80 0.1401E-07 0.1401E-07
BiCGStabl:       82 0.6588E-08 0.6588E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=29) (NRM,RELC): ( 0.31171007E-02 0.12166113E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 30
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0576 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2863E-04 0.2863E-04
      40 0.1217E-05 0.1217E-05
      60 0.4943E-06 0.4943E-06
      80 0.1109E-06 0.1109E-06
     100 0.2127E-07 0.2127E-07
BiCGStabl:      103 0.7325E-08 0.7325E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=30) (NRM,RELC): ( 0.31577049E-02 0.12941978E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 31
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0480 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1537E-04 0.1537E-04
      40 0.1647E-05 0.1647E-05
      60 0.1046E-06 0.1046E-06
BiCGStabl:       79 0.9134E-08 0.9134E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=31) (NRM,RELC): ( 0.31962076E-02 0.12119350E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 32
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0433 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2965E-04 0.2965E-04
      40 0.1513E-05 0.1513E-05
      60 0.4291E-06 0.4291E-06
      80 0.1299E-06 0.1299E-06
     100 0.3133E-07 0.3133E-07
BiCGStabl:      116 0.7950E-08 0.7950E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=32) (NRM,RELC): ( 0.32373363E-02 0.12785707E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 33
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0554 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1491E-04 0.1491E-04
      40 0.1990E-05 0.1990E-05
      60 0.7845E-07 0.7845E-07
      80 0.1503E-07 0.1503E-07
BiCGStabl:       81 0.8920E-08 0.8920E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=33) (NRM,RELC): ( 0.32765217E-02 0.12031389E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 34
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0616 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2829E-04 0.2829E-04
      40 0.2491E-05 0.2491E-05
      60 0.2424E-06 0.2424E-06
      80 0.3935E-07 0.3935E-07
BiCGStabl:       91 0.7630E-08 0.7630E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=34) (NRM,RELC): ( 0.33181789E-02 0.12633550E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 35
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0431 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1529E-04 0.1529E-04
      40 0.1535E-05 0.1535E-05
      60 0.5446E-06 0.5446E-06
      80 0.5249E-07 0.5249E-07
BiCGStabl:       89 0.8711E-08 0.8711E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=35) (NRM,RELC): ( 0.33580767E-02 0.11952146E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 36
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0471 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3035E-04 0.3035E-04
      40 0.2030E-05 0.2030E-05
      60 0.3186E-06 0.3186E-06
      80 0.1669E-07 0.1669E-07
BiCGStabl:       88 0.9695E-08 0.9695E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=36) (NRM,RELC): ( 0.34001684E-02 0.12456405E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 37
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0540 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1473E-04 0.1473E-04
      40 0.1311E-05 0.1311E-05
      60 0.3271E-06 0.3271E-06
      80 0.2110E-07 0.2110E-07
BiCGStabl:       92 0.9259E-08 0.9259E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=37) (NRM,RELC): ( 0.34406593E-02 0.11837996E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 38
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0621 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2862E-04 0.2862E-04
      40 0.1520E-05 0.1520E-05
      60 0.2967E-06 0.2967E-06
      80 0.5801E-07 0.5801E-07
     100 0.2624E-07 0.2624E-07
BiCGStabl:      118 0.4138E-08 0.4138E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=38) (NRM,RELC): ( 0.34832061E-02 0.12289897E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 39
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0530 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1577E-04 0.1577E-04
      40 0.1948E-05 0.1948E-05
      60 0.1359E-06 0.1359E-06
      80 0.1832E-07 0.1832E-07
BiCGStabl:       83 0.7024E-08 0.7024E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=39) (NRM,RELC): ( 0.35243489E-02 0.11742421E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 40
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0638 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2839E-04 0.2839E-04
      40 0.1402E-05 0.1402E-05
      60 0.4610E-06 0.4610E-06
      80 0.1618E-06 0.1618E-06
     100 0.2372E-07 0.2372E-07
BiCGStabl:      119 0.9852E-08 0.9852E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=40) (NRM,RELC): ( 0.35672971E-02 0.12112347E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 41
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0663 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1480E-04 0.1480E-04
      40 0.1736E-05 0.1736E-05
      60 0.3289E-06 0.3289E-06
      80 0.3183E-07 0.3183E-07
BiCGStabl:       87 0.7981E-08 0.7981E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=41) (NRM,RELC): ( 0.36090015E-02 0.11622802E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 42
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0454 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3065E-04 0.3065E-04
      40 0.1266E-05 0.1266E-05
      60 0.1475E-06 0.1475E-06
      80 0.1756E-07 0.1756E-07
BiCGStabl:       92 0.9331E-08 0.9331E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=42) (NRM,RELC): ( 0.36523748E-02 0.11946305E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 43
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0555 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1562E-04 0.1562E-04
      40 0.2312E-05 0.2312E-05
      60 0.2786E-06 0.2786E-06
BiCGStabl:       76 0.9898E-08 0.9898E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=43) (NRM,RELC): ( 0.36946902E-02 0.11519009E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 44
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0554 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2825E-04 0.2825E-04
      40 0.1173E-05 0.1173E-05
      60 0.4363E-06 0.4363E-06
      80 0.5954E-07 0.5954E-07
     100 0.2204E-07 0.2204E-07
BiCGStabl:      112 0.9447E-08 0.9447E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=44) (NRM,RELC): ( 0.37384302E-02 0.11768947E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 45
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0477 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1605E-04 0.1605E-04
      40 0.2646E-05 0.2646E-05
      60 0.3790E-06 0.3790E-06
      80 0.2742E-07 0.2742E-07
BiCGStabl:       88 0.9553E-08 0.9553E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=45) (NRM,RELC): ( 0.37812426E-02 0.11386762E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 46
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0437 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3046E-04 0.3046E-04
      40 0.1835E-05 0.1835E-05
      60 0.3545E-06 0.3545E-06
      80 0.4002E-07 0.4002E-07
     100 0.2502E-07 0.2502E-07
BiCGStabl:      112 0.9626E-08 0.9626E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=46) (NRM,RELC): ( 0.38253688E-02 0.11602079E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 47
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0454 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1399E-04 0.1399E-04
      40 0.1658E-05 0.1658E-05
      60 0.2039E-06 0.2039E-06
      80 0.2188E-07 0.2188E-07
BiCGStabl:       89 0.7964E-08 0.7964E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=47) (NRM,RELC): ( 0.38687087E-02 0.11265777E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 48
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0513 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2967E-04 0.2967E-04
      40 0.1270E-05 0.1270E-05
      60 0.2409E-06 0.2409E-06
      80 0.2753E-07 0.2753E-07
BiCGStabl:       92 0.9341E-08 0.9341E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=48) (NRM,RELC): ( 0.39131657E-02 0.11425768E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 49
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0541 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1656E-04 0.1656E-04
      40 0.1719E-05 0.1719E-05
      60 0.1360E-06 0.1360E-06
      80 0.2426E-07 0.2426E-07
BiCGStabl:       91 0.9107E-08 0.9107E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=49) (NRM,RELC): ( 0.39569240E-02 0.11120156E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 50
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0427 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2938E-04 0.2938E-04
      40 0.1625E-05 0.1625E-05
      60 0.3316E-06 0.3316E-06
      80 0.7843E-07 0.7843E-07
     100 0.2225E-07 0.2225E-07
     120 0.1193E-07 0.1193E-07
BiCGStabl:      123 0.8990E-08 0.8990E-08
ComputeNorm: Computing norm of solution
ComputeChange: Nonlinear iteration did not converge to tolerance
ComputeChange: NS (ITER=50) (NRM,RELC): ( 0.40017197E-02 0.11257121E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
DefaultSlaveSolvers: Executing slave solvers: Post Solvers
DefaultSlaveSolvers: Calling slave solver: 4
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: mgdynamicscalc
MagnetoDynamicsCalcFields: ------------------------------
MagnetoDynamicsCalcFields: Computing postprocessed fields
MagnetoDynamicsCalcFields: Using potential variable: a
MagnetoDynamicsCalcFields: Number of components to compute: 6
MagnetoDynamicsCalcFields: Solving for field: magnetic flux density[magnetic flux density:3]
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3256E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=1) (NRM,RELC): ( 0.57618480      1.9999199     ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.2406E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=2) (NRM,RELC): ( 0.56787463     0.14527509E-01 ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3478E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=3) (NRM,RELC): ( 0.67948801     0.17895899     ) :: mgdynamicscalc
MagnetoDynamicsCalcFields: Solving for field: current density[current density:3]
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.5611E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=4) (NRM,RELC): (  3382806.1      1.9999992     ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.6036E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=5) (NRM,RELC): (  3364361.1     0.54674666E-02 ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3858E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=6) (NRM,RELC): (  35968.478      1.9576882     ) :: mgdynamicscalc
MagnetoDynamicsCalcFields: Eddy current power:    1.060233E+00
MagnetoDynamicsCalcFields: ElectroMagnetic Field Energy:    1.415320E+04
Loading user function library: [MagnetoDynamics]...[MagnetoDynamicsCalcFields_post]
DefaultFinish: Finished solver: mgdynamics
WhitneyAVSolver: All done
WhitneyAVSolver: -------------------------------------------
Loading user function library: [MagnetoDynamics]...[WhitneyAVSolver_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: mgdynamicscalc
MagnetoDynamicsCalcFields: ------------------------------
MagnetoDynamicsCalcFields: Computing postprocessed fields
MagnetoDynamicsCalcFields: Using potential variable: a
MagnetoDynamicsCalcFields: Number of components to compute: 6
MagnetoDynamicsCalcFields: Solving for field: magnetic flux density[magnetic flux density:3]
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3256E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=1) (NRM,RELC): ( 0.57618480      1.9999359     ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.2406E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=2) (NRM,RELC): ( 0.56787463     0.14527509E-01 ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3478E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=3) (NRM,RELC): ( 0.67948801     0.17895899     ) :: mgdynamicscalc
MagnetoDynamicsCalcFields: Solving for field: current density[current density:3]
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.5611E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=4) (NRM,RELC): (  3382806.1      1.9999992     ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.6036E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=5) (NRM,RELC): (  3364361.1     0.54674666E-02 ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3858E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=6) (NRM,RELC): (  35968.478      1.9576882     ) :: mgdynamicscalc
MagnetoDynamicsCalcFields: Eddy current power:    1.060233E+00
MagnetoDynamicsCalcFields: ElectroMagnetic Field Energy:    1.415320E+04
Loading user function library: [MagnetoDynamics]...[MagnetoDynamicsCalcFields_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits output
DefaultStart: Starting solver: circuits output
CircuitsOutput: Initializing Lagrange multipliers of size: 19
CircuitsOutput: Writing Circuit Results
CircuitsOutput: Writing Circuit Variables for Circuit 1
CircuitsOutput: There are 11 Circuit Variables
CircuitsOutput: i_IS1      5.0000E+01
CircuitsOutput: i_Rcl1      5.0000E+01
CircuitsOutput: i_component(1)      5.0000E+01
CircuitsOutput: i_component(3)      5.0000E+01
CircuitsOutput: v_IS1      8.7904E+00
CircuitsOutput: v_Rcl1      5.0000E+00
CircuitsOutput: v_component(1)      1.8973E+00
CircuitsOutput: v_component(3)      1.8931E+00
CircuitsOutput: u_2_circuit_1      8.7904E+00
CircuitsOutput: u_3_circuit_1      3.7904E+00
CircuitsOutput: u_4_circuit_1      1.8931E+00
CircuitsOutput: Writing Component Variables for Circuit 1
CircuitsOutput: r_component(1)      0.0000E+00
CircuitsOutput: p_dc_component(1)      0.0000E+00
CircuitsOutput: r_component(3)      0.0000E+00
CircuitsOutput: p_dc_component(3)      0.0000E+00
CircuitsOutput: Writing Circuit Variables for Circuit 2
CircuitsOutput: There are 8 Circuit Variables
CircuitsOutput: i_IS2      5.0000E+01
CircuitsOutput: i_Rcl2      5.0000E+01
CircuitsOutput: i_component(2)      5.0000E+01
CircuitsOutput: v_IS2      7.2275E+00
CircuitsOutput: v_Rcl2      5.0000E+00
CircuitsOutput: v_component(2)      2.2275E+00
CircuitsOutput: u_2_circuit_2      7.2275E+00
CircuitsOutput: u_3_circuit_2      2.2275E+00
CircuitsOutput: Writing Component Variables for Circuit 2
CircuitsOutput: r_component(2)      0.0000E+00
CircuitsOutput: p_dc_component(2)      0.0000E+00
DefaultFinish: Finished solver: circuits output
Loading user function library: [CircuitsAndDynamics]...[CircuitsOutput_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: resultoutput
ResultOutputSolver: -------------------------------------
ResultOutputSolver: Working on mesh: MESH
ResultOutputSolver: Dimension of mesh is: 3
ResultOutputSolver: Saving in unstructured VTK XML (.vtu) format
VtuOutputSolver: Full filename base is: RESU/coil
GenerateSaveMask: Number of active elements 62447 out of 62447
GenerateSaveMask: Number of geometry nodes 9022 out of 9022
VtuOutputSolver: Setting offset for boundary entities: 100
VtuOutputSolver: Writing the vtu file: RESU/coil_t0005.vtu
AscBinWriteInit: Initializing buffered ascii/binary writing
AscBinWriteInit: Writing in binary
AscBinWriteInit: Writing in double precision
AscBinWriteInit: Writing to unit number: 58
AscBinWriteInit: Size of buffer is: 9022
WriteVtuFile: Writing nodal fields
WriteVtuFile: Saving variable: coilpot
WriteVtuFile: Saving variable: coilpotb
WriteVtuFile: Saving variable: potselect
WriteVtuFile: Saving variable: coilsetb
WriteVtuFile: Saving variable: coilset
WriteVtuFile: Saving variable: coilindex e
WriteVtuFile: Saving variable: a
WriteVtuFile: Saving variable: coilcurrent e
WriteVtuFile: Saving variable: coilcurrent
WriteVtuFile: Saving variable: magnetic flux density
WriteVtuFile: Saving variable: current density
WriteVtuFile: Saving variable: magnetic flux density e
WriteVtuFile: Saving variable: current density e
WriteVtuFile: Number of nodal fields written: 9
WriteVtuFile: Writing elemental fields
WriteVtuFile: Number of elemental fields written: 4
WriteVtuFile: Writing entity IDs for bodies and boundaries
WriteVtuFile: Writing coordinates for each used node
WriteVtuFile: Writing the elemental connectivity data
WriteVtuFile: Writing nodal fields
WriteVtuFile: Saving variable: coilpot
WriteVtuFile: Saving variable: coilpotb
WriteVtuFile: Saving variable: potselect
WriteVtuFile: Saving variable: coilsetb
WriteVtuFile: Saving variable: coilset
WriteVtuFile: Saving variable: coilindex e
WriteVtuFile: Saving variable: a
WriteVtuFile: Saving variable: coilcurrent e
WriteVtuFile: Saving variable: coilcurrent
WriteVtuFile: Saving variable: magnetic flux density
WriteVtuFile: Saving variable: current density
WriteVtuFile: Saving variable: magnetic flux density e
WriteVtuFile: Saving variable: current density e
WriteVtuFile: Writing elemental fields
AscBinWriteFree: Terminating buffered ascii/binary writing
VtuOutputSolver: All done for now
ResultOutputSolver: -------------------------------------
Loading user function library: [ResultOutputSolve]...[ResultOutputSolver_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: sv
SaveScalars: -----------------------------------------
SaveScalars: Saving scalar values of various kinds
SaveScalars: Performed 0 reduction operations
SaveScalars: Found 28 result scalars in simulation section
SaveScalars: Saving results from component - if any
SaveScalars: Found 28 values to save in total
SaveScalars: Saving values to file: RESU/coil.dat
SaveScalars: -----------------------------------------
Loading user function library: [SaveData]...[SaveScalars_post]
SaveResult: -----------------------------------------
SaveResult: Saving results to file: MESH/result.dat
SaveResult: Done writing results file
SaveResult: -----------------------------------------
MAIN: 
MAIN: -------------------------------------
MAIN: Time: 6/8:   8.333E-01
MAIN: Estimated time left: 14.6 minutes
MAIN: -------------------------------------
MAIN: 
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: mgdynamics
WhitneyAVSolver: -------------------------------------------
WhitneyAVSolver: Solving the AV equations with edge elements
DefaultStart: Starting solver: mgdynamics
WhitneyAVSolver: Nonlinear iteration: 1
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0350 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2215E-04 0.2215E-04
      40 0.2511E-05 0.2511E-05
      60 0.1695E-06 0.1695E-06
      80 0.5544E-07 0.5544E-07
BiCGStabl:       96 0.6540E-08 0.6540E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=1) (NRM,RELC): ( 0.40815240E-02 0.19745619E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 2
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0469 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3427E-04 0.3427E-04
      40 0.1235E-05 0.1235E-05
      60 0.1444E-07 0.1444E-07
BiCGStabl:       63 0.8569E-08 0.8569E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=2) (NRM,RELC): ( 0.41388218E-02 0.13940471E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 3
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0431 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2539E-04 0.2539E-04
      40 0.2099E-05 0.2099E-05
      60 0.1942E-06 0.1942E-06
BiCGStabl:       80 0.9514E-08 0.9514E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=3) (NRM,RELC): ( 0.41863754E-02 0.11424022E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 4
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0654 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.5265E-04 0.5265E-04
      40 0.3061E-05 0.3061E-05
      60 0.1982E-06 0.1982E-06
BiCGStabl:       75 0.8379E-08 0.8379E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=4) (NRM,RELC): ( 0.42473114E-02 0.14450633E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 5
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0458 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2845E-04 0.2845E-04
      40 0.1401E-05 0.1401E-05
      60 0.6740E-07 0.6740E-07
BiCGStabl:       72 0.7905E-08 0.7905E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=5) (NRM,RELC): ( 0.42986744E-02 0.12020362E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 6
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0515 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.5106E-04 0.5106E-04
      40 0.2513E-05 0.2513E-05
      60 0.2307E-06 0.2307E-06
      80 0.2056E-07 0.2056E-07
BiCGStabl:       82 0.7796E-08 0.7796E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=6) (NRM,RELC): ( 0.43595823E-02 0.14069332E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 7
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0470 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2666E-04 0.2666E-04
      40 0.3870E-05 0.3870E-05
      60 0.1997E-06 0.1997E-06
      80 0.9864E-08 0.9864E-08
BiCGStabl:       80 0.9864E-08 0.9864E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=7) (NRM,RELC): ( 0.44147244E-02 0.12568984E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 8
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0688 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.5577E-04 0.5577E-04
      40 0.3592E-05 0.3592E-05
      60 0.2588E-06 0.2588E-06
      80 0.1412E-06 0.1412E-06
BiCGStabl:       92 0.9374E-08 0.9374E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=8) (NRM,RELC): ( 0.44766929E-02 0.13938963E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 9
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0554 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2867E-04 0.2867E-04
      40 0.1408E-05 0.1408E-05
      60 0.7632E-07 0.7632E-07
BiCGStabl:       69 0.9712E-08 0.9712E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=9) (NRM,RELC): ( 0.45343130E-02 0.12788829E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 10
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0588 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4889E-04 0.4889E-04
      40 0.3190E-05 0.3190E-05
      60 0.2160E-06 0.2160E-06
      80 0.1889E-06 0.1889E-06
BiCGStabl:       83 0.9053E-08 0.9053E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=10) (NRM,RELC): ( 0.45971324E-02 0.13758915E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 11
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0592 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2622E-04 0.2622E-04
      40 0.1503E-04 0.1503E-04
      60 0.1023E-06 0.1023E-06
      80 0.8943E-08 0.8943E-08
BiCGStabl:       80 0.8943E-08 0.8943E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=11) (NRM,RELC): ( 0.46566838E-02 0.12870668E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 12
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0451 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4913E-04 0.4913E-04
      40 0.2986E-05 0.2986E-05
      60 0.2043E-06 0.2043E-06
      80 0.3045E-07 0.3045E-07
BiCGStabl:       85 0.9670E-08 0.9670E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=12) (NRM,RELC): ( 0.47202037E-02 0.13548184E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 13
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0523 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2519E-04 0.2519E-04
      40 0.1784E-05 0.1784E-05
      60 0.8386E-07 0.8386E-07
      80 0.1313E-07 0.1313E-07
BiCGStabl:       84 0.9663E-08 0.9663E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=13) (NRM,RELC): ( 0.47827498E-02 0.13163506E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 14
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0576 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.5235E-04 0.5235E-04
      40 0.2188E-05 0.2188E-05
      60 0.3701E-07 0.3701E-07
BiCGStabl:       72 0.9377E-08 0.9377E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=14) (NRM,RELC): ( 0.48480094E-02 0.13552323E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 15
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0545 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2813E-04 0.2813E-04
      40 0.1340E-05 0.1340E-05
      60 0.5044E-07 0.5044E-07
BiCGStabl:       77 0.9292E-08 0.9292E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=15) (NRM,RELC): ( 0.49133832E-02 0.13394371E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 16
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0484 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4843E-04 0.4843E-04
      40 0.4081E-05 0.4081E-05
      60 0.7514E-06 0.7514E-06
      80 0.6568E-07 0.6568E-07
     100 0.2846E-07 0.2846E-07
BiCGStabl:      101 0.8079E-08 0.8079E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=16) (NRM,RELC): ( 0.49801372E-02 0.13494473E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 17
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0434 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2956E-04 0.2956E-04
      40 0.9137E-06 0.9137E-06
      60 0.3224E-07 0.3224E-07
BiCGStabl:       66 0.9212E-08 0.9212E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=17) (NRM,RELC): ( 0.50481596E-02 0.13566094E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 18
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0648 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4962E-04 0.4962E-04
      40 0.3786E-05 0.3786E-05
      60 0.6591E-06 0.6591E-06
      80 0.3372E-07 0.3372E-07
BiCGStabl:       90 0.9180E-08 0.9180E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=18) (NRM,RELC): ( 0.51162228E-02 0.13392504E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 19
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0483 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2723E-04 0.2723E-04
      40 0.1106E-05 0.1106E-05
      60 0.4799E-07 0.4799E-07
BiCGStabl:       71 0.9141E-08 0.9141E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=19) (NRM,RELC): ( 0.51867244E-02 0.13685702E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 20
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0570 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4703E-04 0.4703E-04
      40 0.3641E-05 0.3641E-05
      60 0.1106E-06 0.1106E-06
BiCGStabl:       74 0.9824E-08 0.9824E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=20) (NRM,RELC): ( 0.52560731E-02 0.13281638E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 21
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0591 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3055E-04 0.3055E-04
      40 0.1598E-05 0.1598E-05
      60 0.6330E-07 0.6330E-07
BiCGStabl:       76 0.9923E-08 0.9923E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=21) (NRM,RELC): ( 0.53288370E-02 0.13748610E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 22
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0477 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4907E-04 0.4907E-04
      40 0.2108E-05 0.2108E-05
      60 0.7736E-07 0.7736E-07
BiCGStabl:       73 0.9900E-08 0.9900E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=22) (NRM,RELC): ( 0.53994336E-02 0.13160846E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 23
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0410 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2548E-04 0.2548E-04
      40 0.2461E-05 0.2461E-05
      60 0.1922E-06 0.1922E-06
      80 0.9613E-07 0.9613E-07
BiCGStabl:       85 0.9601E-08 0.9601E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=23) (NRM,RELC): ( 0.54742659E-02 0.13763914E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 24
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0488 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4933E-04 0.4933E-04
      40 0.5780E-05 0.5780E-05
      60 0.4151E-06 0.4151E-06
      80 0.1166E-07 0.1166E-07
BiCGStabl:       81 0.8570E-08 0.8570E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=24) (NRM,RELC): ( 0.55460207E-02 0.13022318E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 25
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0431 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3072E-04 0.3072E-04
      40 0.1310E-05 0.1310E-05
      60 0.5035E-07 0.5035E-07
BiCGStabl:       73 0.9804E-08 0.9804E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=25) (NRM,RELC): ( 0.56228120E-02 0.13750985E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 26
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0538 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4987E-04 0.4987E-04
      40 0.2668E-05 0.2668E-05
      60 0.9079E-07 0.9079E-07
BiCGStabl:       73 0.6543E-08 0.6543E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=26) (NRM,RELC): ( 0.56956320E-02 0.12867493E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 27
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0538 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2776E-04 0.2776E-04
      40 0.1039E-05 0.1039E-05
      60 0.7489E-07 0.7489E-07
BiCGStabl:       68 0.9994E-08 0.9994E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=27) (NRM,RELC): ( 0.57743154E-02 0.13719927E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 28
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0441 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4759E-04 0.4759E-04
      40 0.4323E-05 0.4323E-05
      60 0.4312E-06 0.4312E-06
      80 0.2948E-07 0.2948E-07
BiCGStabl:       87 0.7592E-08 0.7592E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=28) (NRM,RELC): ( 0.58482001E-02 0.12714060E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 29
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0489 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2840E-04 0.2840E-04
      40 0.1931E-05 0.1931E-05
      60 0.4100E-06 0.4100E-06
BiCGStabl:       78 0.9969E-08 0.9969E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=29) (NRM,RELC): ( 0.59287623E-02 0.13681326E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 30
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0446 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4532E-04 0.4532E-04
      40 0.3364E-05 0.3364E-05
      60 0.1369E-06 0.1369E-06
      80 0.1412E-07 0.1412E-07
BiCGStabl:       81 0.8868E-08 0.8868E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=30) (NRM,RELC): ( 0.60034063E-02 0.12511398E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 31
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0400 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2931E-04 0.2931E-04
      40 0.2064E-05 0.2064E-05
      60 0.9743E-07 0.9743E-07
BiCGStabl:       68 0.9248E-08 0.9248E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=31) (NRM,RELC): ( 0.60855603E-02 0.13591564E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 32
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0478 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4633E-04 0.4633E-04
      40 0.3432E-05 0.3432E-05
      60 0.7792E-07 0.7792E-07
BiCGStabl:       66 0.8484E-08 0.8484E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=32) (NRM,RELC): ( 0.61610314E-02 0.12325230E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 33
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0610 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2863E-04 0.2863E-04
      40 0.1649E-05 0.1649E-05
      60 0.8104E-07 0.8104E-07
BiCGStabl:       73 0.9524E-08 0.9524E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=33) (NRM,RELC): ( 0.62447134E-02 0.13490852E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 34
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0449 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4806E-04 0.4806E-04
      40 0.3411E-05 0.3411E-05
      60 0.8504E-07 0.8504E-07
BiCGStabl:       79 0.5146E-08 0.5146E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=34) (NRM,RELC): ( 0.63209384E-02 0.12132286E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 35
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0452 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2860E-04 0.2860E-04
      40 0.1667E-05 0.1667E-05
      60 0.9282E-07 0.9282E-07
BiCGStabl:       78 0.9503E-08 0.9503E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=35) (NRM,RELC): ( 0.64060048E-02 0.13367926E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 36
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0572 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4570E-04 0.4570E-04
      40 0.4826E-05 0.4826E-05
      60 0.2489E-06 0.2489E-06
BiCGStabl:       80 0.9856E-08 0.9856E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=36) (NRM,RELC): ( 0.64827756E-02 0.11912797E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 37
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0534 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2673E-04 0.2673E-04
      40 0.1600E-04 0.1600E-04
      60 0.1581E-06 0.1581E-06
      80 0.1167E-07 0.1167E-07
BiCGStabl:       82 0.9884E-08 0.9884E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=37) (NRM,RELC): ( 0.65692341E-02 0.13248308E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 38
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0442 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4704E-04 0.4704E-04
      40 0.4760E-05 0.4760E-05
      60 0.3488E-06 0.3488E-06
      80 0.1506E-07 0.1506E-07
BiCGStabl:       90 0.9353E-08 0.9353E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=38) (NRM,RELC): ( 0.66465995E-02 0.11707983E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 39
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0437 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2808E-04 0.2808E-04
      40 0.3079E-05 0.3079E-05
      60 0.3209E-06 0.3209E-06
      80 0.3649E-07 0.3649E-07
BiCGStabl:       87 0.9260E-08 0.9260E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=39) (NRM,RELC): ( 0.67343683E-02 0.13118455E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 40
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0556 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4628E-04 0.4628E-04
      40 0.3921E-05 0.3921E-05
      60 0.2489E-06 0.2489E-06
      80 0.1993E-07 0.1993E-07
BiCGStabl:       83 0.9880E-08 0.9880E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=40) (NRM,RELC): ( 0.68122502E-02 0.11498355E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 41
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0542 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2768E-04 0.2768E-04
      40 0.1477E-05 0.1477E-05
      60 0.8186E-07 0.8186E-07
BiCGStabl:       73 0.8294E-08 0.8294E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=41) (NRM,RELC): ( 0.69011843E-02 0.12970362E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 42
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0551 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4532E-04 0.4532E-04
      40 0.1968E-05 0.1968E-05
      60 0.9424E-07 0.9424E-07
BiCGStabl:       74 0.9893E-08 0.9893E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=42) (NRM,RELC): ( 0.69795708E-02 0.11294269E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 43
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0427 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2697E-04 0.2697E-04
      40 0.2149E-05 0.2149E-05
      60 0.3265E-06 0.3265E-06
      80 0.3230E-07 0.3230E-07
BiCGStabl:       87 0.8681E-08 0.8681E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=43) (NRM,RELC): ( 0.70695960E-02 0.12815742E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 44
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0488 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4678E-04 0.4678E-04
      40 0.4087E-05 0.4087E-05
      60 0.3363E-06 0.3363E-06
      80 0.1239E-07 0.1239E-07
BiCGStabl:       82 0.8411E-08 0.8411E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=44) (NRM,RELC): ( 0.71484771E-02 0.11095884E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 45
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0491 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2684E-04 0.2684E-04
      40 0.8387E-06 0.8387E-06
      60 0.9135E-07 0.9135E-07
BiCGStabl:       77 0.9953E-08 0.9953E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=45) (NRM,RELC): ( 0.72395200E-02 0.12655401E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 46
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0504 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4662E-04 0.4662E-04
      40 0.9452E-05 0.9452E-05
      60 0.5188E-06 0.5188E-06
BiCGStabl:       76 0.8851E-08 0.8851E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=46) (NRM,RELC): ( 0.73188165E-02 0.10893617E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 47
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0467 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2531E-04 0.2531E-04
      40 0.2273E-05 0.2273E-05
      60 0.1588E-05 0.1588E-05
      80 0.1584E-07 0.1584E-07
BiCGStabl:       85 0.9262E-08 0.9262E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=47) (NRM,RELC): ( 0.74108617E-02 0.12497926E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 48
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0591 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4778E-04 0.4778E-04
      40 0.2964E-05 0.2964E-05
      60 0.3032E-07 0.3032E-07
BiCGStabl:       76 0.9729E-08 0.9729E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=48) (NRM,RELC): ( 0.74905584E-02 0.10696520E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 49
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0572 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2947E-04 0.2947E-04
      40 0.1845E-05 0.1845E-05
      60 0.4984E-06 0.4984E-06
      80 0.1891E-07 0.1891E-07
BiCGStabl:       83 0.5810E-08 0.5810E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=49) (NRM,RELC): ( 0.75835240E-02 0.12334502E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 50
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0623 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4600E-04 0.4600E-04
      40 0.4279E-05 0.4279E-05
      60 0.3133E-06 0.3133E-06
BiCGStabl:       77 0.9846E-08 0.9846E-08
ComputeNorm: Computing norm of solution
ComputeChange: Nonlinear iteration did not converge to tolerance
ComputeChange: NS (ITER=50) (NRM,RELC): ( 0.76635625E-02 0.10498857E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
DefaultSlaveSolvers: Executing slave solvers: Post Solvers
DefaultSlaveSolvers: Calling slave solver: 4
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: mgdynamicscalc
MagnetoDynamicsCalcFields: ------------------------------
MagnetoDynamicsCalcFields: Computing postprocessed fields
MagnetoDynamicsCalcFields: Using potential variable: a
MagnetoDynamicsCalcFields: Number of components to compute: 6
MagnetoDynamicsCalcFields: Solving for field: magnetic flux density[magnetic flux density:3]
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.4232E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=1) (NRM,RELC): (  1.1099354      1.9998766     ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3532E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=2) (NRM,RELC): (  1.0832521     0.24332885E-01 ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3620E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=3) (NRM,RELC): (  1.0150274     0.65029231E-01 ) :: mgdynamicscalc
MagnetoDynamicsCalcFields: Solving for field: current density[current density:3]
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.5995E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=4) (NRM,RELC): (  4444130.4      1.9999991     ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.6457E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=5) (NRM,RELC): (  4426992.1     0.38638609E-02 ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.4180E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=6) (NRM,RELC): (  45840.613      1.9590053     ) :: mgdynamicscalc
MagnetoDynamicsCalcFields: Eddy current power:    1.688569E+00
MagnetoDynamicsCalcFields: ElectroMagnetic Field Energy:    3.503122E+04
Loading user function library: [MagnetoDynamics]...[MagnetoDynamicsCalcFields_post]
DefaultFinish: Finished solver: mgdynamics
WhitneyAVSolver: All done
WhitneyAVSolver: -------------------------------------------
Loading user function library: [MagnetoDynamics]...[WhitneyAVSolver_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: mgdynamicscalc
MagnetoDynamicsCalcFields: ------------------------------
MagnetoDynamicsCalcFields: Computing postprocessed fields
MagnetoDynamicsCalcFields: Using potential variable: a
MagnetoDynamicsCalcFields: Number of components to compute: 6
MagnetoDynamicsCalcFields: Solving for field: magnetic flux density[magnetic flux density:3]
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.4232E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=1) (NRM,RELC): (  1.1099354      1.9999032     ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3532E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=2) (NRM,RELC): (  1.0832521     0.24332885E-01 ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3620E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=3) (NRM,RELC): (  1.0150274     0.65029231E-01 ) :: mgdynamicscalc
MagnetoDynamicsCalcFields: Solving for field: current density[current density:3]
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.5995E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=4) (NRM,RELC): (  4444130.4      1.9999991     ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.6457E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=5) (NRM,RELC): (  4426992.1     0.38638609E-02 ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.4180E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=6) (NRM,RELC): (  45840.613      1.9590053     ) :: mgdynamicscalc
MagnetoDynamicsCalcFields: Eddy current power:    1.688569E+00
MagnetoDynamicsCalcFields: ElectroMagnetic Field Energy:    3.503122E+04
Loading user function library: [MagnetoDynamics]...[MagnetoDynamicsCalcFields_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits output
DefaultStart: Starting solver: circuits output
CircuitsOutput: Initializing Lagrange multipliers of size: 19
CircuitsOutput: Writing Circuit Results
CircuitsOutput: Writing Circuit Variables for Circuit 1
CircuitsOutput: There are 11 Circuit Variables
CircuitsOutput: i_IS1      5.0000E+01
CircuitsOutput: i_Rcl1      5.0000E+01
CircuitsOutput: i_component(1)      5.0000E+01
CircuitsOutput: i_component(3)      5.0000E+01
CircuitsOutput: v_IS1      7.6813E+00
CircuitsOutput: v_Rcl1      5.0000E+00
CircuitsOutput: v_component(1)      1.3569E+00
CircuitsOutput: v_component(3)      1.3244E+00
CircuitsOutput: u_2_circuit_1      7.6813E+00
CircuitsOutput: u_3_circuit_1      2.6813E+00
CircuitsOutput: u_4_circuit_1      1.3244E+00
CircuitsOutput: Writing Component Variables for Circuit 1
CircuitsOutput: r_component(1)      0.0000E+00
CircuitsOutput: p_dc_component(1)      0.0000E+00
CircuitsOutput: r_component(3)      0.0000E+00
CircuitsOutput: p_dc_component(3)      0.0000E+00
CircuitsOutput: Writing Circuit Variables for Circuit 2
CircuitsOutput: There are 8 Circuit Variables
CircuitsOutput: i_IS2      8.3333E+01
CircuitsOutput: i_Rcl2      8.3333E+01
CircuitsOutput: i_component(2)      8.3333E+01
CircuitsOutput: v_IS2      1.1692E+01
CircuitsOutput: v_Rcl2      8.3333E+00
CircuitsOutput: v_component(2)      3.3590E+00
CircuitsOutput: u_2_circuit_2      1.1692E+01
CircuitsOutput: u_3_circuit_2      3.3590E+00
CircuitsOutput: Writing Component Variables for Circuit 2
CircuitsOutput: r_component(2)      0.0000E+00
CircuitsOutput: p_dc_component(2)      0.0000E+00
DefaultFinish: Finished solver: circuits output
Loading user function library: [CircuitsAndDynamics]...[CircuitsOutput_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: resultoutput
ResultOutputSolver: -------------------------------------
ResultOutputSolver: Working on mesh: MESH
ResultOutputSolver: Dimension of mesh is: 3
ResultOutputSolver: Saving in unstructured VTK XML (.vtu) format
VtuOutputSolver: Full filename base is: RESU/coil
GenerateSaveMask: Number of active elements 62447 out of 62447
GenerateSaveMask: Number of geometry nodes 9022 out of 9022
VtuOutputSolver: Setting offset for boundary entities: 100
VtuOutputSolver: Writing the vtu file: RESU/coil_t0006.vtu
AscBinWriteInit: Initializing buffered ascii/binary writing
AscBinWriteInit: Writing in binary
AscBinWriteInit: Writing in double precision
AscBinWriteInit: Writing to unit number: 58
AscBinWriteInit: Size of buffer is: 9022
WriteVtuFile: Writing nodal fields
WriteVtuFile: Saving variable: coilpot
WriteVtuFile: Saving variable: coilpotb
WriteVtuFile: Saving variable: potselect
WriteVtuFile: Saving variable: coilsetb
WriteVtuFile: Saving variable: coilset
WriteVtuFile: Saving variable: coilindex e
WriteVtuFile: Saving variable: a
WriteVtuFile: Saving variable: coilcurrent e
WriteVtuFile: Saving variable: coilcurrent
WriteVtuFile: Saving variable: magnetic flux density
WriteVtuFile: Saving variable: current density
WriteVtuFile: Saving variable: magnetic flux density e
WriteVtuFile: Saving variable: current density e
WriteVtuFile: Number of nodal fields written: 9
WriteVtuFile: Writing elemental fields
WriteVtuFile: Number of elemental fields written: 4
WriteVtuFile: Writing entity IDs for bodies and boundaries
WriteVtuFile: Writing coordinates for each used node
WriteVtuFile: Writing the elemental connectivity data
WriteVtuFile: Writing nodal fields
WriteVtuFile: Saving variable: coilpot
WriteVtuFile: Saving variable: coilpotb
WriteVtuFile: Saving variable: potselect
WriteVtuFile: Saving variable: coilsetb
WriteVtuFile: Saving variable: coilset
WriteVtuFile: Saving variable: coilindex e
WriteVtuFile: Saving variable: a
WriteVtuFile: Saving variable: coilcurrent e
WriteVtuFile: Saving variable: coilcurrent
WriteVtuFile: Saving variable: magnetic flux density
WriteVtuFile: Saving variable: current density
WriteVtuFile: Saving variable: magnetic flux density e
WriteVtuFile: Saving variable: current density e
WriteVtuFile: Writing elemental fields
AscBinWriteFree: Terminating buffered ascii/binary writing
VtuOutputSolver: All done for now
ResultOutputSolver: -------------------------------------
Loading user function library: [ResultOutputSolve]...[ResultOutputSolver_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: sv
SaveScalars: -----------------------------------------
SaveScalars: Saving scalar values of various kinds
SaveScalars: Performed 0 reduction operations
SaveScalars: Found 28 result scalars in simulation section
SaveScalars: Saving results from component - if any
SaveScalars: Found 28 values to save in total
SaveScalars: Saving values to file: RESU/coil.dat
SaveScalars: -----------------------------------------
Loading user function library: [SaveData]...[SaveScalars_post]
SaveResult: -----------------------------------------
SaveResult: Saving results to file: MESH/result.dat
SaveResult: Done writing results file
SaveResult: -----------------------------------------
MAIN: 
MAIN: -------------------------------------
MAIN: Time: 7/8:   1.167E+00
MAIN: Estimated time left:  8.4 minutes
MAIN: -------------------------------------
MAIN: 
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: mgdynamics
WhitneyAVSolver: -------------------------------------------
WhitneyAVSolver: Solving the AV equations with edge elements
DefaultStart: Starting solver: mgdynamics
WhitneyAVSolver: Nonlinear iteration: 1
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0379 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4788E-04 0.4788E-04
      40 0.1976E-05 0.1976E-05
      60 0.3792E-07 0.3792E-07
BiCGStabl:       68 0.9613E-08 0.9613E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=1) (NRM,RELC): ( 0.77592305E-02 0.12406047E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 2
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0452 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4761E-04 0.4761E-04
      40 0.4276E-05 0.4276E-05
      60 0.4338E-06 0.4338E-06
      80 0.9796E-07 0.9796E-07
     100 0.4318E-07 0.4318E-07
BiCGStabl:      109 0.8692E-08 0.8692E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=2) (NRM,RELC): ( 0.78424132E-02 0.10663330E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 3
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0513 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3688E-04 0.3688E-04
      40 0.3128E-05 0.3128E-05
      60 0.1957E-06 0.1957E-06
      80 0.1510E-07 0.1510E-07
BiCGStabl:       86 0.8851E-08 0.8851E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=3) (NRM,RELC): ( 0.79383890E-02 0.12163615E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 4
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0604 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.5051E-04 0.5051E-04
      40 0.5176E-05 0.5176E-05
      60 0.8719E-06 0.8719E-06
      80 0.5903E-07 0.5903E-07
BiCGStabl:       94 0.9843E-08 0.9843E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=4) (NRM,RELC): ( 0.80224717E-02 0.10536108E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 5
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0500 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3548E-04 0.3548E-04
      40 0.2768E-05 0.2768E-05
      60 0.3329E-06 0.3329E-06
      80 0.4177E-07 0.4177E-07
BiCGStabl:       94 0.9308E-08 0.9308E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=5) (NRM,RELC): ( 0.81199933E-02 0.12082621E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 6
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0495 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4746E-04 0.4746E-04
      40 0.4742E-05 0.4742E-05
      60 0.1191E-06 0.1191E-06
      80 0.5008E-07 0.5008E-07
BiCGStabl:       90 0.9743E-08 0.9743E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=6) (NRM,RELC): ( 0.82039365E-02 0.10284684E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 7
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0492 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3583E-04 0.3583E-04
      40 0.3373E-05 0.3373E-05
      60 0.8307E-06 0.8307E-06
      80 0.1236E-07 0.1236E-07
BiCGStabl:       86 0.7893E-08 0.7893E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=7) (NRM,RELC): ( 0.83026466E-02 0.11960080E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 8
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0509 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.5070E-04 0.5070E-04
      40 0.3856E-05 0.3856E-05
      60 0.2553E-06 0.2553E-06
WARNING:: RealBiCGStab(l): kappal^2 is non-positive, iteration halted
BiCGStabl:       69 0.2317E-05 0.2317E-05
WARNING:: IterSolve: Iteration halted due to problem in algorithm, trying to continue
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=8) (NRM,RELC): ( 0.83872139E-02 0.10133983E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 9
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0516 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3763E-04 0.3763E-04
      40 0.2147E-05 0.2147E-05
      60 0.1064E-06 0.1064E-06
BiCGStabl:       77 0.6124E-08 0.6124E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=9) (NRM,RELC): ( 0.84865286E-02 0.11771505E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 10
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0613 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.5130E-04 0.5130E-04
      40 0.4146E-05 0.4146E-05
      60 0.1346E-06 0.1346E-06
      80 0.2816E-07 0.2816E-07
BiCGStabl:       94 0.9215E-08 0.9215E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=10) (NRM,RELC): ( 0.85717171E-02 0.99879513E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 11
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0450 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3482E-04 0.3482E-04
      40 0.2527E-05 0.2527E-05
      60 0.3228E-06 0.3228E-06
      80 0.1193E-07 0.1193E-07
BiCGStabl:       81 0.9642E-08 0.9642E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=11) (NRM,RELC): ( 0.86720085E-02 0.11632226E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 12
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0520 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4993E-04 0.4993E-04
      40 0.5048E-05 0.5048E-05
      60 0.5167E-06 0.5167E-06
      80 0.6271E-07 0.6271E-07
BiCGStabl:       93 0.9293E-08 0.9293E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=12) (NRM,RELC): ( 0.87575548E-02 0.98162244E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 13
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0450 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2959E-04 0.2959E-04
      40 0.1602E-05 0.1602E-05
      60 0.3641E-06 0.3641E-06
      80 0.2300E-07 0.2300E-07
BiCGStabl:       83 0.7401E-08 0.7401E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=13) (NRM,RELC): ( 0.88588587E-02 0.11501081E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 14
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0515 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.5116E-04 0.5116E-04
      40 0.5248E-05 0.5248E-05
      60 0.2197E-06 0.2197E-06
      80 0.1336E-06 0.1336E-06
BiCGStabl:       96 0.8789E-08 0.8789E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=14) (NRM,RELC): ( 0.89447714E-02 0.96511454E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 15
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0494 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3488E-04 0.3488E-04
      40 0.3499E-05 0.3499E-05
      60 0.2617E-06 0.2617E-06
      80 0.1687E-07 0.1687E-07
BiCGStabl:       82 0.9651E-08 0.9651E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=15) (NRM,RELC): ( 0.90472795E-02 0.11394826E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 16
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0659 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4598E-04 0.4598E-04
      40 0.5083E-05 0.5083E-05
      60 0.9095E-06 0.9095E-06
      80 0.1148E-06 0.1148E-06
     100 0.3430E-07 0.3430E-07
     120 0.2558E-07 0.2558E-07
BiCGStabl:      125 0.7543E-08 0.7543E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=16) (NRM,RELC): ( 0.91335605E-02 0.94914112E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 17
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0580 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3649E-04 0.3649E-04
      40 0.2873E-05 0.2873E-05
      60 0.2039E-06 0.2039E-06
BiCGStabl:       76 0.9969E-08 0.9969E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=17) (NRM,RELC): ( 0.92373742E-02 0.11301959E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 18
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0523 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4988E-04 0.4988E-04
      40 0.2911E-05 0.2911E-05
      60 0.4516E-06 0.4516E-06
      80 0.5246E-07 0.5246E-07
BiCGStabl:       93 0.9700E-08 0.9700E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=18) (NRM,RELC): ( 0.93239199E-02 0.93253937E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 19
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0419 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3551E-04 0.3551E-04
      40 0.3420E-05 0.3420E-05
      60 0.1707E-06 0.1707E-06
BiCGStabl:       71 0.7077E-08 0.7077E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=19) (NRM,RELC): ( 0.94287265E-02 0.11177794E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 20
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0432 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.5250E-04 0.5250E-04
      40 0.6646E-05 0.6646E-05
      60 0.1199E-05 0.1199E-05
      80 0.6040E-07 0.6040E-07
     100 0.1336E-07 0.1336E-07
BiCGStabl:      102 0.8770E-08 0.8770E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=20) (NRM,RELC): ( 0.95155616E-02 0.91674127E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 21
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0540 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3563E-04 0.3563E-04
      40 0.2080E-05 0.2080E-05
      60 0.4232E-06 0.4232E-06
      80 0.4184E-05 0.4184E-05
BiCGStabl:       90 0.9634E-08 0.9634E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=21) (NRM,RELC): ( 0.96212225E-02 0.11042701E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 22
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0508 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.5161E-04 0.5161E-04
      40 0.5672E-05 0.5672E-05
      60 0.1220E-05 0.1220E-05
      80 0.9836E-08 0.9836E-08
BiCGStabl:       80 0.9836E-08 0.9836E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=22) (NRM,RELC): ( 0.97082797E-02 0.90077044E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 23
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0527 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3657E-04 0.3657E-04
      40 0.2433E-05 0.2433E-05
      60 0.9152E-07 0.9152E-07
BiCGStabl:       73 0.8265E-08 0.8265E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=23) (NRM,RELC): ( 0.98147624E-02 0.10908410E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 24
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0418 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.5094E-04 0.5094E-04
      40 0.3155E-05 0.3155E-05
      60 0.2789E-06 0.2789E-06
      80 0.2774E-07 0.2774E-07
BiCGStabl:       94 0.9004E-08 0.9004E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=24) (NRM,RELC): ( 0.99020241E-02 0.88515193E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 25
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0475 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3472E-04 0.3472E-04
      40 0.2331E-05 0.2331E-05
      60 0.1367E-06 0.1367E-06
      80 0.9643E-07 0.9643E-07
BiCGStabl:       94 0.9756E-08 0.9756E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=25) (NRM,RELC): ( 0.10009348E-01 0.10780161E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 26
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0560 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.5150E-04 0.5150E-04
      40 0.2234E-05 0.2234E-05
      60 0.2744E-06 0.2744E-06
      80 0.2847E-07 0.2847E-07
BiCGStabl:       83 0.9331E-08 0.9331E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=26) (NRM,RELC): ( 0.10096756E-01 0.86946401E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 27
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0592 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3907E-04 0.3907E-04
      40 0.2829E-05 0.2829E-05
      60 0.3573E-07 0.3573E-07
BiCGStabl:       67 0.9051E-08 0.9051E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=27) (NRM,RELC): ( 0.10204797E-01 0.10643684E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 28
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0509 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4795E-04 0.4795E-04
      40 0.5208E-05 0.5208E-05
      60 0.3905E-06 0.3905E-06
      80 0.3837E-06 0.3837E-06
     100 0.2060E-07 0.2060E-07
BiCGStabl:      106 0.9738E-08 0.9738E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=28) (NRM,RELC): ( 0.10292336E-01 0.85415489E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 29
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0526 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3896E-04 0.3896E-04
      40 0.3033E-05 0.3033E-05
      60 0.1592E-06 0.1592E-06
      80 0.5970E-07 0.5970E-07
BiCGStabl:       89 0.9797E-08 0.9797E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=29) (NRM,RELC): ( 0.10401031E-01 0.10505294E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 30
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0435 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4838E-04 0.4838E-04
      40 0.4779E-05 0.4779E-05
      60 0.3907E-06 0.3907E-06
      80 0.3310E-07 0.3310E-07
BiCGStabl:       92 0.7944E-08 0.7944E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=30) (NRM,RELC): ( 0.10488688E-01 0.83923386E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 31
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0575 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3973E-04 0.3973E-04
      40 0.3212E-05 0.3212E-05
      60 0.4311E-06 0.4311E-06
      80 0.5430E-07 0.5430E-07
BiCGStabl:       96 0.8887E-08 0.8887E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=31) (NRM,RELC): ( 0.10598013E-01 0.10369126E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 32
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0519 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.1009E-03 0.1009E-03
      40 0.6149E-05 0.6149E-05
      60 0.3836E-06 0.3836E-06
      80 0.6407E-07 0.6407E-07
BiCGStabl:       88 0.9659E-08 0.9659E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=32) (NRM,RELC): ( 0.10685779E-01 0.82472049E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 33
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0403 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3490E-04 0.3490E-04
      40 0.2975E-05 0.2975E-05
      60 0.3096E-06 0.3096E-06
      80 0.1496E-07 0.1496E-07
BiCGStabl:       82 0.9993E-08 0.9993E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=33) (NRM,RELC): ( 0.10795704E-01 0.10234359E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 34
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0477 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3727E-04 0.3727E-04
      40 0.2765E-05 0.2765E-05
      60 0.1361E-06 0.1361E-06
      80 0.2362E-07 0.2362E-07
BiCGStabl:       89 0.9336E-08 0.9336E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=34) (NRM,RELC): ( 0.10883583E-01 0.81072184E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 35
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0482 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3834E-04 0.3834E-04
      40 0.3202E-05 0.3202E-05
      60 0.2370E-06 0.2370E-06
      80 0.2366E-07 0.2366E-07
BiCGStabl:       84 0.6051E-08 0.6051E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=35) (NRM,RELC): ( 0.10994091E-01 0.10102324E-01 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 36
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0563 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4810E-04 0.4810E-04
      40 0.3147E-05 0.3147E-05
      60 0.7227E-06 0.7227E-06
      80 0.8880E-07 0.8880E-07
     100 0.1775E-07 0.1775E-07
BiCGStabl:      104 0.6586E-08 0.6586E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=36) (NRM,RELC): ( 0.11082058E-01 0.79694467E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 37
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0494 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3832E-04 0.3832E-04
      40 0.3449E-05 0.3449E-05
      60 0.1381E-06 0.1381E-06
BiCGStabl:       75 0.9914E-08 0.9914E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=37) (NRM,RELC): ( 0.11193123E-01 0.99721279E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 38
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0488 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.5102E-04 0.5102E-04
      40 0.1470E-04 0.1470E-04
      60 0.7677E-05 0.7677E-05
      80 0.1927E-06 0.1927E-06
     100 0.3695E-07 0.3695E-07
BiCGStabl:      120 0.8563E-08 0.8563E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=38) (NRM,RELC): ( 0.11281186E-01 0.78367398E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 39
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0548 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3672E-04 0.3672E-04
      40 0.3849E-05 0.3849E-05
      60 0.2119E-06 0.2119E-06
      80 0.1491E-07 0.1491E-07
BiCGStabl:       83 0.9956E-08 0.9956E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=39) (NRM,RELC): ( 0.11392784E-01 0.98437327E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 40
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0623 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4885E-04 0.4885E-04
      40 0.8079E-05 0.8079E-05
      60 0.1778E-04 0.1778E-04
      80 0.1177E-06 0.1177E-06
BiCGStabl:       96 0.9934E-08 0.9934E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=40) (NRM,RELC): ( 0.11480914E-01 0.77057936E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 41
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0436 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2798E-04 0.2798E-04
      40 0.2360E-05 0.2360E-05
      60 0.1854E-06 0.1854E-06
      80 0.1748E-07 0.1748E-07
BiCGStabl:       86 0.8786E-08 0.8786E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=41) (NRM,RELC): ( 0.11593016E-01 0.97167714E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 42
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0551 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4851E-04 0.4851E-04
      40 0.4846E-03 0.4846E-03
      60 0.8935E-06 0.8935E-06
      80 0.4624E-07 0.4624E-07
BiCGStabl:       96 0.9248E-08 0.9248E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=42) (NRM,RELC): ( 0.11681194E-01 0.75772556E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 43
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0576 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3722E-04 0.3722E-04
      40 0.2852E-05 0.2852E-05
      60 0.3704E-06 0.3704E-06
      80 0.3558E-07 0.3558E-07
BiCGStabl:       86 0.9381E-08 0.9381E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=43) (NRM,RELC): ( 0.11793786E-01 0.95925612E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 44
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0543 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.5148E-04 0.5148E-04
      40 0.5011E-05 0.5011E-05
      60 0.3745E-06 0.3745E-06
      80 0.1193E-06 0.1193E-06
BiCGStabl:       98 0.8791E-08 0.8791E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=44) (NRM,RELC): ( 0.11882018E-01 0.74533658E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 45
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0624 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3757E-04 0.3757E-04
      40 0.3216E-05 0.3216E-05
      60 0.2195E-06 0.2195E-06
BiCGStabl:       74 0.8425E-08 0.8425E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=45) (NRM,RELC): ( 0.11995066E-01 0.94691186E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 46
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0478 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4844E-04 0.4844E-04
      40 0.8109E-05 0.8109E-05
      60 0.3238E-06 0.3238E-06
      80 0.2992E-07 0.2992E-07
BiCGStabl:       94 0.7526E-08 0.7526E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=46) (NRM,RELC): ( 0.12083345E-01 0.73326180E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 47
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0481 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3726E-04 0.3726E-04
      40 0.3288E-05 0.3288E-05
      60 0.1779E-06 0.1779E-06
BiCGStabl:       77 0.8857E-08 0.8857E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=47) (NRM,RELC): ( 0.12196823E-01 0.93473602E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 48
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0415 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.5024E-04 0.5024E-04
      40 0.5598E-05 0.5598E-05
      60 0.1209E-05 0.1209E-05
      80 0.1399E-06 0.1399E-06
     100 0.4111E-07 0.4111E-07
BiCGStabl:      119 0.3620E-08 0.3620E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=48) (NRM,RELC): ( 0.12285159E-01 0.72164350E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 49
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0489 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3614E-04 0.3614E-04
      40 0.3502E-05 0.3502E-05
      60 0.1819E-06 0.1819E-06
BiCGStabl:       78 0.9404E-08 0.9404E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=49) (NRM,RELC): ( 0.12399054E-01 0.92281545E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 50
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0636 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4963E-04 0.4963E-04
      40 0.7450E-05 0.7450E-05
      60 0.5373E-06 0.5373E-06
      80 0.8658E-07 0.8658E-07
BiCGStabl:       99 0.7101E-08 0.7101E-08
ComputeNorm: Computing norm of solution
ComputeChange: Nonlinear iteration did not converge to tolerance
ComputeChange: NS (ITER=50) (NRM,RELC): ( 0.12487450E-01 0.71039395E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
DefaultSlaveSolvers: Executing slave solvers: Post Solvers
DefaultSlaveSolvers: Calling slave solver: 4
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: mgdynamicscalc
MagnetoDynamicsCalcFields: ------------------------------
MagnetoDynamicsCalcFields: Computing postprocessed fields
MagnetoDynamicsCalcFields: Using potential variable: a
MagnetoDynamicsCalcFields: Number of components to compute: 6
MagnetoDynamicsCalcFields: Solving for field: magnetic flux density[magnetic flux density:3]
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.4452E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=1) (NRM,RELC): (  1.3669518      1.9998807     ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3726E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=2) (NRM,RELC): (  1.3328767     0.25242455E-01 ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3659E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=3) (NRM,RELC): (  1.1901498     0.11313944     ) :: mgdynamicscalc
MagnetoDynamicsCalcFields: Solving for field: current density[current density:3]
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.6083E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=4) (NRM,RELC): (  5056627.1      1.9999991     ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.6549E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=5) (NRM,RELC): (  5039693.8     0.33543459E-02 ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.4279E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=6) (NRM,RELC): (  51538.578      1.9595080     ) :: mgdynamicscalc
MagnetoDynamicsCalcFields: Eddy current power:    2.120550E+00
MagnetoDynamicsCalcFields: ElectroMagnetic Field Energy:    5.286791E+04
Loading user function library: [MagnetoDynamics]...[MagnetoDynamicsCalcFields_post]
DefaultFinish: Finished solver: mgdynamics
WhitneyAVSolver: All done
WhitneyAVSolver: -------------------------------------------
Loading user function library: [MagnetoDynamics]...[WhitneyAVSolver_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: mgdynamicscalc
MagnetoDynamicsCalcFields: ------------------------------
MagnetoDynamicsCalcFields: Computing postprocessed fields
MagnetoDynamicsCalcFields: Using potential variable: a
MagnetoDynamicsCalcFields: Number of components to compute: 6
MagnetoDynamicsCalcFields: Solving for field: magnetic flux density[magnetic flux density:3]
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.4452E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=1) (NRM,RELC): (  1.3669518      1.9998939     ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3726E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=2) (NRM,RELC): (  1.3328767     0.25242455E-01 ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3659E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=3) (NRM,RELC): (  1.1901498     0.11313944     ) :: mgdynamicscalc
MagnetoDynamicsCalcFields: Solving for field: current density[current density:3]
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.6083E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=4) (NRM,RELC): (  5056627.1      1.9999991     ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.6549E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=5) (NRM,RELC): (  5039693.8     0.33543459E-02 ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.4279E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=6) (NRM,RELC): (  51538.578      1.9595080     ) :: mgdynamicscalc
MagnetoDynamicsCalcFields: Eddy current power:    2.120550E+00
MagnetoDynamicsCalcFields: ElectroMagnetic Field Energy:    5.286791E+04
Loading user function library: [MagnetoDynamics]...[MagnetoDynamicsCalcFields_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits output
DefaultStart: Starting solver: circuits output
CircuitsOutput: Initializing Lagrange multipliers of size: 19
CircuitsOutput: Writing Circuit Results
CircuitsOutput: Writing Circuit Variables for Circuit 1
CircuitsOutput: There are 11 Circuit Variables
CircuitsOutput: i_IS1      5.0000E+01
CircuitsOutput: i_Rcl1      5.0000E+01
CircuitsOutput: i_component(1)      5.0000E+01
CircuitsOutput: i_component(3)      5.0000E+01
CircuitsOutput: v_IS1      6.1569E+00
CircuitsOutput: v_Rcl1      5.0000E+00
CircuitsOutput: v_component(1)      5.8388E-01
CircuitsOutput: v_component(3)      5.7304E-01
CircuitsOutput: u_2_circuit_1      6.1569E+00
CircuitsOutput: u_3_circuit_1      1.1569E+00
CircuitsOutput: u_4_circuit_1      5.7304E-01
CircuitsOutput: Writing Component Variables for Circuit 1
CircuitsOutput: r_component(1)      0.0000E+00
CircuitsOutput: p_dc_component(1)      0.0000E+00
CircuitsOutput: r_component(3)      0.0000E+00
CircuitsOutput: p_dc_component(3)      0.0000E+00
CircuitsOutput: Writing Circuit Variables for Circuit 2
CircuitsOutput: There are 8 Circuit Variables
CircuitsOutput: i_IS2      1.0000E+02
CircuitsOutput: i_Rcl2      1.0000E+02
CircuitsOutput: i_component(2)      1.0000E+02
CircuitsOutput: v_IS2      1.1397E+01
CircuitsOutput: v_Rcl2      1.0000E+01
CircuitsOutput: v_component(2)      1.3971E+00
CircuitsOutput: u_2_circuit_2      1.1397E+01
CircuitsOutput: u_3_circuit_2      1.3971E+00
CircuitsOutput: Writing Component Variables for Circuit 2
CircuitsOutput: r_component(2)      0.0000E+00
CircuitsOutput: p_dc_component(2)      0.0000E+00
DefaultFinish: Finished solver: circuits output
Loading user function library: [CircuitsAndDynamics]...[CircuitsOutput_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: resultoutput
ResultOutputSolver: -------------------------------------
ResultOutputSolver: Working on mesh: MESH
ResultOutputSolver: Dimension of mesh is: 3
ResultOutputSolver: Saving in unstructured VTK XML (.vtu) format
VtuOutputSolver: Full filename base is: RESU/coil
GenerateSaveMask: Number of active elements 62447 out of 62447
GenerateSaveMask: Number of geometry nodes 9022 out of 9022
VtuOutputSolver: Setting offset for boundary entities: 100
VtuOutputSolver: Writing the vtu file: RESU/coil_t0007.vtu
AscBinWriteInit: Initializing buffered ascii/binary writing
AscBinWriteInit: Writing in binary
AscBinWriteInit: Writing in double precision
AscBinWriteInit: Writing to unit number: 58
AscBinWriteInit: Size of buffer is: 9022
WriteVtuFile: Writing nodal fields
WriteVtuFile: Saving variable: coilpot
WriteVtuFile: Saving variable: coilpotb
WriteVtuFile: Saving variable: potselect
WriteVtuFile: Saving variable: coilsetb
WriteVtuFile: Saving variable: coilset
WriteVtuFile: Saving variable: coilindex e
WriteVtuFile: Saving variable: a
WriteVtuFile: Saving variable: coilcurrent e
WriteVtuFile: Saving variable: coilcurrent
WriteVtuFile: Saving variable: magnetic flux density
WriteVtuFile: Saving variable: current density
WriteVtuFile: Saving variable: magnetic flux density e
WriteVtuFile: Saving variable: current density e
WriteVtuFile: Number of nodal fields written: 9
WriteVtuFile: Writing elemental fields
WriteVtuFile: Number of elemental fields written: 4
WriteVtuFile: Writing entity IDs for bodies and boundaries
WriteVtuFile: Writing coordinates for each used node
WriteVtuFile: Writing the elemental connectivity data
WriteVtuFile: Writing nodal fields
WriteVtuFile: Saving variable: coilpot
WriteVtuFile: Saving variable: coilpotb
WriteVtuFile: Saving variable: potselect
WriteVtuFile: Saving variable: coilsetb
WriteVtuFile: Saving variable: coilset
WriteVtuFile: Saving variable: coilindex e
WriteVtuFile: Saving variable: a
WriteVtuFile: Saving variable: coilcurrent e
WriteVtuFile: Saving variable: coilcurrent
WriteVtuFile: Saving variable: magnetic flux density
WriteVtuFile: Saving variable: current density
WriteVtuFile: Saving variable: magnetic flux density e
WriteVtuFile: Saving variable: current density e
WriteVtuFile: Writing elemental fields
AscBinWriteFree: Terminating buffered ascii/binary writing
VtuOutputSolver: All done for now
ResultOutputSolver: -------------------------------------
Loading user function library: [ResultOutputSolve]...[ResultOutputSolver_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: sv
SaveScalars: -----------------------------------------
SaveScalars: Saving scalar values of various kinds
SaveScalars: Performed 0 reduction operations
SaveScalars: Found 28 result scalars in simulation section
SaveScalars: Saving results from component - if any
SaveScalars: Found 28 values to save in total
SaveScalars: Saving values to file: RESU/coil.dat
SaveScalars: -----------------------------------------
Loading user function library: [SaveData]...[SaveScalars_post]
SaveResult: -----------------------------------------
SaveResult: Saving results to file: MESH/result.dat
SaveResult: Done writing results file
SaveResult: -----------------------------------------
MAIN: 
MAIN: -------------------------------------
MAIN: Time: 8/8:   1.500E+00
MAIN: Estimated time left:  4.6 minutes
MAIN: -------------------------------------
MAIN: 
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: mgdynamics
WhitneyAVSolver: -------------------------------------------
WhitneyAVSolver: Solving the AV equations with edge elements
DefaultStart: Starting solver: mgdynamics
WhitneyAVSolver: Nonlinear iteration: 1
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0396 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3721E-04 0.3721E-04
      40 0.3276E-05 0.3276E-05
      60 0.4053E-06 0.4053E-06
      80 0.1747E-07 0.1747E-07
BiCGStabl:       96 0.9819E-08 0.9819E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=1) (NRM,RELC): ( 0.12601750E-01 0.91115009E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 2
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0632 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.5238E-04 0.5238E-04
      40 0.5718E-05 0.5718E-05
      60 0.3290E-06 0.3290E-06
      80 0.3919E-07 0.3919E-07
BiCGStabl:      100 0.9822E-08 0.9822E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=2) (NRM,RELC): ( 0.12690194E-01 0.69938446E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 3
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0417 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3564E-04 0.3564E-04
      40 0.3651E-05 0.3651E-05
      60 0.7191E-06 0.7191E-06
      80 0.1980E-06 0.1980E-06
BiCGStabl:       96 0.6950E-08 0.6950E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=3) (NRM,RELC): ( 0.12804876E-01 0.89964346E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 4
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0404 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3900E-04 0.3900E-04
      40 0.5586E-05 0.5586E-05
      60 0.7106E-06 0.7106E-06
      80 0.5583E-07 0.5583E-07
BiCGStabl:       94 0.9335E-08 0.9335E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=4) (NRM,RELC): ( 0.12893370E-01 0.68871593E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 5
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0549 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3567E-04 0.3567E-04
      40 0.3244E-05 0.3244E-05
      60 0.2966E-06 0.2966E-06
      80 0.2321E-07 0.2321E-07
BiCGStabl:       88 0.6469E-08 0.6469E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=5) (NRM,RELC): ( 0.13008426E-01 0.88839559E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 6
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0490 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4707E-04 0.4707E-04
      40 0.5499E-05 0.5499E-05
      60 0.2253E-06 0.2253E-06
      80 0.3679E-06 0.3679E-06
     100 0.2180E-07 0.2180E-07
BiCGStabl:      108 0.8803E-08 0.8803E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=6) (NRM,RELC): ( 0.13096959E-01 0.67827492E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 7
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0442 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3720E-04 0.3720E-04
      40 0.1087E-05 0.1087E-05
      60 0.1219E-06 0.1219E-06
      80 0.1912E-07 0.1912E-07
BiCGStabl:       84 0.9013E-08 0.9013E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=7) (NRM,RELC): ( 0.13212365E-01 0.87730406E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 8
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0417 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4738E-04 0.4738E-04
      40 0.7949E-05 0.7949E-05
      60 0.2108E-06 0.2108E-06
      80 0.2140E-07 0.2140E-07
BiCGStabl:       99 0.9725E-08 0.9725E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=8) (NRM,RELC): ( 0.13300940E-01 0.66815375E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 9
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0411 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3512E-04 0.3512E-04
      40 0.4266E-05 0.4266E-05
      60 0.6355E-06 0.6355E-06
      80 0.3745E-07 0.3745E-07
BiCGStabl:       90 0.9874E-08 0.9874E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=9) (NRM,RELC): ( 0.13416690E-01 0.86647124E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 10
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0494 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4831E-04 0.4831E-04
      40 0.5825E-04 0.5825E-04
      60 0.1197E-05 0.1197E-05
      80 0.7447E-07 0.7447E-07
BiCGStabl:       87 0.6682E-08 0.6682E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=10) (NRM,RELC): ( 0.13505297E-01 0.65824706E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 11
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0546 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3434E-04 0.3434E-04
      40 0.3669E-05 0.3669E-05
      60 0.3676E-06 0.3676E-06
      80 0.3220E-07 0.3220E-07
BiCGStabl:       93 0.9854E-08 0.9854E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=11) (NRM,RELC): ( 0.13621370E-01 0.85579061E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 12
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0483 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4845E-04 0.4845E-04
      40 0.5113E-05 0.5113E-05
      60 0.5077E-06 0.5077E-06
      80 0.2858E-07 0.2858E-07
BiCGStabl:       90 0.9690E-08 0.9690E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=12) (NRM,RELC): ( 0.13710012E-01 0.64863921E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 13
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0416 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3748E-04 0.3748E-04
      40 0.3379E-05 0.3379E-05
      60 0.3129E-06 0.3129E-06
      80 0.3388E-07 0.3388E-07
BiCGStabl:       95 0.9902E-08 0.9902E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=13) (NRM,RELC): ( 0.13826403E-01 0.84536505E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 14
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0437 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.5233E-04 0.5233E-04
      40 0.5782E-05 0.5782E-05
      60 0.2579E-06 0.2579E-06
      80 0.1765E-07 0.1765E-07
BiCGStabl:       82 0.6220E-08 0.6220E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=14) (NRM,RELC): ( 0.13915069E-01 0.63923175E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 15
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0483 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3852E-04 0.3852E-04
      40 0.3616E-05 0.3616E-05
      60 0.1554E-06 0.1554E-06
      80 0.2492E-07 0.2492E-07
BiCGStabl:       86 0.6408E-08 0.6408E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=15) (NRM,RELC): ( 0.14031760E-01 0.83508762E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 16
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0453 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4950E-04 0.4950E-04
      40 0.8745E-05 0.8745E-05
      60 0.1654E-06 0.1654E-06
      80 0.1319E-07 0.1319E-07
BiCGStabl:       85 0.8128E-08 0.8128E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=16) (NRM,RELC): ( 0.14120454E-01 0.63010934E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 17
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0527 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3867E-04 0.3867E-04
      40 0.2266E-05 0.2266E-05
      60 0.4917E-06 0.4917E-06
      80 0.1402E-07 0.1402E-07
BiCGStabl:       86 0.9856E-08 0.9856E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=17) (NRM,RELC): ( 0.14237439E-01 0.82506058E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 18
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0534 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4965E-04 0.4965E-04
      40 0.5044E-05 0.5044E-05
      60 0.4897E-06 0.4897E-06
      80 0.6840E-07 0.6840E-07
BiCGStabl:       96 0.9624E-08 0.9624E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=18) (NRM,RELC): ( 0.14326154E-01 0.62117180E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 19
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0411 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3775E-04 0.3775E-04
      40 0.1894E-05 0.1894E-05
      60 0.1827E-06 0.1827E-06
BiCGStabl:       79 0.9258E-08 0.9258E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=19) (NRM,RELC): ( 0.14443415E-01 0.81517516E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 20
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0500 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4935E-04 0.4935E-04
      40 0.7050E-05 0.7050E-05
      60 0.4193E-06 0.4193E-06
      80 0.4787E-07 0.4787E-07
BiCGStabl:       97 0.9671E-08 0.9671E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=20) (NRM,RELC): ( 0.14532153E-01 0.61249993E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 21
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0551 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3849E-04 0.3849E-04
      40 0.2787E-05 0.2787E-05
      60 0.3208E-06 0.3208E-06
      80 0.3402E-07 0.3402E-07
BiCGStabl:       87 0.9821E-08 0.9821E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=21) (NRM,RELC): ( 0.14649687E-01 0.80553330E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 22
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0494 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4634E-04 0.4634E-04
      40 0.3733E-05 0.3733E-05
      60 0.3384E-06 0.3384E-06
      80 0.6513E-07 0.6513E-07
BiCGStabl:       98 0.9336E-08 0.9336E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=22) (NRM,RELC): ( 0.14738440E-01 0.60400195E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 23
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0481 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3945E-04 0.3945E-04
      40 0.2989E-05 0.2989E-05
      60 0.2667E-06 0.2667E-06
      80 0.1628E-07 0.1628E-07
BiCGStabl:       89 0.9754E-08 0.9754E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=23) (NRM,RELC): ( 0.14856231E-01 0.79602748E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 24
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0520 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.5100E-04 0.5100E-04
      40 0.6747E-05 0.6747E-05
      60 0.4701E-06 0.4701E-06
      80 0.5219E-07 0.5219E-07
     100 0.1594E-07 0.1594E-07
BiCGStabl:      109 0.9355E-08 0.9355E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=24) (NRM,RELC): ( 0.14945002E-01 0.59575537E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 25
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0554 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3760E-04 0.3760E-04
      40 0.4869E-05 0.4869E-05
      60 0.4693E-06 0.4693E-06
      80 0.2827E-07 0.2827E-07
BiCGStabl:       92 0.8342E-08 0.8342E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=25) (NRM,RELC): ( 0.15063047E-01 0.78675855E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 26
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0670 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4895E-04 0.4895E-04
      40 0.8369E-05 0.8369E-05
      60 0.7544E-05 0.7544E-05
      80 0.5040E-07 0.5040E-07
BiCGStabl:       92 0.8519E-08 0.8519E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=26) (NRM,RELC): ( 0.15151829E-01 0.58767095E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 27
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0459 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3579E-04 0.3579E-04
      40 0.4274E-05 0.4274E-05
      60 0.5322E-06 0.5322E-06
      80 0.3348E-07 0.3348E-07
BiCGStabl:       95 0.9803E-08 0.9803E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=27) (NRM,RELC): ( 0.15270113E-01 0.77761941E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 28
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0548 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4845E-04 0.4845E-04
      40 0.6845E-05 0.6845E-05
      60 0.3482E-06 0.3482E-06
      80 0.2149E-07 0.2149E-07
BiCGStabl:       88 0.8849E-08 0.8849E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=28) (NRM,RELC): ( 0.15358910E-01 0.57982305E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 29
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0508 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2739E-04 0.2739E-04
      40 0.4013E-05 0.4013E-05
      60 0.3783E-06 0.3783E-06
      80 0.2174E-07 0.2174E-07
BiCGStabl:       87 0.6795E-08 0.6795E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=29) (NRM,RELC): ( 0.15477431E-01 0.76870945E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 30
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0552 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4306E-04 0.4306E-04
      40 0.5825E-05 0.5825E-05
      60 0.1692E-05 0.1692E-05
      80 0.6366E-07 0.6366E-07
BiCGStabl:      100 0.8574E-08 0.8574E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=30) (NRM,RELC): ( 0.15566235E-01 0.57212567E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 31
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0512 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3785E-04 0.3785E-04
      40 0.3995E-05 0.3995E-05
      60 0.4413E-06 0.4413E-06
      80 0.1106E-07 0.1106E-07
BiCGStabl:       81 0.9979E-08 0.9979E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=31) (NRM,RELC): ( 0.15684978E-01 0.75992195E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 32
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0461 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4854E-04 0.4854E-04
      40 0.3514E-05 0.3514E-05
      60 0.1346E-06 0.1346E-06
      80 0.2726E-07 0.2726E-07
BiCGStabl:       92 0.8887E-08 0.8887E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=32) (NRM,RELC): ( 0.15773793E-01 0.56464903E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 33
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0524 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3906E-04 0.3906E-04
      40 0.3485E-05 0.3485E-05
      60 0.2139E-06 0.2139E-06
BiCGStabl:       74 0.9960E-08 0.9960E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=33) (NRM,RELC): ( 0.15892758E-01 0.75135569E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 34
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0521 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4893E-04 0.4893E-04
      40 0.6106E-05 0.6106E-05
      60 0.2640E-06 0.2640E-06
      80 0.6930E-08 0.6930E-08
BiCGStabl:       80 0.6930E-08 0.6930E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=34) (NRM,RELC): ( 0.15981578E-01 0.55731352E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 35
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0458 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3544E-04 0.3544E-04
      40 0.2690E-05 0.2690E-05
      60 0.2427E-06 0.2427E-06
      80 0.1121E-07 0.1121E-07
BiCGStabl:       81 0.8415E-08 0.8415E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=35) (NRM,RELC): ( 0.16100748E-01 0.74290548E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 36
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0446 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4810E-04 0.4810E-04
      40 0.6787E-05 0.6787E-05
      60 0.1139E-05 0.1139E-05
      80 0.4609E-07 0.4609E-07
BiCGStabl:       92 0.5768E-08 0.5768E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=36) (NRM,RELC): ( 0.16189577E-01 0.55018754E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 37
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0527 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3817E-04 0.3817E-04
      40 0.2295E-05 0.2295E-05
      60 0.1733E-06 0.1733E-06
      80 0.1904E-07 0.1904E-07
BiCGStabl:       83 0.8858E-08 0.8858E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=37) (NRM,RELC): ( 0.16308955E-01 0.73466914E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 38
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0460 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4896E-04 0.4896E-04
      40 0.4622E-05 0.4622E-05
      60 0.2365E-06 0.2365E-06
      80 0.2428E-07 0.2428E-07
BiCGStabl:       87 0.8483E-08 0.8483E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=38) (NRM,RELC): ( 0.16397786E-01 0.54319344E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 39
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0594 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3670E-04 0.3670E-04
      40 0.3260E-05 0.3260E-05
      60 0.9683E-07 0.9683E-07
BiCGStabl:       72 0.9742E-08 0.9742E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=39) (NRM,RELC): ( 0.16517357E-01 0.72654167E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 40
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0361 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.5013E-04 0.5013E-04
      40 0.4803E-05 0.4803E-05
      60 0.2454E-06 0.2454E-06
      80 0.1569E-07 0.1569E-07
BiCGStabl:       86 0.8258E-08 0.8258E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=40) (NRM,RELC): ( 0.16606193E-01 0.53639258E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 41
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0567 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3931E-04 0.3931E-04
      40 0.3842E-05 0.3842E-05
      60 0.5036E-06 0.5036E-06
BiCGStabl:       76 0.7433E-08 0.7433E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=41) (NRM,RELC): ( 0.16725959E-01 0.71862075E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 42
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0487 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.5103E-04 0.5103E-04
      40 0.4929E-05 0.4929E-05
      60 0.6210E-06 0.6210E-06
      80 0.8741E-07 0.8741E-07
     100 0.1839E-07 0.1839E-07
BiCGStabl:      106 0.9750E-08 0.9750E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=42) (NRM,RELC): ( 0.16814795E-01 0.52971917E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 43
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0435 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3579E-04 0.3579E-04
      40 0.2047E-05 0.2047E-05
      60 0.7599E-07 0.7599E-07
BiCGStabl:       69 0.6984E-08 0.6984E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=43) (NRM,RELC): ( 0.16934741E-01 0.71080375E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 44
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0696 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4980E-04 0.4980E-04
      40 0.7865E-05 0.7865E-05
      60 0.9861E-06 0.9861E-06
      80 0.1103E-06 0.1103E-06
     100 0.1846E-07 0.1846E-07
BiCGStabl:      107 0.9634E-08 0.9634E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=44) (NRM,RELC): ( 0.17023581E-01 0.52323088E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 45
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0509 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.3895E-04 0.3895E-04
      40 0.3578E-05 0.3578E-05
      60 0.8230E-06 0.8230E-06
      80 0.1777E-06 0.1777E-06
BiCGStabl:       93 0.9359E-08 0.9359E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=45) (NRM,RELC): ( 0.17143711E-01 0.70318367E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 46
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0454 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4609E-04 0.4609E-04
      40 0.5096E-05 0.5096E-05
      60 0.9542E-06 0.9542E-06
      80 0.1178E-06 0.1178E-06
BiCGStabl:       93 0.8924E-08 0.8924E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=46) (NRM,RELC): ( 0.17232548E-01 0.51685109E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 47
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0448 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.2662E-04 0.2662E-04
      40 0.2597E-05 0.2597E-05
      60 0.1272E-06 0.1272E-06
      80 0.2782E-07 0.2782E-07
BiCGStabl:       86 0.9409E-08 0.9409E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=47) (NRM,RELC): ( 0.17352846E-01 0.69565896E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 48
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0566 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4703E-04 0.4703E-04
      40 0.3949E-05 0.3949E-05
      60 0.3990E-06 0.3990E-06
      80 0.2120E-07 0.2120E-07
BiCGStabl:       87 0.9994E-08 0.9994E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=48) (NRM,RELC): ( 0.17441685E-01 0.51065081E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 49
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0617 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4016E-04 0.4016E-04
      40 0.3072E-05 0.3072E-05
      60 0.2558E-06 0.2558E-06
      80 0.2253E-07 0.2253E-07
BiCGStabl:       87 0.9851E-08 0.9851E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=49) (NRM,RELC): ( 0.17562156E-01 0.68832738E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
WhitneyAVSolver: Nonlinear iteration: 50
DefaultSlaveSolvers: Executing slave solvers: Nonlinear Pre Solvers
DefaultSlaveSolvers: Calling slave solver: 2
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits
AddComponentEquationsAndCouplings: Using coil resistance for component 1
AddComponentEquationsAndCouplings: Using coil resistance for component 2
AddComponentEquationsAndCouplings: Using coil resistance for component 1
Loading user function library: [CircuitsAndDynamics]...[CircuitsAndDynamics_post]
MGDynAssembly: Elapsed REAL time:     1.0573 (s)
DefUtils::DefaultDirichletBCs: Setting Dirichlet boundary conditions
EnforceDirichletConditions: Applying Dirichlet conditions using scaled diagonal
ScaleLinearSystem: Scaling diagonal entries to unity
EnforceDirichletConditions: Dirichlet conditions enforced for dofs: 382
DefUtils::DefaultDirichletBCs: Dirichlet boundary conditions set
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveSystem: Previous solution must be stored before system is solved
SolveSystem: Solving linear system with constraint matrix
SolveWithLinearRestriction: 
SolveWithLinearRestriction: Freeing previous collection matrix structures
SolveWithLinearRestriction: Lagrange Multiplier Name set to: LagrangeMultiplier
SolveWithLinearRestriction: Adding AddMatrix into CollectionMatrix
SolveWithLinearRestriction: Adding Stiffness Matrix into CollectionMatrix
SolveWithLinearRestriction: Reverting CollectionMatrix back to CRS matrix
List_ToCRSMatrix: Number of entries in CRS matrix: 2016701
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveWithLinearRestriction: CollectionMatrix done
SolveWithLinearRestriction: CollectionVector done
SolveWithLinearRestriction: Now going for the coupled linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: circuit
List_ToCRSMatrix: Number of entries in CRS matrix: 50
List_ToCRSMatrix: Matrix format changed from List to CRS
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: bicgstabl
      20 0.4873E-04 0.4873E-04
      40 0.5658E-05 0.5658E-05
      60 0.3936E-06 0.3936E-06
      80 0.3130E-07 0.3130E-07
BiCGStabl:       91 0.8720E-08 0.8720E-08
ComputeNorm: Computing norm of solution
ComputeChange: Nonlinear iteration did not converge to tolerance
ComputeChange: NS (ITER=50) (NRM,RELC): ( 0.17650991E-01 0.50455620E-02 ) :: mgdynamics
SolveWithLinearRestriction: Picking solution from collection solution
SolveWithLinearRestriction: All done
DefaultSlaveSolvers: Executing slave solvers: Post Solvers
DefaultSlaveSolvers: Calling slave solver: 4
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: mgdynamicscalc
MagnetoDynamicsCalcFields: ------------------------------
MagnetoDynamicsCalcFields: Computing postprocessed fields
MagnetoDynamicsCalcFields: Using potential variable: a
MagnetoDynamicsCalcFields: Number of components to compute: 6
MagnetoDynamicsCalcFields: Solving for field: magnetic flux density[magnetic flux density:3]
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.4452E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=1) (NRM,RELC): (  1.3668904      1.9998939     ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3726E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=2) (NRM,RELC): (  1.3327515     0.25291401E-01 ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3659E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=3) (NRM,RELC): (  1.1901174     0.11307292     ) :: mgdynamicscalc
MagnetoDynamicsCalcFields: Solving for field: current density[current density:3]
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.6083E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=4) (NRM,RELC): (  5056627.1      1.9999991     ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.6549E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=5) (NRM,RELC): (  5039693.8     0.33543459E-02 ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.4279E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=6) (NRM,RELC): (  51538.578      1.9595080     ) :: mgdynamicscalc
MagnetoDynamicsCalcFields: Eddy current power:    2.120550E+00
MagnetoDynamicsCalcFields: ElectroMagnetic Field Energy:    5.286394E+04
Loading user function library: [MagnetoDynamics]...[MagnetoDynamicsCalcFields_post]
DefaultFinish: Finished solver: mgdynamics
WhitneyAVSolver: All done
WhitneyAVSolver: -------------------------------------------
Loading user function library: [MagnetoDynamics]...[WhitneyAVSolver_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: mgdynamicscalc
MagnetoDynamicsCalcFields: ------------------------------
MagnetoDynamicsCalcFields: Computing postprocessed fields
MagnetoDynamicsCalcFields: Using potential variable: a
MagnetoDynamicsCalcFields: Number of components to compute: 6
MagnetoDynamicsCalcFields: Solving for field: magnetic flux density[magnetic flux density:3]
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.4452E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=1) (NRM,RELC): (  1.3668904      1.9998939     ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3726E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=2) (NRM,RELC): (  1.3327515     0.25291401E-01 ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.3659E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=3) (NRM,RELC): (  1.1901174     0.11307292     ) :: mgdynamicscalc
MagnetoDynamicsCalcFields: Solving for field: current density[current density:3]
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.6083E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=4) (NRM,RELC): (  5056627.1      1.9999991     ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.6549E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=5) (NRM,RELC): (  5039693.8     0.33543459E-02 ) :: mgdynamicscalc
DefaultSolve: Solving linear system with default routines
SolveSystem: Solving linear system
SolveLinearSystem: Assuming real valued linear system
SolveLinearSystem: Assuming serial linear system
ScaleLinearSystem: Scaling diagonal entries to unity
SolveLinearSystem: Linear System Preconditioning: ilu0
SolveLinearSystem: Serial linear System Solver: iterative
IterSolver: Using iterative method: cg
       7 0.4279E-08
ComputeNorm: Computing norm of solution
ComputeChange: NS (ITER=6) (NRM,RELC): (  51538.578      1.9595080     ) :: mgdynamicscalc
MagnetoDynamicsCalcFields: Eddy current power:    2.120550E+00
MagnetoDynamicsCalcFields: ElectroMagnetic Field Energy:    5.286394E+04
Loading user function library: [MagnetoDynamics]...[MagnetoDynamicsCalcFields_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: circuits output
DefaultStart: Starting solver: circuits output
CircuitsOutput: Initializing Lagrange multipliers of size: 19
CircuitsOutput: Writing Circuit Results
CircuitsOutput: Writing Circuit Variables for Circuit 1
CircuitsOutput: There are 11 Circuit Variables
CircuitsOutput: i_IS1      5.0000E+01
CircuitsOutput: i_Rcl1      5.0000E+01
CircuitsOutput: i_component(1)      5.0000E+01
CircuitsOutput: i_component(3)      5.0000E+01
CircuitsOutput: v_IS1      5.0000E+00
CircuitsOutput: v_Rcl1      5.0000E+00
CircuitsOutput: v_component(1)     -3.6858E-05
CircuitsOutput: v_component(3)      7.0389E-05
CircuitsOutput: u_2_circuit_1      5.0000E+00
CircuitsOutput: u_3_circuit_1      3.3531E-05
CircuitsOutput: u_4_circuit_1      7.0389E-05
CircuitsOutput: Writing Component Variables for Circuit 1
CircuitsOutput: r_component(1)      0.0000E+00
CircuitsOutput: p_dc_component(1)      0.0000E+00
CircuitsOutput: r_component(3)      0.0000E+00
CircuitsOutput: p_dc_component(3)      0.0000E+00
CircuitsOutput: Writing Circuit Variables for Circuit 2
CircuitsOutput: There are 8 Circuit Variables
CircuitsOutput: i_IS2      1.0000E+02
CircuitsOutput: i_Rcl2      1.0000E+02
CircuitsOutput: i_component(2)      1.0000E+02
CircuitsOutput: v_IS2      9.9998E+00
CircuitsOutput: v_Rcl2      1.0000E+01
CircuitsOutput: v_component(2)     -1.5842E-04
CircuitsOutput: u_2_circuit_2      9.9998E+00
CircuitsOutput: u_3_circuit_2     -1.5842E-04
CircuitsOutput: Writing Component Variables for Circuit 2
CircuitsOutput: r_component(2)      0.0000E+00
CircuitsOutput: p_dc_component(2)      0.0000E+00
DefaultFinish: Finished solver: circuits output
Loading user function library: [CircuitsAndDynamics]...[CircuitsOutput_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: resultoutput
ResultOutputSolver: -------------------------------------
ResultOutputSolver: Working on mesh: MESH
ResultOutputSolver: Dimension of mesh is: 3
ResultOutputSolver: Saving in unstructured VTK XML (.vtu) format
VtuOutputSolver: Full filename base is: RESU/coil
GenerateSaveMask: Number of active elements 62447 out of 62447
GenerateSaveMask: Number of geometry nodes 9022 out of 9022
VtuOutputSolver: Setting offset for boundary entities: 100
VtuOutputSolver: Writing the vtu file: RESU/coil_t0008.vtu
AscBinWriteInit: Initializing buffered ascii/binary writing
AscBinWriteInit: Writing in binary
AscBinWriteInit: Writing in double precision
AscBinWriteInit: Writing to unit number: 58
AscBinWriteInit: Size of buffer is: 9022
WriteVtuFile: Writing nodal fields
WriteVtuFile: Saving variable: coilpot
WriteVtuFile: Saving variable: coilpotb
WriteVtuFile: Saving variable: potselect
WriteVtuFile: Saving variable: coilsetb
WriteVtuFile: Saving variable: coilset
WriteVtuFile: Saving variable: coilindex e
WriteVtuFile: Saving variable: a
WriteVtuFile: Saving variable: coilcurrent e
WriteVtuFile: Saving variable: coilcurrent
WriteVtuFile: Saving variable: magnetic flux density
WriteVtuFile: Saving variable: current density
WriteVtuFile: Saving variable: magnetic flux density e
WriteVtuFile: Saving variable: current density e
WriteVtuFile: Number of nodal fields written: 9
WriteVtuFile: Writing elemental fields
WriteVtuFile: Number of elemental fields written: 4
WriteVtuFile: Writing entity IDs for bodies and boundaries
WriteVtuFile: Writing coordinates for each used node
WriteVtuFile: Writing the elemental connectivity data
WriteVtuFile: Writing nodal fields
WriteVtuFile: Saving variable: coilpot
WriteVtuFile: Saving variable: coilpotb
WriteVtuFile: Saving variable: potselect
WriteVtuFile: Saving variable: coilsetb
WriteVtuFile: Saving variable: coilset
WriteVtuFile: Saving variable: coilindex e
WriteVtuFile: Saving variable: a
WriteVtuFile: Saving variable: coilcurrent e
WriteVtuFile: Saving variable: coilcurrent
WriteVtuFile: Saving variable: magnetic flux density
WriteVtuFile: Saving variable: current density
WriteVtuFile: Saving variable: magnetic flux density e
WriteVtuFile: Saving variable: current density e
WriteVtuFile: Writing elemental fields
AscBinWriteFree: Terminating buffered ascii/binary writing
VtuOutputSolver: All done for now
ResultOutputSolver: -------------------------------------
Loading user function library: [ResultOutputSolve]...[ResultOutputSolver_post]
SingleSolver: Attempting to call solver
SingleSolver: Solver Equation string is: sv
SaveScalars: -----------------------------------------
SaveScalars: Saving scalar values of various kinds
SaveScalars: Performed 0 reduction operations
SaveScalars: Found 28 result scalars in simulation section
SaveScalars: Saving results from component - if any
SaveScalars: Found 28 values to save in total
SaveScalars: Saving values to file: RESU/coil.dat
SaveScalars: -----------------------------------------
Loading user function library: [SaveData]...[SaveScalars_post]
SaveResult: -----------------------------------------
SaveResult: Saving results to file: MESH/result.dat
SaveResult: Done writing results file
SaveResult: -----------------------------------------
ReloadInputFile: Realoading input file
LoadInputFile: Loading input file:
ElmerSolver: *** Elmer Solver: ALL DONE ***
ElmerSolver: The end
SOLVER TOTAL TIME(CPU,REAL):      2350.65     1661.65
ELMER SOLVER FINISHED AT: 2022/08/03 12:33:05
