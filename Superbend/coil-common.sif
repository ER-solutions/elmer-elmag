! Superbend - Paul Scherrer Institute, Switzerland
! Test case: Eelis Takala, Frederic Trillaud
! Original date: May 2021
! eelis.takala@gmail.com, ftrillaudp@gmail.com

Header
  CHECK KEYWORDS Warn
  Mesh DB "." "MESH"
  Results Directory "RESU"
End

Constants
  Gravity(4) = 0 0 -1 9.82
  Stefan Boltzmann = 5.67e-08
  Permittivity of Vacuum = 8.8542e-12
  Permeability of Vacuum = 1.256e-6
  Boltzmann Constant = 1.3807e-23
  Unit Charge = 1.602e-19
End


!!! BODIES !!!
!--- No need to give the body force for the circuit. By default, it is the body force 1
!--- However, it is necessary for the heat source to provide a body force
Body 1
  Name = "Racetrack 1"
  Target Bodies(1) = 1
  Equation = 1
  Material = 2
  Initial Condition = 1
  Body Force = 1
End

Body 2
  Name = "Racetrack 2"
  Target Bodies(1) = 2
  Equation = 1
  Material = 2
  Initial Condition = 1
  Body Force = 1
End

Body 3
  Name = "Coil 1"
  Target Bodies(1) = 3
  Equation = 1
  Material = 2
  Initial Condition = 1
  Body Force = 1
End

Body 4
  Name = "Coil 2"
  Target Bodies(1) = 4
  Equation = 1
  Material = 2
  Initial Condition = 1
  Body Force = 1
End

Body 5
  Name = "Core"
  Target Bodies(1) = 5
  Equation = 2
  Material = 3
  Initial Condition = 1
End

Body 6
  Name = "air"
  Target Bodies(1) = 6
  Equation = 2
  Material = 1
  Initial Condition = 1
End


!!! COMPONENTS !!!
Component 1
  Name = String "Components of racetrack 1"
  Coil Type = String "test"
  Master Bodies(1) = Integer 1
  Desired Current Density = Real 1.0
  Coil Type = String stranded
  Coil Use W Vector = Logical True
  W Vector Variable Name = String "CoilCurrent e"
  Number of Turns = Real 1710
  Electrode Area = Real $ racetrackWidth*racetrackThickness
  Resistance = Real 0.0
  Fit Coil = Logical False
  Coil Normal(3) = Real 0.0 0.0 1.0
  Coil Center(3) = Real 0.0 0.0 $ 0.5*(racetrackThickness+gap)
End

Component 2
  Name = String "Components of racetrack 2"
  Coil Type = String "test"
  Master Bodies(1) = Integer 2
  Desired Current Density = Real 1.0
  Coil Type = String stranded
  Coil Use W Vector = Logical True
  W Vector Variable Name = String "CoilCurrent e"
  Number of Turns = Real 1710
  Electrode Area = Real $ racetrackWidth*racetrackThickness
  Resistance = Real 0.0
  Fit Coil = Logical False
  Coil Normal(3) = Real 0.0 0.0 1.0
  Coil Center(3) = Real 0.0 0.0 $ -0.5*(racetrackThickness+gap)
End

Component 3
  Name = String "Components of coil  3"
  Coil Type = String "test"
  Master Bodies(1) = Integer 3
  Desired Current Density = Real 1.0
  Coil Type = String stranded
  Coil Use W Vector = Logical True
  W Vector Variable Name = String "CoilCurrent e"
  Number of Turns = Real 696
  Electrode Area = Real $ coilWidth*coilThickness
  Resistance = Real 0.0
  Fit Coil = Logical False
  Coil Normal(3) = Real 0.0 0.0 1.0
  Coil Center(3) = Real 0.0 0.0 $ 0.5*(coilThickness+gap)
End

Component 4
  Name = String "Components of coil 4"
  Coil Type = String "test"
  Master Bodies(1) = Integer 4
  Desired Current Density = Real 1.0
  Coil Type = String stranded
  Coil Use W Vector = Logical True
  W Vector Variable Name = String "CoilCurrent e"
  Number of Turns = Real 696
  Electrode Area = Real $ coilWidth*coilThickness
  Resistance = Real 0.0
  Fit Coil = Logical False
  Coil Normal(3) = Real 0.0 0.0 1.0
  Coil Center(3) = Real 0.0 0.0 $ -0.5*(coilThickness+gap)
End


!!! MATERIAL PROPERTIES !!!
Material 1
  Name = "Air"
  Relative Permeability = Real 1.0
  Relative Permittivity = Real 1.0
End

Material 2
  Name = "Inductor"
  Relative Permeability = Real 1.0
  Relative Permittivity = Real 1.0

  ! Heat Conductivity(3,3) = Variable Temperature, Magnetic Flux Density e, Current Density e
  !   Real Procedure "./Fortran90/therConductivity" "getTherConductivity"
  !
  ! Density = Real 9010.0
  ! Heat Capacity = Variable Temperature
  !   Real
  !     Include "./DATA/cp_eq.dat"
  !   End
  !
  ! !--- Parameters of superconducting wire and coil
  ! Matrix Density = Real 8960.0
  ! Superconductor Density = Real 7000.0
  ! Matrix Electric Conductivity = Real 1e8 ! lumped materials called matrix
  ! Critical Temperature = Real 16.8
  ! N-Value = Real 15.0
  ! Critical Electrical Field = Real 1e-4
  ! Operating Temperature = Real $ Top
  ! Matrix to Superconductor Ratio = Real 1.2
  ! Filling Factor = Real 0.9

  !--- Read into the circuit solver: computes the resistance as the sum of all the element contribution
  Electric Conductivity = Real 1e8
  ! Electric Conductivity = Variable Temperature, Magnetic Flux Density e, Current Density e
  ! Electric Conductivity = Variable 4.5, Magnetic Flux Density e, Current Density e
  !   Real Procedure "./Fortran90/electricalConductivity" "getElectricalConductivity"
End

Material 3
  Name = "Iron"
  Relative Permeability = Real 1.0
  Relative Permittivity = Real 1.0

  ! H-B Curve = Variable "dummy"
  !   Real Cubic Monotone
  !     Include ./DATA/curve_BH-CERN.dat
  !   End

  ! !--- k of ARMCO (works with try.dat if we do not had the next include of the cp
  ! !--- Real means: Real Piecewise Linear
  ! Heat Conductivity = Variable Temperature
  !   Real
  !     Include "./DATA/k_T_armco.dat"
  !   End
  !
  ! Density = Real 7860.0
  ! Heat Capacity = Variable Temperature
  !   Real
  !     Include "./DATA/cp_T_316LN.dat"
  !   End
End

Material 4
  Name = "G10"
  Relative Permeability = Real 1.0
  Relative Permittivity = Real 1.0

  ! !--- k of epoxy
  ! Heat Conductivity = Variable Temperature
  !   Real
  !     Include "./DATA/k_T_epoxy.dat"
  !   End
  !
  ! Density = Real 1800.0
  ! !--- cp of epoxy
  ! Heat Capacity = Variable Temperature
  !   Real
  !     Include "./DATA/cp_T_epoxy.dat"
  !   End
End


!!! INITIAL AND BOUNDARY CONDITIONS !!!
Initial Condition 1
  Name = "Initial state"
  A {e} = Real 0.0
  A = Real 0.0
  Jfix = Real 0.0
  ! Temperature = Real $ Top
End

Boundary Condition 1
  Name = "Air boundary"
  Target Boundaries(1) = 7
  A {e} = real 0
  ! A = real 0
  ! Jfix = real 0.0
End

! Boundary Condition 2
!   Name = "Fixed temperature at 4.5 k"
!   Target Boundaries(1) = 12
!   Temperature = Real $ Top
! End

! Boundary Condition 3
!   Name = "Fixed temperature at 50 k"
!   Target Boundaries(1) = 13
!   Temperature = Real 50.0
! End

! Boundary Condition 4
!   Name = "Heat radiation as a heat flux [W/m^2]"
!   Target Boundaries(1) = 14
!   Heat Flux BC = Logical True
!   Heat Flux = Real 0.03
! End


!!! SOLVERS !!!
Solver 1  !--- CoilSolver: Current density in closed coil
  Exec Solver = Before All
  Equation = "CoilSolver"
  Procedure = "CoilSolver" "CoilSolver"

  Steady State Convergence Tolerance = 1.0e-6 ! related to the Steady State Iterations (see Simulation)

  Linear System Solver = "Iterative"
  Linear System Preconditioning = ILU1
  Linear System Max Iterations = 500
  Linear System Convergence Tolerance = 1.0e-8 ! to get proper current density flow
  Linear System Iterative Method = BiCGStab
  Linear System Residual Output = 1

  Normalize Coil Current = Logical True ! necessary to have a uniform current across the coil
  Fix Input Current Density = Logical True
  Nonlinear System Consistent Norm = Logical True
  Coil Closed = Logical True
  Narrow Interface = Logical True

  Save Coil Set = Logical True
  Save Coil Index = Logical True
  Calculate Elemental Fields = Logical True
End

Solver 2 !--- CircuitsAndDynamics: External electrical circuit
   Exec Solver = Always
   Equation = Circuits
   Procedure = "CircuitsAndDynamics" "CircuitsAndDynamics"
   Variable = X
   No Matrix = Logical True
End

Solver 3  !---- MagnetoDynamics, WhitneyAVSolver: A-V solver
   Exec Solver = Always
   Equation = "MGDynamics"
   Variable = "A"
   Procedure = "MagnetoDynamics" "WhitneyAVSolver"

   Nonlinear Pre Solvers(1) = 2 ! run the circuit solver iteratively
   Post Solvers(1) = 4 ! postprocess the circuit outputs

   Steady State Convergence Tolerance = 1.0e-6

   Nonlinear System Convergence Tolerance = 1e-6
   Nonlinear System Max Iterations = 50
   !Nonlinear System Newton After Iterations = 5 ! change from Picard to Newton after 5 iterations
   Nonlinear System Newton After Tolerance = 1.0e-6
   Nonlinear System Relaxation Factor = 0.98

   Export Lagrange Multiplier = Logical True

   !--- Solution circuit:
   Linear System Solver = Iterative
   Linear System Iterative Method = BicgstabL
   BicgstabL polynomial degree = 4
   Linear System Preconditioning = circuit ! inversion of circuit matrix
   Linear System Convergence Tolerance = 1.0e-8 ! add to drop the tolerance
   Linear System Max Iterations = 3000
   Linear System Residual Output = 20
End

Solver 4  !---- MagnetoAndDynamics, MagnetoDynamicsCalcFields: filed computation from A-V solver
  Exec Solver = Always
  Equation = MGDynamicsCalc
  Procedure = "MagnetoDynamics" "MagnetoDynamicsCalcFields"

  Potential Variable = String "A"

  Steady State Convergence Tolerance = 1.0e-6

  Linear System Solver = Iterative
  Linear System Symmetric = True
  Linear System Iterative Method = CG
  Linear System Max Iterations = 3000
  Linear System Convergence Tolerance = 1.0e-7
  Linear System Preconditioning = ILU0
  Linear System ILUT Tolerance = 1.0e-6
  Linear System Abort Not Converged = False
  Linear System Residual Output = 1
  Linear System Precondition Recompute = 1
  Linear System Residual Output = 10

  Discontinuous Bodies = Logical True

  Calculate Elemental Fields = Logical True
  Calculate Current Density = Logical True
End

Solver 5  !--- CircuitsAndDynamics, CircuitsOutput: save data from circuit
   Exec Solver = Always
   Equation = Circuits Output
   Procedure = "CircuitsAndDynamics" "CircuitsOutput"
End

! Solver 8 !--- HeatSolve: Heat balance equation
!   Exec Solver = Always
!   Equation = String "Heat Equation"
!   Procedure = "HeatSolve" "HeatSolver"
!
!   Variable = -dofs 1 Temperature
!
!   Stabilize = True
!
!   Steady State Convergence Tolerance = 1.0e-6
!
!   Nonlinear Timestepping = Logical True
!
!   Nonlinear System Convergence Tolerance = 1.0e-6
!   Nonlinear System Max Iterations = 25
!   Nonlinear System Newton After Iterations = 10
!   Nonlinear System Newton After Tolerance = 1.0e-4
!   Nonlinear System Relaxation Factor = 0.5
!
!   Linear System Solver = Iterative
!   Linear System Iterative Method = BiCGStabl
!   Linear System Max Iterations = 500
!   Linear System Convergence Tolerance = 1.0e-6
!   BiCGstabl polynomial degree = 6
!   Linear System Abort Not Converged = Logical False
!   Linear System Preconditioning = ILU2 ! none
!   Linear System Residual Output = 10
!   Linear System Precondition Recompute = 1
! End
!
! Solver 9 !--- Filter: soft filter for the temperature field
!   !--- If T < T_min (minimum temperature expected in the system) then T = T_min
!   Exec Solver = Always
!   Equation = String "Filter"
!   Procedure = "./Fortran90/regularization" "getRegularizationSolver"
!   Minimum Temperature = Real 4.5
! End
!
! Solver 10 !--- Check Model: Check if nodes are inside the volume of the disturbance, otherwise, the program stops
!   Exec Solver = Always
!   Equation = String "Check Model"
!   Procedure = "./Fortran90/checkMeshSize" "getCheckMeshSizeSolver"
! End


!!! EQUATIONS !!!
Equation 1
  Name = "Multiphysics for solids"
  Active Solvers(7) = 1 2 3 4 5 6 7
  ! Active Solvers(10) = 1 2 3 4 5 6 7 8 9 10
  ! Heat Equation = Logical True
End

Equation 2
  Name = "MagnetoDynamic for air"
  Active Solvers(3) = 3 4 6
End
